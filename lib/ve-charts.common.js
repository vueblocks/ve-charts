module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "068a":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".ve-charts-empty-data{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "0e45":
/***/ (function(module) {

module.exports = JSON.parse("{\"北京市\":[116.46,39.92],\"天津市\":[117.2,39.13],\"上海市\":[121.48,31.22],\"重庆市\":[106.54,29.59],\"七台河市\":[130.95,45.78],\"万宁市\":[110.4,18.8],\"万州区\":[108.4,30.82],\"三亚市\":[109.5,18.25],\"三明市\":[117.62,26.27],\"三沙市\":[112.2,16.5],\"三门峡市\":[111.2,34.78],\"上饶市\":[117.97,28.45],\"东丽区\":[117.3,39.08],\"东城区\":[116.42,39.93],\"东方市\":[108.63,19.1],\"东莞市\":[113.75,23.05],\"东营市\":[118.67,37.43],\"中卫市\":[105.18,37.52],\"中山市\":[113.38,22.52],\"丰台区\":[116.28,39.85],\"丰都县\":[107.73,29.87],\"临夏州\":[103.22,35.6],\"临汾市\":[111.52,36.08],\"临沂市\":[118.35,35.05],\"临沧市\":[100.08,23.88],\"临高县\":[109.68,19.92],\"丹东市\":[124.38,40.13],\"丽水市\":[119.92,28.45],\"丽江市\":[100.23,26.88],\"乌兰察布市\":[113.12,40.98],\"乌海市\":[106.82,39.67],\"乌鲁木齐市\":[87.62,43.82],\"乐东县\":[109.17,18.75],\"乐山市\":[103.77,29.57],\"九江市\":[116,29.7],\"九龙坡区\":[106.5,29.5],\"云浮市\":[112.03,22.92],\"云阳县\":[108.67,30.95],\"五家渠市\":[87.53,44.17],\"五指山市\":[109.52,18.78],\"亳州市\":[115.78,33.85],\"仙桃市\":[113.45,30.37],\"伊春市\":[128.9,47.73],\"伊犁州\":[81.32,43.92],\"佛山市\":[113.12,23.02],\"佳木斯市\":[130.37,46.82],\"保亭县\":[109.7,18.63],\"保定市\":[115.47,38.87],\"保山市\":[99.17,25.12],\"信阳市\":[114.07,32.13],\"儋州市\":[109.57,19.52],\"克拉玛依市\":[84.87,45.6],\"六安市\":[116.5,31.77],\"六盘水市\":[104.83,26.6],\"兰州市\":[103.82,36.07],\"兴安盟\":[122.05,46.08],\"内江市\":[105.05,29.58],\"凉山州\":[102.27,27.9],\"包头市\":[109.83,40.65],\"北海市\":[109.12,21.48],\"北碚区\":[106.4,29.8],\"北辰区\":[117.13,39.22],\"十堰市\":[110.78,32.65],\"南京市\":[118.78,32.07],\"南充市\":[106.08,30.78],\"南宁市\":[109.29,22.8],\"南岸区\":[106.57,29.52],\"南川区\":[107.17,29.14],\"南平市\":[118.17,26.65],\"南开区\":[117.15,39.13],\"南昌市\":[115.85,28.68],\"南通市\":[120.88,31.98],\"南阳市\":[112.52,33],\"博尔塔拉州\":[82.07,44.9],\"厦门市\":[118.08,24.48],\"双鸭山市\":[131.15,46.63],\"台州市\":[121.43,28.68],\"合川区\":[106.3,30.11],\"合肥市\":[117.25,31.83],\"吉安市\":[114.98,27.12],\"吉林市\":[126.55,43.83],\"吐鲁番地区\":[89.17,42.95],\"吕梁市\":[111.13,37.52],\"吴忠市\":[106.2,37.98],\"周口市\":[114.65,33.62],\"呼伦贝尔市\":[119.77,49.22],\"呼和浩特市\":[111.73,40.83],\"和平区\":[117.2,39.12],\"和田地区\":[79.92,37.12],\"咸宁市\":[114.32,29.85],\"咸阳市\":[108.7,34.33],\"哈密地区\":[93.52,42.83],\"哈尔滨市\":[126.53,45.8],\"唐山市\":[118.2,39.63],\"商丘市\":[115.65,34.45],\"商洛市\":[109.93,33.87],\"喀什地区\":[75.98,39.47],\"嘉兴市\":[120.75,30.75],\"嘉定区\":[121.27,31.38],\"嘉峪关市\":[98.27,39.8],\"四平市\":[124.35,43.17],\"固原市\":[106.28,36],\"图木舒克市\":[79.13,39.85],\"垫江县\":[107.35,30.33],\"城口县\":[108.67,31.95],\"塔城地区\":[82.98,46.75],\"塘沽区\":[117.65,39.02],\"大兴区\":[116.33,39.73],\"大兴安岭地区\":[124.12,50.42],\"大同市\":[113.3,40.08],\"大庆市\":[125.03,46.58],\"大渡口区\":[106.48,29.48],\"大港区\":[117.45,38.83],\"大理州\":[100.23,25.6],\"大足区\":[105.72,29.7],\"大连市\":[121.62,38.92],\"天水市\":[105.72,34.58],\"天门市\":[113.17,30.67],\"太原市\":[112.55,37.87],\"奉节县\":[109.47,31.02],\"奉贤区\":[121.47,30.92],\"威海市\":[122.12,37.52],\"娄底市\":[112,27.73],\"孝感市\":[113.92,30.93],\"宁德市\":[119.52,26.67],\"宁河县\":[117.82,39.33],\"宁波市\":[121.55,29.88],\"安庆市\":[117.05,30.53],\"安康市\":[109.02,32.68],\"安阳市\":[114.38,36.1],\"安顺市\":[105.95,26.25],\"定安县\":[110.32,19.7],\"定西市\":[104.62,35.58],\"宜宾市\":[104.62,28.77],\"宜昌市\":[111.28,30.7],\"宜春市\":[114.38,27.8],\"宝坻区\":[117.3,39.72],\"宝山区\":[131.4,46.57],\"宝鸡市\":[107.13,34.37],\"宣城市\":[118.75,30.95],\"宣武区\":[116.35,39.87],\"宿州市\":[116.98,33.63],\"宿迁市\":[118.28,33.97],\"密云区\":[116.83,40.37],\"屯昌县\":[110.1,19.37],\"山南地区\":[91.77,29.23],\"岳阳市\":[113.12,29.37],\"崇左市\":[107.37,22.4],\"崇文区\":[116.43,39.88],\"崇明县\":[121.53,31.63],\"巫山县\":[109.88,31.08],\"巫溪县\":[109.63,31.4],\"巴中市\":[106.77,31.85],\"巴南区\":[106.52,29.38],\"巴彦淖尔市\":[107.42,40.75],\"巴音郭楞州\":[86.15,41.77],\"常州市\":[119.95,31.78],\"常德市\":[111.68,29.05],\"平凉市\":[106.67,35.55],\"平谷区\":[117.12,40.13],\"平顶山市\":[113.18,33.77],\"广元市\":[105.83,32.43],\"广安市\":[106.63,30.47],\"广州市\":[113.27,23.13],\"庆阳市\":[107.63,35.73],\"廊坊市\":[116.7,39.52],\"延安市\":[109.48,36.6],\"延庆县\":[115.97,40.45],\"延边州\":[129.5,42.88],\"开县\":[108.42,31.18],\"开封市\":[114.3,34.8],\"张家口市\":[114.88,40.82],\"张家界市\":[110.47,29.13],\"张掖市\":[100.45,38.93],\"彭水县\":[108.17,29.3],\"徐州市\":[117.18,34.27],\"徐汇区\":[121.43,31.18],\"德宏州\":[98.58,24.43],\"德州市\":[116.3,37.45],\"德阳市\":[104.38,31.13],\"忠县\":[108.02,30.3],\"忻州市\":[112.73,38.42],\"怀化市\":[110,27.57],\"怀柔区\":[116.63,40.32],\"怒江州\":[98.85,25.85],\"恩施州\":[109.5,30.3],\"惠州市\":[114.42,23.12],\"成都市\":[104.07,30.67],\"房山区\":[116.13,39.75],\"扬州市\":[119.4,32.4],\"承德市\":[117.93,40.97],\"抚州市\":[116.35,28],\"抚顺市\":[123.98,41.88],\"拉萨市\":[91.13,29.65],\"揭阳市\":[116.37,23.55],\"攀枝花市\":[101.72,26.58],\"文山州\":[104.25,23.37],\"文昌市\":[110.8,19.55],\"新乡市\":[113.9,35.3],\"新余市\":[114.92,27.82],\"无锡市\":[120.3,31.57],\"日喀则地区\":[88.88,29.27],\"日照市\":[119.52,35.42],\"昆明市\":[102.72,25.05],\"昌吉州\":[87.3,44.02],\"昌平区\":[116.23,40.22],\"昌江县\":[109.05,19.25],\"昌都地区\":[97.18,31.13],\"昭通市\":[103.72,27.33],\"晋中市\":[112.75,37.68],\"晋城市\":[112.83,35.5],\"普洱市\":[100.98,22.78],\"普陀区\":[121.4,31.25],\"景德镇市\":[117.17,29.27],\"曲靖市\":[103.8,25.5],\"朔州市\":[112.43,39.33],\"朝阳区\":[116.43,39.92],\"朝阳市\":[120.45,41.57],\"本溪市\":[123.77,41.3],\"来宾市\":[109.23,23.73],\"杨浦区\":[121.52,31.27],\"杭州市\":[120.15,30.28],\"松原市\":[124.82,45.13],\"松江区\":[121.22,31.03],\"林芝地区\":[94.37,29.68],\"果洛州\":[100.23,34.48],\"枣庄市\":[117.32,34.82],\"柳州市\":[109.42,24.32],\"株洲市\":[113.13,27.83],\"桂林市\":[110.28,25.28],\"梁平县\":[107.8,30.68],\"梅州市\":[116.12,24.28],\"梧州市\":[111.27,23.48],\"楚雄州\":[101.55,25.03],\"榆林市\":[109.73,38.28],\"武威市\":[102.63,37.93],\"武汉市\":[114.3,30.6],\"武清区\":[117.03,39.38],\"武隆县\":[107.75,29.33],\"毕节市\":[105.28,27.3],\"永川区\":[105.87,29.29],\"永州市\":[111.62,26.43],\"汉中市\":[107.02,33.07],\"汉沽区\":[117.8,39.25],\"汕头市\":[116.68,23.35],\"汕尾市\":[115.37,22.78],\"江北区\":[121.55,29.88],\"江津区\":[106.3,29.03],\"江门市\":[113.08,22.58],\"池州市\":[117.48,30.67],\"沈阳市\":[123.43,41.8],\"沙坪坝区\":[106.45,29.53],\"沧州市\":[116.83,38.3],\"河东区\":[117.22,39.12],\"河北区\":[117.18,39.15],\"河池市\":[108.07,24.7],\"河源市\":[114.7,23.73],\"河西区\":[117.22,39.12],\"泉州市\":[118.67,24.88],\"泰安市\":[117.08,36.2],\"泰州市\":[119.92,32.45],\"泸州市\":[105.43,28.87],\"洛阳市\":[112.45,34.62],\"津南区\":[117.38,38.98],\"济南市\":[116.98,36.67],\"济宁市\":[116.58,35.42],\"济源市\":[112.58,35.07],\"浦东新区\":[121.53,31.22],\"海东地区\":[102.12,36.5],\"海北州\":[100.9,36.97],\"海南州\":[100.62,36.28],\"海口市\":[110.32,20.03],\"海淀区\":[116.3,39.95],\"海西州\":[97.37,37.37],\"涪陵区\":[107.4,29.72],\"淄博市\":[118.05,36.82],\"淮北市\":[116.8,33.95],\"淮南市\":[117,32.63],\"淮安市\":[119.02,33.62],\"深圳市\":[114.05,22.55],\"清远市\":[113.03,23.7],\"渝中区\":[106.57,29.55],\"渝北区\":[106.63,29.72],\"温州市\":[120.7,28],\"渭南市\":[109.5,34.5],\"湖州市\":[120.08,30.9],\"湘潭市\":[112.93,27.83],\"湘西州\":[109.74,28.31],\"湛江市\":[110.35,21.27],\"滁州市\":[118.32,32.3],\"滨州市\":[117.97,37.38],\"漯河市\":[114.02,33.58],\"漳州市\":[117.65,24.52],\"潍坊市\":[119.15,36.7],\"潜江市\":[112.88,30.42],\"潮州市\":[116.62,23.67],\"潼南县\":[105.83,30.18],\"澄迈县\":[110,19.73],\"濮阳市\":[115.03,35.77],\"烟台市\":[121.43,37.45],\"焦作市\":[113.25,35.22],\"牡丹江市\":[129.6,44.58],\"玉林市\":[110.17,22.63],\"玉树州\":[97.02,33],\"玉溪市\":[102.55,24.35],\"珠海市\":[113.57,22.27],\"琼中县\":[109.83,19.03],\"琼海市\":[110.47,19.25],\"璧山县\":[106.22,29.6],\"甘南州\":[102.92,34.98],\"甘孜州\":[101.97,30.05],\"白城市\":[122.83,45.62],\"白山市\":[126.42,41.93],\"白沙县\":[109.45,19.23],\"白银市\":[104.18,36.55],\"百色市\":[106.62,23.9],\"益阳市\":[112.32,28.6],\"盐城市\":[120.15,33.35],\"盘锦市\":[122.07,41.12],\"眉山市\":[103.83,30.05],\"石嘴山市\":[106.38,39.02],\"石家庄市\":[114.52,38.05],\"石景山区\":[116.22,39.9],\"石柱县\":[108.12,30],\"石河子市\":[86.03,44.3],\"神农架林区\":[110.67,31.75],\"福州市\":[119.3,26.08],\"秀山县\":[108.98,28.45],\"秦皇岛市\":[119.6,39.93],\"綦江区\":[106.65,29.03],\"红桥区\":[117.15,39.17],\"红河州\":[103.4,23.37],\"绍兴市\":[120.57,30],\"绥化市\":[126.98,46.63],\"绵阳市\":[104.73,31.47],\"聊城市\":[115.98,36.45],\"肇庆市\":[112.47,23.05],\"自贡市\":[104.78,29.35],\"舟山市\":[122.2,30],\"芜湖市\":[118.38,31.33],\"苏州市\":[120.58,31.3],\"茂名市\":[110.92,21.67],\"荆州市\":[112.23,30.33],\"荆门市\":[112.2,31.03],\"荣昌县\":[105.58,29.4],\"莆田市\":[119,25.43],\"莱芜市\":[117.67,36.22],\"菏泽市\":[115.46,35.26],\"萍乡市\":[113.85,27.63],\"营口市\":[122.23,40.67],\"葫芦岛市\":[120.83,40.72],\"蓟县\":[117.4,40.05],\"虹口区\":[121.5,31.27],\"蚌埠市\":[117.38,32.92],\"衡水市\":[115.68,37.73],\"衡阳市\":[112.57,26.9],\"衢州市\":[118.87,28.93],\"襄阳市\":[112.2,32.08],\"西双版纳州\":[100.8,22.02],\"西城区\":[116.37,39.92],\"西宁市\":[101.78,36.62],\"西安市\":[108.93,34.27],\"西青区\":[117,39.13],\"许昌市\":[113.85,34.03],\"贵港市\":[109.6,23.1],\"贵阳市\":[106.63,26.65],\"贺州市\":[111.55,24.42],\"资阳市\":[104.65,30.12],\"赣州市\":[114.93,25.83],\"赤峰市\":[118.92,42.27],\"辽源市\":[125.13,42.88],\"辽阳市\":[123.17,41.27],\"达州市\":[107.5,31.22],\"运城市\":[110.98,35.02],\"连云港市\":[119.22,34.6],\"迪庆州\":[99.7,27.83],\"迪庆藏族自治县\":[99.7,27.83],\"通化市\":[125.93,41.73],\"通州区\":[116.65,39.92],\"通辽市\":[122.27,43.62],\"遂宁市\":[105.57,30.52],\"遵义市\":[106.92,27.73],\"邢台市\":[114.48,37.07],\"那曲地区\":[92.07,31.48],\"邯郸市\":[114.48,36.62],\"邵阳市\":[111.47,27.25],\"郑州市\":[113.62,34.75],\"郴州市\":[113.02,25.78],\"鄂尔多斯市\":[109.8,39.62],\"鄂州市\":[114.88,30.4],\"酉阳县\":[108.77,28.85],\"酒泉市\":[98.52,39.75],\"金华市\":[119.65,29.08],\"金山区\":[121.33,30.75],\"金昌市\":[102.18,38.5],\"钦州市\":[108.62,21.95],\"铁岭市\":[123.83,42.28],\"铜仁市\":[109.18,27.72],\"铜川市\":[108.93,34.9],\"铜梁县\":[106.05,29.85],\"铜陵市\":[117.82,30.93],\"银川市\":[106.28,38.47],\"锡林郭勒盟\":[116.07,43.95],\"锦州市\":[121.13,41.1],\"镇江市\":[119.45,32.2],\"长宁区\":[121.42,31.22],\"长寿区\":[107.08,29.87],\"长春市\":[125.32,43.9],\"长沙市\":[112.93,28.23],\"长治市\":[113.11,36.2],\"门头沟\":[116.1,39.93],\"闵行区\":[121.38,31.12],\"闸北区\":[121.45,31.25],\"阜新市\":[121.67,42.02],\"阜阳市\":[115.82,32.9],\"防城港市\":[108.35,21.7],\"阳江市\":[111.98,21.87],\"阳泉市\":[113.57,37.85],\"阿克苏地区\":[80.27,41.17],\"阿勒泰地区\":[88.13,47.85],\"阿坝州\":[102.22,31.9],\"阿拉善盟\":[105.67,38.83],\"阿拉尔市\":[81.28,40.55],\"阿里地区\":[80.1,32.5],\"陇南市\":[104.92,33.4],\"陵水县\":[110.03,18.5],\"随州市\":[113.37,31.72],\"雅安市\":[103,29.98],\"青岛市\":[120.38,36.07],\"青浦区\":[121.12,31.15],\"静安区\":[121.45,31.23],\"静海县\":[116.92,38.93],\"鞍山市\":[122.98,41.1],\"韶关市\":[113.6,24.82],\"韶山市\":[112.52,27.93],\"顺义区\":[116.65,40.13],\"马鞍山市\":[118.5,31.7],\"驻马店市\":[114.02,32.98],\"鸡西市\":[130.97,45.3],\"鹤壁市\":[114.28,35.75],\"鹤岗市\":[130.27,47.33],\"鹰潭市\":[117.07,28.27],\"黄冈市\":[114.87,30.45],\"黄南州\":[102.02,35.52],\"黄山市\":[118.33,29.72],\"黄浦区\":[121.48,31.23],\"黄石市\":[115.03,30.2],\"黑河市\":[127.48,50.25],\"黔东南州\":[107.97,26.58],\"黔南州\":[107.52,26.27],\"黔江区\":[108.77,29.53],\"黔西南州\":[106.12,27.05],\"齐齐哈尔市\":[123.95,47.33],\"龙岩市\":[117.03,25.1]}");

/***/ }),

/***/ "0fcc":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("3461");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("d14a69d0", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "137f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_3_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LoadingChart_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("3a88");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_3_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LoadingChart_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_3_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LoadingChart_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_10_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_3_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LoadingChart_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "1523":
/***/ (function(module, exports) {

module.exports = require("zrender");

/***/ }),

/***/ "24fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    for (var i = 0; i < modules.length; i++) {
      var item = [].concat(modules[i]);

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot).concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "26ee":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5ea3");


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] || freeSelf || Function('return this')();

/* harmony default export */ __webpack_exports__["a"] = (root);


/***/ }),

/***/ "274d":
/***/ (function(module) {

module.exports = JSON.parse("{\"北京\":[116.46,39.92],\"天津\":[117.2,39.13],\"上海\":[121.48,31.22],\"重庆\":[106.54,29.59],\"七台河\":[130.95,45.78],\"万宁\":[110.4,18.8],\"三亚\":[109.5,18.25],\"三明\":[117.62,26.27],\"三沙\":[112.2,16.5],\"三门峡\":[111.2,34.78],\"上饶\":[117.97,28.45],\"东方\":[108.63,19.1],\"东莞\":[113.75,23.05],\"东营\":[118.67,37.43],\"中卫\":[105.18,37.52],\"中山\":[113.38,22.52],\"临汾\":[111.52,36.08],\"临沂\":[118.35,35.05],\"临沧\":[100.08,23.88],\"丹东\":[124.38,40.13],\"丽水\":[119.92,28.45],\"丽江\":[100.23,26.88],\"乌兰察布\":[113.12,40.98],\"乌海\":[106.82,39.67],\"乌鲁木齐\":[87.62,43.82],\"乐山\":[103.77,29.57],\"九江\":[116,29.7],\"云浮\":[112.03,22.92],\"五家渠\":[87.53,44.17],\"五指山\":[109.52,18.78],\"亳州\":[115.78,33.85],\"仙桃\":[113.45,30.37],\"伊春\":[128.9,47.73],\"佛山\":[113.12,23.02],\"佳木斯\":[130.37,46.82],\"保定\":[115.47,38.87],\"保山\":[99.17,25.12],\"信阳\":[114.07,32.13],\"儋州\":[109.57,19.52],\"克拉玛依\":[84.87,45.6],\"六安\":[116.5,31.77],\"六盘水\":[104.83,26.6],\"兰州\":[103.82,36.07],\"兴安盟\":[122.05,46.08],\"内江\":[105.05,29.58],\"包头\":[109.83,40.65],\"北海\":[109.12,21.48],\"十堰\":[110.78,32.65],\"南京\":[118.78,32.07],\"南充\":[106.08,30.78],\"南宁\":[109.29,22.8],\"南平\":[118.17,26.65],\"南昌\":[115.85,28.68],\"南通\":[120.88,31.98],\"南阳\":[112.52,33],\"厦门\":[118.08,24.48],\"双鸭山\":[131.15,46.63],\"台州\":[121.43,28.68],\"合肥\":[117.25,31.83],\"吉安\":[114.98,27.12],\"吉林\":[126.55,43.83],\"吕梁\":[111.13,37.52],\"吴忠\":[106.2,37.98],\"周口\":[114.65,33.62],\"呼伦贝尔\":[119.77,49.22],\"呼和浩特\":[111.73,40.83],\"咸宁\":[114.32,29.85],\"咸阳\":[108.7,34.33],\"哈尔滨\":[126.53,45.8],\"唐山\":[118.2,39.63],\"商丘\":[115.65,34.45],\"商洛\":[109.93,33.87],\"嘉兴\":[120.75,30.75],\"嘉峪关\":[98.27,39.8],\"四平\":[124.35,43.17],\"固原\":[106.28,36],\"图木舒克\":[79.13,39.85],\"大同\":[113.3,40.08],\"大庆\":[125.03,46.58],\"大连\":[121.62,38.92],\"天水\":[105.72,34.58],\"天门\":[113.17,30.67],\"太原\":[112.55,37.87],\"威海\":[122.12,37.52],\"娄底\":[112,27.73],\"孝感\":[113.92,30.93],\"宁德\":[119.52,26.67],\"宁波\":[121.55,29.88],\"安庆\":[117.05,30.53],\"安康\":[109.02,32.68],\"安阳\":[114.38,36.1],\"安顺\":[105.95,26.25],\"定西\":[104.62,35.58],\"宜宾\":[104.62,28.77],\"宜昌\":[111.28,30.7],\"宜春\":[114.38,27.8],\"宝鸡\":[107.13,34.37],\"宣城\":[118.75,30.95],\"宿州\":[116.98,33.63],\"宿迁\":[118.28,33.97],\"岳阳\":[113.12,29.37],\"崇左\":[107.37,22.4],\"巴中\":[106.77,31.85],\"巴彦淖尔\":[107.42,40.75],\"常州\":[119.95,31.78],\"常德\":[111.68,29.05],\"平凉\":[106.67,35.55],\"平顶山\":[113.18,33.77],\"广元\":[105.83,32.43],\"广安\":[106.63,30.47],\"广州\":[113.27,23.13],\"庆阳\":[107.63,35.73],\"廊坊\":[116.7,39.52],\"延安\":[109.48,36.6],\"开封\":[114.3,34.8],\"张家口\":[114.88,40.82],\"张家界\":[110.47,29.13],\"张掖\":[100.45,38.93],\"徐州\":[117.18,34.27],\"德州\":[116.3,37.45],\"德阳\":[104.38,31.13],\"忻州\":[112.73,38.42],\"怀化\":[110,27.57],\"惠州\":[114.42,23.12],\"成都\":[104.07,30.67],\"扬州\":[119.4,32.4],\"承德\":[117.93,40.97],\"抚州\":[116.35,28],\"抚顺\":[123.98,41.88],\"拉萨\":[91.13,29.65],\"揭阳\":[116.37,23.55],\"攀枝花\":[101.72,26.58],\"文昌\":[110.8,19.55],\"新乡\":[113.9,35.3],\"新余\":[114.92,27.82],\"无锡\":[120.3,31.57],\"日照\":[119.52,35.42],\"昆明\":[102.72,25.05],\"昭通\":[103.72,27.33],\"晋中\":[112.75,37.68],\"晋城\":[112.83,35.5],\"普洱\":[100.98,22.78],\"景德镇\":[117.17,29.27],\"曲靖\":[103.8,25.5],\"朔州\":[112.43,39.33],\"朝阳\":[120.45,41.57],\"本溪\":[123.77,41.3],\"来宾\":[109.23,23.73],\"杭州\":[120.15,30.28],\"松原\":[124.82,45.13],\"枣庄\":[117.32,34.82],\"柳州\":[109.42,24.32],\"株洲\":[113.13,27.83],\"桂林\":[110.28,25.28],\"梅州\":[116.12,24.28],\"梧州\":[111.27,23.48],\"榆林\":[109.73,38.28],\"武威\":[102.63,37.93],\"武汉\":[114.3,30.6],\"毕节\":[105.28,27.3],\"永州\":[111.62,26.43],\"汉中\":[107.02,33.07],\"汕头\":[116.68,23.35],\"汕尾\":[115.37,22.78],\"江门\":[113.08,22.58],\"池州\":[117.48,30.67],\"沈阳\":[123.43,41.8],\"沧州\":[116.83,38.3],\"河池\":[108.07,24.7],\"河源\":[114.7,23.73],\"泉州\":[118.67,24.88],\"泰安\":[117.08,36.2],\"泰州\":[119.92,32.45],\"泸州\":[105.43,28.87],\"洛阳\":[112.45,34.62],\"济南\":[116.98,36.67],\"济宁\":[116.58,35.42],\"济源\":[112.58,35.07],\"海口\":[110.32,20.03],\"淄博\":[118.05,36.82],\"淮北\":[116.8,33.95],\"淮南\":[117,32.63],\"淮安\":[119.02,33.62],\"深圳\":[114.05,22.55],\"清远\":[113.03,23.7],\"温州\":[120.7,28],\"渭南\":[109.5,34.5],\"湖州\":[120.08,30.9],\"湘潭\":[112.93,27.83],\"湛江\":[110.35,21.27],\"滁州\":[118.32,32.3],\"滨州\":[117.97,37.38],\"漯河\":[114.02,33.58],\"漳州\":[117.65,24.52],\"潍坊\":[119.15,36.7],\"潜江\":[112.88,30.42],\"潮州\":[116.62,23.67],\"濮阳\":[115.03,35.77],\"烟台\":[121.43,37.45],\"焦作\":[113.25,35.22],\"牡丹江\":[129.6,44.58],\"玉林\":[110.17,22.63],\"玉溪\":[102.55,24.35],\"珠海\":[113.57,22.27],\"琼海\":[110.47,19.25],\"白城\":[122.83,45.62],\"白山\":[126.42,41.93],\"白银\":[104.18,36.55],\"百色\":[106.62,23.9],\"益阳\":[112.32,28.6],\"盐城\":[120.15,33.35],\"盘锦\":[122.07,41.12],\"眉山\":[103.83,30.05],\"石嘴山\":[106.38,39.02],\"石家庄\":[114.52,38.05],\"石河子\":[86.03,44.3],\"福州\":[119.3,26.08],\"秦皇岛\":[119.6,39.93],\"绍兴\":[120.57,30],\"绥化\":[126.98,46.63],\"绵阳\":[104.73,31.47],\"聊城\":[115.98,36.45],\"肇庆\":[112.47,23.05],\"自贡\":[104.78,29.35],\"舟山\":[122.2,30],\"芜湖\":[118.38,31.33],\"苏州\":[120.58,31.3],\"茂名\":[110.92,21.67],\"荆州\":[112.23,30.33],\"荆门\":[112.2,31.03],\"莆田\":[119,25.43],\"莱芜\":[117.67,36.22],\"菏泽\":[115.46,35.26],\"萍乡\":[113.85,27.63],\"营口\":[122.23,40.67],\"葫芦岛\":[120.83,40.72],\"蚌埠\":[117.38,32.92],\"衡水\":[115.68,37.73],\"衡阳\":[112.57,26.9],\"衢州\":[118.87,28.93],\"襄阳\":[112.2,32.08],\"西宁\":[101.78,36.62],\"西安\":[108.93,34.27],\"许昌\":[113.85,34.03],\"贵港\":[109.6,23.1],\"贵阳\":[106.63,26.65],\"贺州\":[111.55,24.42],\"资阳\":[104.65,30.12],\"赣州\":[114.93,25.83],\"赤峰\":[118.92,42.27],\"辽源\":[125.13,42.88],\"辽阳\":[123.17,41.27],\"达州\":[107.5,31.22],\"运城\":[110.98,35.02],\"连云港\":[119.22,34.6],\"通化\":[125.93,41.73],\"通辽\":[122.27,43.62],\"遂宁\":[105.57,30.52],\"遵义\":[106.92,27.73],\"邢台\":[114.48,37.07],\"邯郸\":[114.48,36.62],\"邵阳\":[111.47,27.25],\"郑州\":[113.62,34.75],\"郴州\":[113.02,25.78],\"鄂尔多斯\":[109.8,39.62],\"鄂州\":[114.88,30.4],\"酒泉\":[98.52,39.75],\"金华\":[119.65,29.08],\"金昌\":[102.18,38.5],\"钦州\":[108.62,21.95],\"铁岭\":[123.83,42.28],\"铜仁\":[109.18,27.72],\"铜川\":[108.93,34.9],\"铜陵\":[117.82,30.93],\"银川\":[106.28,38.47],\"锡林郭勒盟\":[116.07,43.95],\"锦州\":[121.13,41.1],\"镇江\":[119.45,32.2],\"长春\":[125.32,43.9],\"长沙\":[112.93,28.23],\"长治\":[113.11,36.2],\"门头沟\":[116.1,39.93],\"阜新\":[121.67,42.02],\"阜阳\":[115.82,32.9],\"防城港\":[108.35,21.7],\"阳江\":[111.98,21.87],\"阳泉\":[113.57,37.85],\"阿拉善盟\":[105.67,38.83],\"阿拉尔\":[81.28,40.55],\"陇南\":[104.92,33.4],\"随州\":[113.37,31.72],\"雅安\":[103,29.98],\"青岛\":[120.38,36.07],\"鞍山\":[122.98,41.1],\"韶关\":[113.6,24.82],\"韶山\":[112.52,27.93],\"马鞍山\":[118.5,31.7],\"驻马店\":[114.02,32.98],\"鸡西\":[130.97,45.3],\"鹤壁\":[114.28,35.75],\"鹤岗\":[130.27,47.33],\"鹰潭\":[117.07,28.27],\"黄冈\":[114.87,30.45],\"黄山\":[118.33,29.72],\"黄石\":[115.03,30.2],\"黑河\":[127.48,50.25],\"齐齐哈尔\":[123.95,47.33],\"龙岩\":[117.03,25.1]}");

/***/ }),

/***/ "2814":
/***/ (function(module) {

module.exports = JSON.parse("{\"72\":\"朝阳区\",\"78\":\"黄浦区\",\"83\":\"天津市\",\"87\":\"重庆市\",\"105\":\"万盛区\",\"113\":\"万州区\",\"114\":\"涪陵区\",\"115\":\"梁平县\",\"119\":\"南川区\",\"123\":\"潼南县\",\"126\":\"大足区\",\"128\":\"黔江区\",\"129\":\"武隆县\",\"130\":\"丰都县\",\"131\":\"奉节县\",\"132\":\"开县\",\"133\":\"云阳县\",\"134\":\"忠县\",\"135\":\"巫溪县\",\"136\":\"巫山县\",\"137\":\"石柱县\",\"138\":\"彭水县\",\"139\":\"垫江县\",\"140\":\"酉阳县\",\"141\":\"秀山县\",\"142\":\"石家庄市\",\"148\":\"邯郸市\",\"164\":\"邢台市\",\"199\":\"保定市\",\"224\":\"张家口市\",\"239\":\"承德市\",\"248\":\"秦皇岛市\",\"258\":\"唐山市\",\"264\":\"沧州市\",\"274\":\"廊坊市\",\"275\":\"衡水市\",\"303\":\"太原市\",\"309\":\"大同市\",\"318\":\"阳泉市\",\"322\":\"长冶市\",\"325\":\"晋城市\",\"330\":\"朔州市\",\"336\":\"晋中市\",\"350\":\"忻州市\",\"368\":\"吕梁市\",\"379\":\"临汾市\",\"394\":\"曲沃县\",\"398\":\"运城市\",\"412\":\"郑州市\",\"420\":\"开封市\",\"427\":\"洛阳市\",\"438\":\"平顶山市\",\"446\":\"焦作市\",\"454\":\"鹤壁市\",\"458\":\"新乡市\",\"468\":\"安阳市\",\"475\":\"濮阳市\",\"482\":\"许昌市\",\"489\":\"漯河市\",\"495\":\"三门峡市\",\"502\":\"南阳市\",\"517\":\"商丘市\",\"527\":\"周口市\",\"538\":\"驻马店市\",\"549\":\"信阳市\",\"560\":\"沈阳市\",\"573\":\"大连市\",\"579\":\"鞍山市\",\"584\":\"抚顺市\",\"589\":\"本溪市\",\"593\":\"丹东市\",\"598\":\"锦州市\",\"604\":\"葫芦岛市\",\"609\":\"营口市\",\"613\":\"盘锦市\",\"617\":\"阜新市\",\"621\":\"辽阳市\",\"632\":\"朝阳市\",\"639\":\"长春市\",\"644\":\"吉林市\",\"651\":\"四平市\",\"657\":\"通化市\",\"664\":\"白山市\",\"674\":\"松原市\",\"681\":\"白城市\",\"687\":\"延边州\",\"689\":\"延吉市\",\"698\":\"哈尔滨市\",\"712\":\"齐齐哈尔市\",\"727\":\"鹤岗市\",\"731\":\"双鸭山市\",\"737\":\"鸡西市\",\"742\":\"大庆市\",\"753\":\"伊春市\",\"757\":\"牡丹江市\",\"765\":\"佳木斯市\",\"773\":\"七台河市\",\"776\":\"黑河市\",\"782\":\"绥化市\",\"793\":\"大兴安岭地区\",\"799\":\"呼和浩特市\",\"805\":\"包头市\",\"810\":\"乌海市\",\"812\":\"赤峰市\",\"823\":\"乌兰察布市\",\"835\":\"锡林郭勒盟\",\"848\":\"呼伦贝尔市\",\"862\":\"哲里木盟\",\"870\":\"鄂尔多斯市\",\"880\":\"巴彦淖尔市\",\"891\":\"阿拉善盟\",\"895\":\"兴安盟\",\"902\":\"通辽市\",\"904\":\"南京市\",\"911\":\"徐州市\",\"919\":\"连云港市\",\"925\":\"淮安市\",\"933\":\"宿迁市\",\"939\":\"盐城市\",\"951\":\"扬州市\",\"959\":\"泰州市\",\"965\":\"南通市\",\"972\":\"镇江市\",\"978\":\"常州市\",\"984\":\"无锡市\",\"988\":\"苏州市\",\"998\":\"吴江市\",\"1000\":\"济南市\",\"1007\":\"青岛市\",\"1016\":\"淄博市\",\"1022\":\"枣庄市\",\"1025\":\"东营市\",\"1031\":\"潍坊市\",\"1032\":\"潍坊市\",\"1042\":\"烟台市\",\"1053\":\"威海市\",\"1058\":\"莱芜市\",\"1060\":\"德州市\",\"1072\":\"临沂市\",\"1081\":\"聊城市\",\"1090\":\"滨州市\",\"1099\":\"菏泽市\",\"1108\":\"日照市\",\"1112\":\"泰安市\",\"1114\":\"铜陵市\",\"1116\":\"合肥市\",\"1121\":\"淮南市\",\"1124\":\"淮北市\",\"1127\":\"芜湖市\",\"1132\":\"蚌埠市\",\"1137\":\"马鞍山市\",\"1139\":\"当涂县\",\"1140\":\"安庆市\",\"1151\":\"黄山市\",\"1158\":\"宁波市\",\"1159\":\"滁州市\",\"1167\":\"阜阳市\",\"1174\":\"亳州市\",\"1180\":\"宿州市\",\"1193\":\"宜城市\",\"1201\":\"池州市\",\"1206\":\"六安市\",\"1213\":\"杭州市\",\"1233\":\"温州市\",\"1243\":\"嘉兴市\",\"1250\":\"湖州市\",\"1255\":\"绍兴市\",\"1262\":\"金华市\",\"1273\":\"衢州市\",\"1280\":\"丽水市\",\"1290\":\"台州市\",\"1298\":\"舟山市\",\"1303\":\"福州市\",\"1310\":\"钓鱼岛\",\"1315\":\"厦门市\",\"1317\":\"三明市\",\"1329\":\"莆田市\",\"1332\":\"泉州市\",\"1341\":\"漳州市\",\"1352\":\"南平市\",\"1362\":\"龙岩市\",\"1370\":\"宁德市\",\"1381\":\"武汉市\",\"1387\":\"黄石市\",\"1396\":\"襄阳市\",\"1405\":\"十堰市\",\"1413\":\"荆州市\",\"1421\":\"宜昌市\",\"1422\":\"当阳市\",\"1432\":\"孝感市\",\"1441\":\"黄冈市\",\"1458\":\"咸宁市\",\"1466\":\"恩施州\",\"1475\":\"鄂州市\",\"1477\":\"荆门市\",\"1479\":\"随州市\",\"1482\":\"长沙市\",\"1488\":\"株洲市\",\"1495\":\"湘潭市\",\"1499\":\"韶山市\",\"1501\":\"衡阳市\",\"1511\":\"邵阳市\",\"1522\":\"岳阳市\",\"1530\":\"常德市\",\"1540\":\"张家界市\",\"1544\":\"郴州市\",\"1555\":\"益阳市\",\"1560\":\"永州市\",\"1574\":\"怀化市\",\"1586\":\"娄底市\",\"1592\":\"湘西州\",\"1601\":\"广州市\",\"1607\":\"深圳市\",\"1609\":\"珠海市\",\"1611\":\"汕头市\",\"1617\":\"韶关市\",\"1627\":\"河源市\",\"1634\":\"梅州市\",\"1643\":\"惠州市\",\"1650\":\"汕尾市\",\"1655\":\"东莞市\",\"1657\":\"中山市\",\"1659\":\"江门市\",\"1666\":\"佛山市\",\"1672\":\"阳江市\",\"1677\":\"湛江市\",\"1684\":\"茂名市\",\"1690\":\"肇庆市\",\"1698\":\"云浮市\",\"1704\":\"清远市\",\"1705\":\"潮州市\",\"1709\":\"揭阳市\",\"1715\":\"南宁市\",\"1720\":\"柳州市\",\"1726\":\"桂林市\",\"1740\":\"梧州市\",\"1746\":\"北海市\",\"1749\":\"防城港市\",\"1753\":\"钦州市\",\"1757\":\"贵港市\",\"1761\":\"玉林市\",\"1768\":\"南宁地区\",\"1781\":\"柳州地区\",\"1792\":\"贺州市\",\"1806\":\"百色市\",\"1818\":\"河池市\",\"1827\":\"南昌市\",\"1832\":\"景德镇市\",\"1836\":\"萍乡市\",\"1842\":\"新余市\",\"1845\":\"九江市\",\"1857\":\"鹰潭市\",\"1861\":\"上饶市\",\"1874\":\"宜春市\",\"1885\":\"抚州市\",\"1898\":\"吉安市\",\"1911\":\"赣州市\",\"1930\":\"成都市\",\"1946\":\"自贡市\",\"1950\":\"攀枝花市\",\"1954\":\"泸州市\",\"1960\":\"绵阳市\",\"1962\":\"德阳市\",\"1977\":\"广元市\",\"1983\":\"遂宁市\",\"1988\":\"内江市\",\"1993\":\"乐山市\",\"2005\":\"宜宾市\",\"2016\":\"广安市\",\"2022\":\"南充市\",\"2033\":\"达州市\",\"2042\":\"巴中市\",\"2047\":\"雅安市\",\"2058\":\"眉山市\",\"2065\":\"资阳市\",\"2070\":\"阿坝州\",\"2084\":\"甘孜州\",\"2103\":\"凉山州\",\"2121\":\"海口市\",\"2123\":\"三亚市\",\"2144\":\"贵阳市\",\"2150\":\"六盘水市\",\"2155\":\"遵义市\",\"2169\":\"铜仁市\",\"2180\":\"毕节市\",\"2189\":\"安顺市\",\"2196\":\"黔西南州\",\"2205\":\"黔东南州\",\"2222\":\"黔南州\",\"2235\":\"昆明市\",\"2247\":\"曲靖市\",\"2258\":\"玉溪市\",\"2270\":\"昭通市\",\"2281\":\"普洱市\",\"2291\":\"临沧市\",\"2298\":\"保山市\",\"2304\":\"丽江市\",\"2309\":\"文山州\",\"2318\":\"红河州\",\"2332\":\"西双版纳州\",\"2336\":\"楚雄州\",\"2347\":\"大理州\",\"2360\":\"德宏州\",\"2366\":\"怒江州\",\"2371\":\"迪庆藏族自治县\",\"2376\":\"西安市\",\"2386\":\"铜川市\",\"2390\":\"宝鸡市\",\"2402\":\"咸阳市\",\"2416\":\"渭南市\",\"2428\":\"延安市\",\"2442\":\"汉中市\",\"2454\":\"榆林市\",\"2468\":\"商洛市\",\"2476\":\"安康市\",\"2487\":\"兰州市\",\"2492\":\"金昌市\",\"2495\":\"白银市\",\"2501\":\"天水市\",\"2509\":\"嘉峪关市\",\"2510\":\"安西地区\",\"2518\":\"平凉市\",\"2525\":\"庆阳市\",\"2534\":\"陇南市\",\"2544\":\"武威市\",\"2549\":\"张掖市\",\"2556\":\"酒泉市\",\"2564\":\"甘南州\",\"2573\":\"临夏州\",\"2580\":\"西宁市\",\"2585\":\"海东地区\",\"2592\":\"海北州\",\"2597\":\"黄南州\",\"2603\":\"海南州\",\"2605\":\"果洛州\",\"2612\":\"玉树州\",\"2620\":\"海西州\",\"2628\":\"银川市\",\"2632\":\"石嘴山市\",\"2637\":\"吴忠市\",\"2644\":\"固原市\",\"2652\":\"乌鲁木齐市\",\"2654\":\"克拉玛依市\",\"2656\":\"石河子市\",\"2658\":\"吐鲁番地区\",\"2662\":\"哈密地区\",\"2666\":\"和田地区\",\"2675\":\"阿克苏地区\",\"2686\":\"喀什地区\",\"2699\":\"克孜勒苏柯尔克孜自治州\",\"2704\":\"巴音郭楞州\",\"2714\":\"昌吉州\",\"2723\":\"博尔塔拉州\",\"2727\":\"伊犁州\",\"2736\":\"塔城地区\",\"2744\":\"阿勒泰地区\",\"2752\":\"奎屯市\",\"2754\":\"香港特别行政区\",\"2768\":\"台湾\",\"2770\":\"澳门市\",\"2779\":\"五环内\",\"2780\":\"济源市\",\"2791\":\"门头沟\",\"2792\":\"房山区\",\"2800\":\"海淀区\",\"2801\":\"西城区\",\"2802\":\"东城区\",\"2803\":\"崇文区\",\"2804\":\"宣武区\",\"2805\":\"丰台区\",\"2806\":\"石景山区\",\"2807\":\"门头沟\",\"2808\":\"房山区\",\"2809\":\"通州区\",\"2810\":\"大兴区\",\"2811\":\"卢湾区\",\"2812\":\"顺义区\",\"2813\":\"徐汇区\",\"2814\":\"怀柔区\",\"2815\":\"长宁区\",\"2816\":\"密云区\",\"2817\":\"静安区\",\"2820\":\"闸北区\",\"2822\":\"虹口区\",\"2823\":\"杨浦区\",\"2824\":\"宝山区\",\"2825\":\"闵行区\",\"2826\":\"嘉定区\",\"2830\":\"浦东新区\",\"2833\":\"青浦区\",\"2834\":\"松江区\",\"2835\":\"金山区\",\"2836\":\"南汇区\",\"2837\":\"奉贤区\",\"2838\":\"崇明县\",\"2841\":\"普陀区\",\"2898\":\"铁力市\",\"2900\":\"济宁市\",\"2901\":\"昌平区\",\"2919\":\"崇明县\",\"2921\":\"崇明区\",\"2922\":\"潜江市\",\"2951\":\"拉萨市\",\"2953\":\"平谷区\",\"2971\":\"宣城市\",\"2978\":\"公主岭市\",\"2980\":\"天门市\",\"2983\":\"仙桃市\",\"2992\":\"辽源市\",\"2998\":\"宜都市\",\"3011\":\"都银市\",\"3012\":\"都匀市\",\"3032\":\"肥城市\",\"3034\":\"儋州市\",\"3044\":\"来宾市\",\"3053\":\"招远市\",\"3058\":\"都安县\",\"3059\":\"都安县\",\"3060\":\"都安县\",\"3061\":\"都安县\",\"3062\":\"都安县\",\"3063\":\"钟祥市\",\"3065\":\"延庆县\",\"3071\":\"中卫市\",\"3074\":\"长治市\",\"3076\":\"高新区\",\"3080\":\"定西市\",\"3090\":\"青原区\",\"3093\":\"宜兴市\",\"3107\":\"那曲地区\",\"3115\":\"琼海市\",\"3122\":\"临夏市\",\"3129\":\"山南地区\",\"3137\":\"万宁市\",\"3138\":\"昌都地区\",\"3144\":\"日喀则地区\",\"3153\":\"神农架林区\",\"3154\":\"神农架林区\",\"3168\":\"崇左市\",\"3173\":\"东方市\",\"3690\":\"三亚市\",\"3698\":\"文昌市\",\"3699\":\"五指山市\",\"3700\":\"东方市\",\"3701\":\"临高县\",\"3702\":\"澄迈县\",\"3703\":\"定安县\",\"3704\":\"屯昌县\",\"3705\":\"昌江县\",\"3706\":\"白沙县\",\"3707\":\"琼中县\",\"3708\":\"陵水县\",\"3709\":\"保亭县\",\"3710\":\"乐东县\",\"3711\":\"三沙市\",\"3970\":\"阿里地区\",\"3971\":\"林芝地区\",\"4030\":\"恩施市\",\"4037\":\"凤阳县\",\"4079\":\"松原市\",\"4091\":\"新疆维吾尔自治区\",\"4094\":\"珲春市\",\"4098\":\"洪湖市\",\"4099\":\"北安市\",\"4106\":\"集安市\",\"4108\":\"迪庆州\",\"4110\":\"五家渠市\",\"4143\":\"昆山市\",\"4149\":\"江油市\",\"4151\":\"涿州市\",\"4160\":\"九江市\",\"4163\":\"博尔塔拉蒙古自治州阿拉山口口岸\",\"4164\":\"城口县\",\"4184\":\"海城市\",\"4241\":\"从化市\",\"4249\":\"广汉市\",\"4250\":\"耒阳市\",\"4308\":\"临安市\",\"6858\":\"铁岭市\",\"15945\":\"阿拉尔市\",\"15946\":\"图木舒克市\",\"39353\":\"綦江区（古南街道、文龙街道）\",\"39354\":\"綦江区（除古南街道、文龙街道以外）\",\"48131\":\"璧山县\",\"48132\":\"荣昌县\",\"48133\":\"铜梁县\",\"48201\":\"合川区\",\"48202\":\"巴南区\",\"48203\":\"北碚区\",\"48204\":\"江津区\",\"48205\":\"渝北区\",\"48206\":\"长寿区\",\"48207\":\"永川区\",\"50950\":\"江北区\",\"50951\":\"南岸区\",\"50952\":\"九龙坡区\",\"50953\":\"沙坪坝区\",\"50954\":\"大渡口区\",\"50995\":\"綦江区\",\"51026\":\"渝中区\",\"51027\":\"高新区\",\"51028\":\"北部新区\",\"51035\":\"东丽区\",\"51036\":\"和平区\",\"51037\":\"河北区\",\"51038\":\"河东区\",\"51039\":\"河西区\",\"51040\":\"红桥区\",\"51041\":\"蓟县\",\"51042\":\"静海县\",\"51043\":\"南开区\",\"51044\":\"塘沽区\",\"51045\":\"西青区\",\"51046\":\"武清区\",\"51047\":\"津南区\",\"51048\":\"汉沽区\",\"51049\":\"大港区\",\"51050\":\"北辰区\",\"51051\":\"宝坻区\",\"51052\":\"宁河县\",\"52968\":\"中西区\",\"52969\":\"东区\",\"52970\":\"九龙城区\",\"52971\":\"观塘区\",\"52972\":\"深水埗区\",\"52973\":\"湾仔区\",\"52974\":\"黄大仙区\",\"52975\":\"油尖旺区\",\"52976\":\"离岛区\",\"52977\":\"葵青区\",\"52978\":\"北区\",\"52979\":\"西贡区\",\"52980\":\"沙田区\",\"52981\":\"屯门区\",\"52982\":\"大埔区\",\"52983\":\"荃湾区\",\"52984\":\"元朗区\",\"52985\":\"香港\",\"52986\":\"九龙\",\"52987\":\"新界\",\"52988\":\"澳门特别行政区\",\"52989\":\"澳门半岛\",\"52990\":\"凼仔\",\"52991\":\"路凼城\",\"52992\":\"路环\",\"52994\":\"香港特别行政区\",\"52995\":\"澳门特别行政区\",\"53090\":\"铁门关市\",\"53284\":\"阿富汗\",\"53285\":\"阿尔巴尼亚\",\"53286\":\"美属萨摩亚\",\"53296\":\"阿尔及利亚\",\"53297\":\"阿根廷\",\"53298\":\"马尔代夫\",\"53299\":\"马耳他\",\"53300\":\"阿联酋\",\"53301\":\"马拉维\",\"53302\":\"阿鲁巴\",\"53303\":\"马来西亚\",\"53304\":\"马里\",\"53305\":\"马其顿\",\"53306\":\"马提尼克\",\"53307\":\"毛里求斯\",\"53308\":\"毛里塔尼亚\",\"53309\":\"美国\",\"53310\":\"美属维尔京群岛\",\"53311\":\"蒙古\",\"53312\":\"蒙特塞拉特\",\"53313\":\"孟加拉\",\"53314\":\"秘鲁\",\"53315\":\"阿塞拜疆\",\"53316\":\"密克罗尼西亚\",\"53317\":\"摩尔多瓦\",\"53318\":\"摩洛哥\",\"53319\":\"摩纳哥\",\"53320\":\"埃及\",\"53321\":\"莫桑比克\",\"53322\":\"墨西哥\",\"53323\":\"纳米比亚\",\"53324\":\"南非\",\"53325\":\"南苏丹\",\"53326\":\"尼泊尔\",\"53327\":\"尼加拉瓜\",\"53328\":\"尼日尔\",\"53329\":\"尼日利亚\",\"53330\":\"挪威\",\"53331\":\"帕劳\",\"53332\":\"葡萄牙\",\"53333\":\"日本\",\"53334\":\"瑞典\",\"53335\":\"瑞士\",\"53336\":\"埃塞俄比亚\",\"53337\":\"爱尔兰\",\"53338\":\"爱沙尼亚\",\"53339\":\"安道尔\",\"53340\":\"萨尔瓦多\",\"53341\":\"安哥拉\",\"53342\":\"萨摩亚\",\"53343\":\"安圭拉\",\"53344\":\"安提瓜和巴布达\",\"53345\":\"塞尔维亚\",\"53346\":\"奥地利\",\"53347\":\"澳大利亚\",\"53348\":\"塞拉利昂\",\"53349\":\"巴巴多斯\",\"53350\":\"巴布亚新几内亚\",\"53351\":\"塞内加尔\",\"53352\":\"巴哈马\",\"53353\":\"巴基斯坦\",\"53354\":\"巴拉圭\",\"53355\":\"巴林\",\"53356\":\"巴拿马\",\"53357\":\"巴西\",\"53358\":\"塞浦路斯\",\"53359\":\"白俄罗斯\",\"53360\":\"塞舌尔\",\"53361\":\"百慕大三角\",\"53362\":\"保加利亚\",\"53363\":\"沙特阿拉伯\",\"53364\":\"圣多美和普林西比\",\"53365\":\"贝宁\",\"53366\":\"圣基茨和尼维斯\",\"53367\":\"比利时\",\"53368\":\"冰岛\",\"53369\":\"圣卢西亚\",\"53370\":\"波多黎各\",\"53371\":\"圣马力诺\",\"53372\":\"波兰\",\"53373\":\"圣文森特和格林纳丁斯\",\"53374\":\"波斯尼亚和黑塞哥维那\",\"53375\":\"玻利维亚\",\"53376\":\"斯里兰卡\",\"53377\":\"伯利兹\",\"53378\":\"斯洛伐克\",\"53379\":\"博茨瓦纳\",\"53380\":\"不丹\",\"53381\":\"斯洛文尼亚\",\"53382\":\"布基纳法索\",\"53383\":\"斯威士兰\",\"53384\":\"布隆迪\",\"53385\":\"苏丹\",\"53386\":\"赤道几内亚\",\"53387\":\"丹麦\",\"53388\":\"苏里南\",\"53389\":\"德国\",\"53390\":\"所罗门群岛\",\"53391\":\"东帝汶\",\"53392\":\"多哥\",\"53393\":\"索马里\",\"53394\":\"多米尼加共和国\",\"53395\":\"俄罗斯\",\"53396\":\"厄瓜多尔\",\"53397\":\"厄立特里亚\",\"53398\":\"法国\",\"53399\":\"法罗群岛\",\"53400\":\"法属圭亚那\",\"53401\":\"菲律宾\",\"53402\":\"塔吉克斯坦\",\"53403\":\"斐济群岛\",\"53404\":\"泰国\",\"53405\":\"芬兰\",\"53406\":\"佛得角\",\"53407\":\"冈比亚\",\"53408\":\"刚果\",\"53409\":\"哥伦比亚\",\"53410\":\"哥斯达黎加\",\"53411\":\"格林纳达\",\"53412\":\"格陵兰\",\"53413\":\"格鲁吉亚\",\"53414\":\"古巴\",\"53415\":\"瓜德罗普\",\"53416\":\"台湾\",\"53417\":\"关岛\",\"53418\":\"坦桑尼亚\",\"53419\":\"圭亚那\",\"53420\":\"哈萨克斯坦\",\"53421\":\"海地\",\"53422\":\"韩国\",\"53423\":\"荷兰\",\"53424\":\"汤加\",\"53425\":\"黑山\",\"53426\":\"洪都拉斯\",\"53427\":\"特克斯和凯科斯群岛\",\"53428\":\"HN\",\"53429\":\"特立尼达和多巴哥\",\"53430\":\"吉布提\",\"53431\":\"突尼斯\",\"53432\":\"吉尔吉斯斯坦\",\"53433\":\"图瓦卢\",\"53434\":\"几内亚\",\"53435\":\"土耳其\",\"53436\":\"几内亚比绍\",\"53437\":\"瓦努阿图\",\"53438\":\"危地马拉\",\"53439\":\"委内瑞拉\",\"53440\":\"加拿大\",\"53441\":\"文莱\",\"53442\":\"加纳\",\"53443\":\"加蓬\",\"53444\":\"加蓬\",\"53445\":\"柬埔寨\",\"53446\":\"乌克兰\",\"53447\":\"捷克\",\"53448\":\"乌拉圭\",\"53449\":\"津巴布韦\",\"53450\":\"乌兹别克斯坦\",\"53451\":\"喀麦隆\",\"53452\":\"西班牙\",\"53453\":\"卡塔尔\",\"53454\":\"希腊\",\"53455\":\"开曼群岛\",\"53456\":\"新加坡\",\"53457\":\"科摩罗\",\"53458\":\"科特迪瓦\",\"53459\":\"新喀里多尼亚\",\"53460\":\"科威特\",\"53461\":\"克罗地亚\",\"53462\":\"新西兰\",\"53463\":\"肯尼亚\",\"53464\":\"库克群岛\",\"53465\":\"匈牙利\",\"53466\":\"拉脱维亚\",\"53467\":\"莱索托\",\"53468\":\"叙利亚\",\"53469\":\"牙买加\",\"53470\":\"亚美尼亚\",\"53471\":\"也门\",\"53472\":\"伊拉克\",\"53473\":\"伊朗\",\"53474\":\"以色列\",\"53475\":\"意大利\",\"53476\":\"老挝\",\"53477\":\"印度\",\"53478\":\"印度尼西亚\",\"53479\":\"黎巴嫩\",\"53480\":\"英国\",\"53481\":\"立陶宛\",\"53482\":\"利比里亚\",\"53483\":\"英属维尔京群岛\",\"53484\":\"利比亚\",\"53485\":\"约旦\",\"53486\":\"列支敦士登\",\"53487\":\"越南\",\"53488\":\"赞比亚\",\"53489\":\"乍得\",\"53490\":\"智利\",\"53491\":\"卢森堡\",\"53492\":\"中非\",\"53493\":\"卢旺达\",\"53494\":\"罗马尼亚\",\"53495\":\"阿曼\",\"53496\":\"马达加斯加\",\"-1\":\"未知\"}");

/***/ }),

/***/ "2f74":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (stubFalse);


/***/ }),

/***/ "3461":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "3a88":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("59a8");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("205e69b8", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "46e2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BaseEcharts_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0fcc");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BaseEcharts_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BaseEcharts_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BaseEcharts_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "499e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addStylesClient; });
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "58e0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("26ee");
/* harmony import */ var _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("2f74");



/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || _stubFalse_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"];

/* harmony default export */ __webpack_exports__["a"] = (isBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("dd40")(module)))

/***/ }),

/***/ "59a8":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".ve-charts-loading-mask{position:absolute;z-index:2000;background-color:hsla(0,0%,100%,.9);margin:0;top:0;right:0;bottom:0;left:0;-webkit-transition:opacity .3s;transition:opacity .3s}.ve-charts-loading-mask .loading-spinner{top:50%;margin-top:-21px;width:100%;text-align:center;position:absolute}.ve-charts-loading-mask .circular{width:42px;height:42px;-webkit-animation:loading-rotate 2s linear infinite;animation:loading-rotate 2s linear infinite}.ve-charts-loading-mask .path{-webkit-animation:loading-dash 1.5s ease-in-out infinite;animation:loading-dash 1.5s ease-in-out infinite;stroke-dasharray:90,150;stroke-dashoffset:0;stroke-width:2;stroke:#5282e4;stroke-linecap:round}@-webkit-keyframes loading-rotate{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes loading-rotate{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes loading-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-40px}to{stroke-dasharray:90,150;stroke-dashoffset:-120px}}@keyframes loading-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-40px}to{stroke-dasharray:90,150;stroke-dashoffset:-120px}}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "5ea3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ __webpack_exports__["a"] = (freeGlobal);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "6612":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! @preserve
 * numeral.js
 * version : 2.0.6
 * author : Adam Draper
 * license : MIT
 * http://adamwdraper.github.com/Numeral-js/
 */

(function (global, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(this, function () {
    /************************************
        Variables
    ************************************/

    var numeral,
        _,
        VERSION = '2.0.6',
        formats = {},
        locales = {},
        defaults = {
            currentLocale: 'en',
            zeroFormat: null,
            nullFormat: null,
            defaultFormat: '0,0',
            scalePercentBy100: true
        },
        options = {
            currentLocale: defaults.currentLocale,
            zeroFormat: defaults.zeroFormat,
            nullFormat: defaults.nullFormat,
            defaultFormat: defaults.defaultFormat,
            scalePercentBy100: defaults.scalePercentBy100
        };


    /************************************
        Constructors
    ************************************/

    // Numeral prototype object
    function Numeral(input, number) {
        this._input = input;

        this._value = number;
    }

    numeral = function(input) {
        var value,
            kind,
            unformatFunction,
            regexp;

        if (numeral.isNumeral(input)) {
            value = input.value();
        } else if (input === 0 || typeof input === 'undefined') {
            value = 0;
        } else if (input === null || _.isNaN(input)) {
            value = null;
        } else if (typeof input === 'string') {
            if (options.zeroFormat && input === options.zeroFormat) {
                value = 0;
            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {
                value = null;
            } else {
                for (kind in formats) {
                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;

                    if (regexp && input.match(regexp)) {
                        unformatFunction = formats[kind].unformat;

                        break;
                    }
                }

                unformatFunction = unformatFunction || numeral._.stringToNumber;

                value = unformatFunction(input);
            }
        } else {
            value = Number(input)|| null;
        }

        return new Numeral(input, value);
    };

    // version number
    numeral.version = VERSION;

    // compare numeral object
    numeral.isNumeral = function(obj) {
        return obj instanceof Numeral;
    };

    // helper functions
    numeral._ = _ = {
        // formats numbers separators, decimals places, signs, abbreviations
        numberToFormat: function(value, format, roundingFunction) {
            var locale = locales[numeral.options.currentLocale],
                negP = false,
                optDec = false,
                leadingCount = 0,
                abbr = '',
                trillion = 1000000000000,
                billion = 1000000000,
                million = 1000000,
                thousand = 1000,
                decimal = '',
                neg = false,
                abbrForce, // force abbreviation
                abs,
                min,
                max,
                power,
                int,
                precision,
                signed,
                thousands,
                output;

            // make sure we never format a null value
            value = value || 0;

            abs = Math.abs(value);

            // see if we should use parentheses for negative number or if we should prefix with a sign
            // if both are present we default to parentheses
            if (numeral._.includes(format, '(')) {
                negP = true;
                format = format.replace(/[\(|\)]/g, '');
            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {
                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;
                format = format.replace(/[\+|\-]/g, '');
            }

            // see if abbreviation is wanted
            if (numeral._.includes(format, 'a')) {
                abbrForce = format.match(/a(k|m|b|t)?/);

                abbrForce = abbrForce ? abbrForce[1] : false;

                // check for space before abbreviation
                if (numeral._.includes(format, ' a')) {
                    abbr = ' ';
                }

                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');

                if (abs >= trillion && !abbrForce || abbrForce === 't') {
                    // trillion
                    abbr += locale.abbreviations.trillion;
                    value = value / trillion;
                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {
                    // billion
                    abbr += locale.abbreviations.billion;
                    value = value / billion;
                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {
                    // million
                    abbr += locale.abbreviations.million;
                    value = value / million;
                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {
                    // thousand
                    abbr += locale.abbreviations.thousand;
                    value = value / thousand;
                }
            }

            // check for optional decimals
            if (numeral._.includes(format, '[.]')) {
                optDec = true;
                format = format.replace('[.]', '.');
            }

            // break number and format
            int = value.toString().split('.')[0];
            precision = format.split('.')[1];
            thousands = format.indexOf(',');
            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;

            if (precision) {
                if (numeral._.includes(precision, '[')) {
                    precision = precision.replace(']', '');
                    precision = precision.split('[');
                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);
                } else {
                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);
                }

                int = decimal.split('.')[0];

                if (numeral._.includes(decimal, '.')) {
                    decimal = locale.delimiters.decimal + decimal.split('.')[1];
                } else {
                    decimal = '';
                }

                if (optDec && Number(decimal.slice(1)) === 0) {
                    decimal = '';
                }
            } else {
                int = numeral._.toFixed(value, 0, roundingFunction);
            }

            // check abbreviation again after rounding
            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {
                int = String(Number(int) / 1000);

                switch (abbr) {
                    case locale.abbreviations.thousand:
                        abbr = locale.abbreviations.million;
                        break;
                    case locale.abbreviations.million:
                        abbr = locale.abbreviations.billion;
                        break;
                    case locale.abbreviations.billion:
                        abbr = locale.abbreviations.trillion;
                        break;
                }
            }


            // format number
            if (numeral._.includes(int, '-')) {
                int = int.slice(1);
                neg = true;
            }

            if (int.length < leadingCount) {
                for (var i = leadingCount - int.length; i > 0; i--) {
                    int = '0' + int;
                }
            }

            if (thousands > -1) {
                int = int.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + locale.delimiters.thousands);
            }

            if (format.indexOf('.') === 0) {
                int = '';
            }

            output = int + decimal + (abbr ? abbr : '');

            if (negP) {
                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');
            } else {
                if (signed >= 0) {
                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');
                } else if (neg) {
                    output = '-' + output;
                }
            }

            return output;
        },
        // unformats numbers separators, decimals places, signs, abbreviations
        stringToNumber: function(string) {
            var locale = locales[options.currentLocale],
                stringOriginal = string,
                abbreviations = {
                    thousand: 3,
                    million: 6,
                    billion: 9,
                    trillion: 12
                },
                abbreviation,
                value,
                i,
                regexp;

            if (options.zeroFormat && string === options.zeroFormat) {
                value = 0;
            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {
                value = null;
            } else {
                value = 1;

                if (locale.delimiters.decimal !== '.') {
                    string = string.replace(/\./g, '').replace(locale.delimiters.decimal, '.');
                }

                for (abbreviation in abbreviations) {
                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\)|(\\' + locale.currency.symbol + ')?(?:\\))?)?$');

                    if (stringOriginal.match(regexp)) {
                        value *= Math.pow(10, abbreviations[abbreviation]);
                        break;
                    }
                }

                // check for negative number
                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;

                // remove non numbers
                string = string.replace(/[^0-9\.]+/g, '');

                value *= Number(string);
            }

            return value;
        },
        isNaN: function(value) {
            return typeof value === 'number' && isNaN(value);
        },
        includes: function(string, search) {
            return string.indexOf(search) !== -1;
        },
        insert: function(string, subString, start) {
            return string.slice(0, start) + subString + string.slice(start);
        },
        reduce: function(array, callback /*, initialValue*/) {
            if (this === null) {
                throw new TypeError('Array.prototype.reduce called on null or undefined');
            }

            if (typeof callback !== 'function') {
                throw new TypeError(callback + ' is not a function');
            }

            var t = Object(array),
                len = t.length >>> 0,
                k = 0,
                value;

            if (arguments.length === 3) {
                value = arguments[2];
            } else {
                while (k < len && !(k in t)) {
                    k++;
                }

                if (k >= len) {
                    throw new TypeError('Reduce of empty array with no initial value');
                }

                value = t[k++];
            }
            for (; k < len; k++) {
                if (k in t) {
                    value = callback(value, t[k], k, t);
                }
            }
            return value;
        },
        /**
         * Computes the multiplier necessary to make x >= 1,
         * effectively eliminating miscalculations caused by
         * finite precision.
         */
        multiplier: function (x) {
            var parts = x.toString().split('.');

            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);
        },
        /**
         * Given a variable number of arguments, returns the maximum
         * multiplier that must be used to normalize an operation involving
         * all of them.
         */
        correctionFactor: function () {
            var args = Array.prototype.slice.call(arguments);

            return args.reduce(function(accum, next) {
                var mn = _.multiplier(next);
                return accum > mn ? accum : mn;
            }, 1);
        },
        /**
         * Implementation of toFixed() that treats floats more like decimals
         *
         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
         * problems for accounting- and finance-related software.
         */
        toFixed: function(value, maxDecimals, roundingFunction, optionals) {
            var splitValue = value.toString().split('.'),
                minDecimals = maxDecimals - (optionals || 0),
                boundedPrecision,
                optionalsRegExp,
                power,
                output;

            // Use the smallest precision value possible to avoid errors from floating point representation
            if (splitValue.length === 2) {
              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);
            } else {
              boundedPrecision = minDecimals;
            }

            power = Math.pow(10, boundedPrecision);

            // Multiply up by precision, round accurately, then divide and use native toFixed():
            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);

            if (optionals > maxDecimals - boundedPrecision) {
                optionalsRegExp = new RegExp('\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');
                output = output.replace(optionalsRegExp, '');
            }

            return output;
        }
    };

    // avaliable options
    numeral.options = options;

    // avaliable formats
    numeral.formats = formats;

    // avaliable formats
    numeral.locales = locales;

    // This function sets the current locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    numeral.locale = function(key) {
        if (key) {
            options.currentLocale = key.toLowerCase();
        }

        return options.currentLocale;
    };

    // This function provides access to the loaded locale data.  If
    // no arguments are passed in, it will simply return the current
    // global locale object.
    numeral.localeData = function(key) {
        if (!key) {
            return locales[options.currentLocale];
        }

        key = key.toLowerCase();

        if (!locales[key]) {
            throw new Error('Unknown locale : ' + key);
        }

        return locales[key];
    };

    numeral.reset = function() {
        for (var property in defaults) {
            options[property] = defaults[property];
        }
    };

    numeral.zeroFormat = function(format) {
        options.zeroFormat = typeof(format) === 'string' ? format : null;
    };

    numeral.nullFormat = function (format) {
        options.nullFormat = typeof(format) === 'string' ? format : null;
    };

    numeral.defaultFormat = function(format) {
        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';
    };

    numeral.register = function(type, name, format) {
        name = name.toLowerCase();

        if (this[type + 's'][name]) {
            throw new TypeError(name + ' ' + type + ' already registered.');
        }

        this[type + 's'][name] = format;

        return format;
    };


    numeral.validate = function(val, culture) {
        var _decimalSep,
            _thousandSep,
            _currSymbol,
            _valArray,
            _abbrObj,
            _thousandRegEx,
            localeData,
            temp;

        //coerce val to string
        if (typeof val !== 'string') {
            val += '';

            if (console.warn) {
                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);
            }
        }

        //trim whitespaces from either sides
        val = val.trim();

        //if val is just digits return true
        if (!!val.match(/^\d+$/)) {
            return true;
        }

        //if val is empty return false
        if (val === '') {
            return false;
        }

        //get the decimal and thousands separator from numeral.localeData
        try {
            //check if the culture is understood by numeral. if not, default it to current locale
            localeData = numeral.localeData(culture);
        } catch (e) {
            localeData = numeral.localeData(numeral.locale());
        }

        //setup the delimiters and currency symbol based on culture/locale
        _currSymbol = localeData.currency.symbol;
        _abbrObj = localeData.abbreviations;
        _decimalSep = localeData.delimiters.decimal;
        if (localeData.delimiters.thousands === '.') {
            _thousandSep = '\\.';
        } else {
            _thousandSep = localeData.delimiters.thousands;
        }

        // validating currency symbol
        temp = val.match(/^[^\d]+/);
        if (temp !== null) {
            val = val.substr(1);
            if (temp[0] !== _currSymbol) {
                return false;
            }
        }

        //validating abbreviation symbol
        temp = val.match(/[^\d]+$/);
        if (temp !== null) {
            val = val.slice(0, -1);
            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {
                return false;
            }
        }

        _thousandRegEx = new RegExp(_thousandSep + '{2}');

        if (!val.match(/[^\d.,]/g)) {
            _valArray = val.split(_decimalSep);
            if (_valArray.length > 2) {
                return false;
            } else {
                if (_valArray.length < 2) {
                    return ( !! _valArray[0].match(/^\d+.*\d$/) && !_valArray[0].match(_thousandRegEx));
                } else {
                    if (_valArray[0].length === 1) {
                        return ( !! _valArray[0].match(/^\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\d+$/));
                    } else {
                        return ( !! _valArray[0].match(/^\d+.*\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\d+$/));
                    }
                }
            }
        }

        return false;
    };


    /************************************
        Numeral Prototype
    ************************************/

    numeral.fn = Numeral.prototype = {
        clone: function() {
            return numeral(this);
        },
        format: function(inputString, roundingFunction) {
            var value = this._value,
                format = inputString || options.defaultFormat,
                kind,
                output,
                formatFunction;

            // make sure we have a roundingFunction
            roundingFunction = roundingFunction || Math.round;

            // format based on value
            if (value === 0 && options.zeroFormat !== null) {
                output = options.zeroFormat;
            } else if (value === null && options.nullFormat !== null) {
                output = options.nullFormat;
            } else {
                for (kind in formats) {
                    if (format.match(formats[kind].regexps.format)) {
                        formatFunction = formats[kind].format;

                        break;
                    }
                }

                formatFunction = formatFunction || numeral._.numberToFormat;

                output = formatFunction(value, format, roundingFunction);
            }

            return output;
        },
        value: function() {
            return this._value;
        },
        input: function() {
            return this._input;
        },
        set: function(value) {
            this._value = Number(value);

            return this;
        },
        add: function(value) {
            var corrFactor = _.correctionFactor.call(null, this._value, value);

            function cback(accum, curr, currI, O) {
                return accum + Math.round(corrFactor * curr);
            }

            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;

            return this;
        },
        subtract: function(value) {
            var corrFactor = _.correctionFactor.call(null, this._value, value);

            function cback(accum, curr, currI, O) {
                return accum - Math.round(corrFactor * curr);
            }

            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;

            return this;
        },
        multiply: function(value) {
            function cback(accum, curr, currI, O) {
                var corrFactor = _.correctionFactor(accum, curr);
                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);
            }

            this._value = _.reduce([this._value, value], cback, 1);

            return this;
        },
        divide: function(value) {
            function cback(accum, curr, currI, O) {
                var corrFactor = _.correctionFactor(accum, curr);
                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);
            }

            this._value = _.reduce([this._value, value], cback);

            return this;
        },
        difference: function(value) {
            return Math.abs(numeral(this._value).subtract(value).value());
        }
    };

    /************************************
        Default Locale && Format
    ************************************/

    numeral.register('locale', 'en', {
        delimiters: {
            thousands: ',',
            decimal: '.'
        },
        abbreviations: {
            thousand: 'k',
            million: 'm',
            billion: 'b',
            trillion: 't'
        },
        ordinal: function(number) {
            var b = number % 10;
            return (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
        },
        currency: {
            symbol: '$'
        }
    });

    

(function() {
        numeral.register('format', 'bps', {
            regexps: {
                format: /(BPS)/,
                unformat: /(BPS)/
            },
            format: function(value, format, roundingFunction) {
                var space = numeral._.includes(format, ' BPS') ? ' ' : '',
                    output;

                value = value * 10000;

                // check for space before BPS
                format = format.replace(/\s?BPS/, '');

                output = numeral._.numberToFormat(value, format, roundingFunction);

                if (numeral._.includes(output, ')')) {
                    output = output.split('');

                    output.splice(-1, 0, space + 'BPS');

                    output = output.join('');
                } else {
                    output = output + space + 'BPS';
                }

                return output;
            },
            unformat: function(string) {
                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);
            }
        });
})();


(function() {
        var decimal = {
            base: 1000,
            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
        },
        binary = {
            base: 1024,
            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']
        };

    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {
            return decimal.suffixes.indexOf(item) < 0;
        }));
        var unformatRegex = allSuffixes.join('|');
        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)
        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';

    numeral.register('format', 'bytes', {
        regexps: {
            format: /([0\s]i?b)/,
            unformat: new RegExp(unformatRegex)
        },
        format: function(value, format, roundingFunction) {
            var output,
                bytes = numeral._.includes(format, 'ib') ? binary : decimal,
                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',
                power,
                min,
                max;

            // check for space before
            format = format.replace(/\s?i?b/, '');

            for (power = 0; power <= bytes.suffixes.length; power++) {
                min = Math.pow(bytes.base, power);
                max = Math.pow(bytes.base, power + 1);

                if (value === null || value === 0 || value >= min && value < max) {
                    suffix += bytes.suffixes[power];

                    if (min > 0) {
                        value = value / min;
                    }

                    break;
                }
            }

            output = numeral._.numberToFormat(value, format, roundingFunction);

            return output + suffix;
        },
        unformat: function(string) {
            var value = numeral._.stringToNumber(string),
                power,
                bytesMultiplier;

            if (value) {
                for (power = decimal.suffixes.length - 1; power >= 0; power--) {
                    if (numeral._.includes(string, decimal.suffixes[power])) {
                        bytesMultiplier = Math.pow(decimal.base, power);

                        break;
                    }

                    if (numeral._.includes(string, binary.suffixes[power])) {
                        bytesMultiplier = Math.pow(binary.base, power);

                        break;
                    }
                }

                value *= (bytesMultiplier || 1);
            }

            return value;
        }
    });
})();


(function() {
        numeral.register('format', 'currency', {
        regexps: {
            format: /(\$)/
        },
        format: function(value, format, roundingFunction) {
            var locale = numeral.locales[numeral.options.currentLocale],
                symbols = {
                    before: format.match(/^([\+|\-|\(|\s|\$]*)/)[0],
                    after: format.match(/([\+|\-|\)|\s|\$]*)$/)[0]
                },
                output,
                symbol,
                i;

            // strip format of spaces and $
            format = format.replace(/\s?\$\s?/, '');

            // format the number
            output = numeral._.numberToFormat(value, format, roundingFunction);

            // update the before and after based on value
            if (value >= 0) {
                symbols.before = symbols.before.replace(/[\-\(]/, '');
                symbols.after = symbols.after.replace(/[\-\)]/, '');
            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {
                symbols.before = '-' + symbols.before;
            }

            // loop through each before symbol
            for (i = 0; i < symbols.before.length; i++) {
                symbol = symbols.before[i];

                switch (symbol) {
                    case '$':
                        output = numeral._.insert(output, locale.currency.symbol, i);
                        break;
                    case ' ':
                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);
                        break;
                }
            }

            // loop through each after symbol
            for (i = symbols.after.length - 1; i >= 0; i--) {
                symbol = symbols.after[i];

                switch (symbol) {
                    case '$':
                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));
                        break;
                    case ' ':
                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));
                        break;
                }
            }


            return output;
        }
    });
})();


(function() {
        numeral.register('format', 'exponential', {
        regexps: {
            format: /(e\+|e-)/,
            unformat: /(e\+|e-)/
        },
        format: function(value, format, roundingFunction) {
            var output,
                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',
                parts = exponential.split('e');

            format = format.replace(/e[\+|\-]{1}0/, '');

            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);

            return output + 'e' + parts[1];
        },
        unformat: function(string) {
            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),
                value = Number(parts[0]),
                power = Number(parts[1]);

            power = numeral._.includes(string, 'e-') ? power *= -1 : power;

            function cback(accum, curr, currI, O) {
                var corrFactor = numeral._.correctionFactor(accum, curr),
                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);
                return num;
            }

            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);
        }
    });
})();


(function() {
        numeral.register('format', 'ordinal', {
        regexps: {
            format: /(o)/
        },
        format: function(value, format, roundingFunction) {
            var locale = numeral.locales[numeral.options.currentLocale],
                output,
                ordinal = numeral._.includes(format, ' o') ? ' ' : '';

            // check for space before
            format = format.replace(/\s?o/, '');

            ordinal += locale.ordinal(value);

            output = numeral._.numberToFormat(value, format, roundingFunction);

            return output + ordinal;
        }
    });
})();


(function() {
        numeral.register('format', 'percentage', {
        regexps: {
            format: /(%)/,
            unformat: /(%)/
        },
        format: function(value, format, roundingFunction) {
            var space = numeral._.includes(format, ' %') ? ' ' : '',
                output;

            if (numeral.options.scalePercentBy100) {
                value = value * 100;
            }

            // check for space before %
            format = format.replace(/\s?\%/, '');

            output = numeral._.numberToFormat(value, format, roundingFunction);

            if (numeral._.includes(output, ')')) {
                output = output.split('');

                output.splice(-1, 0, space + '%');

                output = output.join('');
            } else {
                output = output + space + '%';
            }

            return output;
        },
        unformat: function(string) {
            var number = numeral._.stringToNumber(string);
            if (numeral.options.scalePercentBy100) {
                return number * 0.01;
            }
            return number;
        }
    });
})();


(function() {
        numeral.register('format', 'time', {
        regexps: {
            format: /(:)/,
            unformat: /(:)/
        },
        format: function(value, format, roundingFunction) {
            var hours = Math.floor(value / 60 / 60),
                minutes = Math.floor((value - (hours * 60 * 60)) / 60),
                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));

            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);
        },
        unformat: function(string) {
            var timeArray = string.split(':'),
                seconds = 0;

            // turn hours and minutes into seconds and add them all up
            if (timeArray.length === 3) {
                // hours
                seconds = seconds + (Number(timeArray[0]) * 60 * 60);
                // minutes
                seconds = seconds + (Number(timeArray[1]) * 60);
                // seconds
                seconds = seconds + Number(timeArray[2]);
            } else if (timeArray.length === 2) {
                // minutes
                seconds = seconds + (Number(timeArray[0]) * 60);
                // seconds
                seconds = seconds + Number(timeArray[1]);
            }
            return Number(seconds);
        }
    });
})();

return numeral;
}));


/***/ }),

/***/ "86eb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EmptyData_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ff6f");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EmptyData_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EmptyData_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_EmptyData_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ "c6eb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5ea3");


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* harmony default export */ __webpack_exports__["a"] = (nodeUtil);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("dd40")(module)))

/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "dd40":
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "df8e":
/***/ (function(module, exports) {

module.exports = require("echarts");

/***/ }),

/***/ "dff1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("26ee");


/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (cloneBuffer);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("dd40")(module)))

/***/ }),

/***/ "f6fd":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __webpack_require__("f6fd")
  }

  var setPublicPath_i
  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = setPublicPath_i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: external "echarts"
var external_echarts_ = __webpack_require__("df8e");
var external_echarts_default = /*#__PURE__*/__webpack_require__.n(external_echarts_);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"45371285-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/HocEcharts.vue?vue&type=template&id=1a0a63b4&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"ve-charts-parent",style:(_vm.parentStyle)},[(_vm.isHasData)?_c('base-echarts',_vm._g({attrs:{"init-options":_vm.initOptions,"options":_vm.options,"autoResize":true,"theme":_vm.theme,"chart-height":_vm.height,"ec":_vm.ec},on:{"update:ec":function($event){_vm.ec=$event}}},_vm.$listeners)):_vm._e(),(!_vm.isHasData && !_vm.loading)?_vm._t("default",[_c('empty-data',{attrs:{"empty-text":_vm.emptyText}})]):_vm._e(),(_vm.loading)?_c('loading-chart'):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/HocEcharts.vue?vue&type=template&id=1a0a63b4&

// CONCATENATED MODULE: ./node_modules/lodash-es/isNull.js
/**
 * Checks if `value` is `null`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
 * @example
 *
 * _.isNull(null);
 * // => true
 *
 * _.isNull(void 0);
 * // => false
 */
function isNull(value) {
  return value === null;
}

/* harmony default export */ var lodash_es_isNull = (isNull);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isPrototype.js
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/* harmony default export */ var _isPrototype = (isPrototype);

// CONCATENATED MODULE: ./node_modules/lodash-es/_overArg.js
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ var _overArg = (overArg);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeKeys.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = _overArg(Object.keys, Object);

/* harmony default export */ var _nativeKeys = (nativeKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseKeys.js



/** Used for built-in method references. */
var _baseKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeys_hasOwnProperty = _baseKeys_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!_isPrototype(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _baseKeys = (baseKeys);

// EXTERNAL MODULE: ./node_modules/lodash-es/_root.js
var _root = __webpack_require__("26ee");

// CONCATENATED MODULE: ./node_modules/lodash-es/_Symbol.js


/** Built-in value references. */
var Symbol = _root["a" /* default */].Symbol;

/* harmony default export */ var _Symbol = (Symbol);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getRawTag.js


/** Used for built-in method references. */
var _getRawTag_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _getRawTag_hasOwnProperty = _getRawTag_objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = _getRawTag_objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ var _getRawTag = (getRawTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_objectToString.js
/** Used for built-in method references. */
var _objectToString_objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var _objectToString_nativeObjectToString = _objectToString_objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return _objectToString_nativeObjectToString.call(value);
}

/* harmony default export */ var _objectToString = (objectToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGetTag.js




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var _baseGetTag_symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))
    ? _getRawTag(value)
    : _objectToString(value);
}

/* harmony default export */ var _baseGetTag = (baseGetTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/isObject.js
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* harmony default export */ var lodash_es_isObject = (isObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/isFunction.js



/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!lodash_es_isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = _baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/* harmony default export */ var lodash_es_isFunction = (isFunction);

// CONCATENATED MODULE: ./node_modules/lodash-es/_coreJsData.js


/** Used to detect overreaching core-js shims. */
var coreJsData = _root["a" /* default */]['__core-js_shared__'];

/* harmony default export */ var _coreJsData = (coreJsData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isMasked.js


/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/* harmony default export */ var _isMasked = (isMasked);

// CONCATENATED MODULE: ./node_modules/lodash-es/_toSource.js
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/* harmony default export */ var _toSource = (toSource);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsNative.js





/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var _baseIsNative_funcProto = Function.prototype,
    _baseIsNative_objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var _baseIsNative_funcToString = _baseIsNative_funcProto.toString;

/** Used to check objects for own properties. */
var _baseIsNative_hasOwnProperty = _baseIsNative_objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  _baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!lodash_es_isObject(value) || _isMasked(value)) {
    return false;
  }
  var pattern = lodash_es_isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value));
}

/* harmony default export */ var _baseIsNative = (baseIsNative);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getValue.js
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/* harmony default export */ var _getValue = (getValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getNative.js



/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}

/* harmony default export */ var _getNative = (getNative);

// CONCATENATED MODULE: ./node_modules/lodash-es/_DataView.js



/* Built-in method references that are verified to be native. */
var DataView = _getNative(_root["a" /* default */], 'DataView');

/* harmony default export */ var _DataView = (DataView);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Map.js



/* Built-in method references that are verified to be native. */
var Map = _getNative(_root["a" /* default */], 'Map');

/* harmony default export */ var _Map = (Map);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Promise.js



/* Built-in method references that are verified to be native. */
var _Promise_Promise = _getNative(_root["a" /* default */], 'Promise');

/* harmony default export */ var _Promise = (_Promise_Promise);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Set.js



/* Built-in method references that are verified to be native. */
var Set = _getNative(_root["a" /* default */], 'Set');

/* harmony default export */ var _Set = (Set);

// CONCATENATED MODULE: ./node_modules/lodash-es/_WeakMap.js



/* Built-in method references that are verified to be native. */
var WeakMap = _getNative(_root["a" /* default */], 'WeakMap');

/* harmony default export */ var _WeakMap = (WeakMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getTag.js








/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = _toSource(_DataView),
    mapCtorString = _toSource(_Map),
    promiseCtorString = _toSource(_Promise),
    setCtorString = _toSource(_Set),
    weakMapCtorString = _toSource(_WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (_Map && getTag(new _Map) != mapTag) ||
    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
    (_Set && getTag(new _Set) != setTag) ||
    (_WeakMap && getTag(new _WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = _baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? _toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/* harmony default export */ var _getTag = (getTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/isObjectLike.js
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ var lodash_es_isObjectLike = (isObjectLike);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsArguments.js



/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return lodash_es_isObjectLike(value) && _baseGetTag(value) == argsTag;
}

/* harmony default export */ var _baseIsArguments = (baseIsArguments);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArguments.js



/** Used for built-in method references. */
var isArguments_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isArguments_hasOwnProperty = isArguments_objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = isArguments_objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
  return lodash_es_isObjectLike(value) && isArguments_hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/* harmony default export */ var lodash_es_isArguments = (isArguments);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArray.js
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/* harmony default export */ var lodash_es_isArray = (isArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/isLength.js
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/* harmony default export */ var lodash_es_isLength = (isLength);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArrayLike.js



/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && lodash_es_isLength(value.length) && !lodash_es_isFunction(value);
}

/* harmony default export */ var lodash_es_isArrayLike = (isArrayLike);

// EXTERNAL MODULE: ./node_modules/lodash-es/isBuffer.js
var isBuffer = __webpack_require__("58e0");

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsTypedArray.js




/** `Object#toString` result references. */
var _baseIsTypedArray_argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    _baseIsTypedArray_funcTag = '[object Function]',
    _baseIsTypedArray_mapTag = '[object Map]',
    numberTag = '[object Number]',
    _baseIsTypedArray_objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    _baseIsTypedArray_setTag = '[object Set]',
    stringTag = '[object String]',
    _baseIsTypedArray_weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    _baseIsTypedArray_dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[_baseIsTypedArray_argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[_baseIsTypedArray_dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[_baseIsTypedArray_funcTag] =
typedArrayTags[_baseIsTypedArray_mapTag] = typedArrayTags[numberTag] =
typedArrayTags[_baseIsTypedArray_objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[_baseIsTypedArray_setTag] = typedArrayTags[stringTag] =
typedArrayTags[_baseIsTypedArray_weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return lodash_es_isObjectLike(value) &&
    lodash_es_isLength(value.length) && !!typedArrayTags[_baseGetTag(value)];
}

/* harmony default export */ var _baseIsTypedArray = (baseIsTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseUnary.js
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/* harmony default export */ var _baseUnary = (baseUnary);

// EXTERNAL MODULE: ./node_modules/lodash-es/_nodeUtil.js
var _nodeUtil = __webpack_require__("c6eb");

// CONCATENATED MODULE: ./node_modules/lodash-es/isTypedArray.js




/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;

/* harmony default export */ var lodash_es_isTypedArray = (isTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/isEmpty.js









/** `Object#toString` result references. */
var isEmpty_mapTag = '[object Map]',
    isEmpty_setTag = '[object Set]';

/** Used for built-in method references. */
var isEmpty_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isEmpty_hasOwnProperty = isEmpty_objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (lodash_es_isArrayLike(value) &&
      (lodash_es_isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        Object(isBuffer["a" /* default */])(value) || lodash_es_isTypedArray(value) || lodash_es_isArguments(value))) {
    return !value.length;
  }
  var tag = _getTag(value);
  if (tag == isEmpty_mapTag || tag == isEmpty_setTag) {
    return !value.size;
  }
  if (_isPrototype(value)) {
    return !_baseKeys(value).length;
  }
  for (var key in value) {
    if (isEmpty_hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ var lodash_es_isEmpty = (isEmpty);

// CONCATENATED MODULE: ./node_modules/lodash-es/isUndefined.js
/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

/* harmony default export */ var lodash_es_isUndefined = (isUndefined);

// CONCATENATED MODULE: ./node_modules/lodash-es/isSymbol.js



/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (lodash_es_isObjectLike(value) && _baseGetTag(value) == symbolTag);
}

/* harmony default export */ var lodash_es_isSymbol = (isSymbol);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isKey.js



/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (lodash_es_isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || lodash_es_isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/* harmony default export */ var _isKey = (isKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeCreate.js


/* Built-in method references that are verified to be native. */
var nativeCreate = _getNative(Object, 'create');

/* harmony default export */ var _nativeCreate = (nativeCreate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashClear.js


/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}

/* harmony default export */ var _hashClear = (hashClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashDelete.js
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ var _hashDelete = (hashDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashGet.js


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var _hashGet_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashGet_hasOwnProperty = _hashGet_objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/* harmony default export */ var _hashGet = (hashGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashHas.js


/** Used for built-in method references. */
var _hashHas_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);
}

/* harmony default export */ var _hashHas = (hashHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_hashSet.js


/** Used to stand-in for `undefined` hash values. */
var _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;
  return this;
}

/* harmony default export */ var _hashSet = (hashSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Hash.js






/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;

/* harmony default export */ var _Hash = (Hash);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheClear.js
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/* harmony default export */ var _listCacheClear = (listCacheClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/eq.js
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/* harmony default export */ var lodash_es_eq = (eq);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assocIndexOf.js


/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (lodash_es_eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/* harmony default export */ var _assocIndexOf = (assocIndexOf);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheDelete.js


/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/* harmony default export */ var _listCacheDelete = (listCacheDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheGet.js


/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/* harmony default export */ var _listCacheGet = (listCacheGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheHas.js


/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}

/* harmony default export */ var _listCacheHas = (listCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_listCacheSet.js


/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

/* harmony default export */ var _listCacheSet = (listCacheSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_ListCache.js






/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;

/* harmony default export */ var _ListCache = (ListCache);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheClear.js




/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash,
    'map': new (_Map || _ListCache),
    'string': new _Hash
  };
}

/* harmony default export */ var _mapCacheClear = (mapCacheClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isKeyable.js
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/* harmony default export */ var _isKeyable = (isKeyable);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getMapData.js


/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/* harmony default export */ var _getMapData = (getMapData);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheDelete.js


/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ var _mapCacheDelete = (mapCacheDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheGet.js


/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}

/* harmony default export */ var _mapCacheGet = (mapCacheGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheHas.js


/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}

/* harmony default export */ var _mapCacheHas = (mapCacheHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_mapCacheSet.js


/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

/* harmony default export */ var _mapCacheSet = (mapCacheSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_MapCache.js






/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;

/* harmony default export */ var _MapCache = (MapCache);

// CONCATENATED MODULE: ./node_modules/lodash-es/memoize.js


/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache;

/* harmony default export */ var lodash_es_memoize = (memoize);

// CONCATENATED MODULE: ./node_modules/lodash-es/_memoizeCapped.js


/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = lodash_es_memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

/* harmony default export */ var _memoizeCapped = (memoizeCapped);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stringToPath.js


/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = _memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/* harmony default export */ var _stringToPath = (stringToPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayMap.js
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/* harmony default export */ var _arrayMap = (arrayMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseToString.js





/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (lodash_es_isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return _arrayMap(value, baseToString) + '';
  }
  if (lodash_es_isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ var _baseToString = (baseToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/toString.js


/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString_toString(value) {
  return value == null ? '' : _baseToString(value);
}

/* harmony default export */ var lodash_es_toString = (toString_toString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_castPath.js





/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (lodash_es_isArray(value)) {
    return value;
  }
  return _isKey(value, object) ? [value] : _stringToPath(lodash_es_toString(value));
}

/* harmony default export */ var _castPath = (castPath);

// CONCATENATED MODULE: ./node_modules/lodash-es/_toKey.js


/** Used as references for various `Number` constants. */
var _toKey_INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || lodash_es_isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -_toKey_INFINITY) ? '-0' : result;
}

/* harmony default export */ var _toKey = (toKey);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGet.js



/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = _castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[_toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/* harmony default export */ var _baseGet = (baseGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/get.js


/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : _baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

/* harmony default export */ var lodash_es_get = (get);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackClear.js


/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache;
  this.size = 0;
}

/* harmony default export */ var _stackClear = (stackClear);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackDelete.js
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/* harmony default export */ var _stackDelete = (stackDelete);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackGet.js
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/* harmony default export */ var _stackGet = (stackGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackHas.js
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/* harmony default export */ var _stackHas = (stackHas);

// CONCATENATED MODULE: ./node_modules/lodash-es/_stackSet.js




/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache) {
    var pairs = data.__data__;
    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

/* harmony default export */ var _stackSet = (stackSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Stack.js







/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;

/* harmony default export */ var _Stack = (Stack);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayEach.js
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/* harmony default export */ var _arrayEach = (arrayEach);

// CONCATENATED MODULE: ./node_modules/lodash-es/_defineProperty.js


var defineProperty = (function() {
  try {
    var func = _getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* harmony default export */ var _defineProperty = (defineProperty);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAssignValue.js


/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty) {
    _defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/* harmony default export */ var _baseAssignValue = (baseAssignValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assignValue.js



/** Used for built-in method references. */
var _assignValue_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _assignValue_hasOwnProperty = _assignValue_objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(_assignValue_hasOwnProperty.call(object, key) && lodash_es_eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

/* harmony default export */ var _assignValue = (assignValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copyObject.js



/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      _baseAssignValue(object, key, newValue);
    } else {
      _assignValue(object, key, newValue);
    }
  }
  return object;
}

/* harmony default export */ var _copyObject = (copyObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseTimes.js
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/* harmony default export */ var _baseTimes = (baseTimes);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isIndex.js
/** Used as references for various `Number` constants. */
var _isIndex_MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? _isIndex_MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/* harmony default export */ var _isIndex = (isIndex);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayLikeKeys.js







/** Used for built-in method references. */
var _arrayLikeKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = lodash_es_isArray(value),
      isArg = !isArr && lodash_es_isArguments(value),
      isBuff = !isArr && !isArg && Object(isBuffer["a" /* default */])(value),
      isType = !isArr && !isArg && !isBuff && lodash_es_isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? _baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           _isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _arrayLikeKeys = (arrayLikeKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/keys.js




/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object) : _baseKeys(object);
}

/* harmony default export */ var lodash_es_keys = (keys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAssign.js



/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && _copyObject(source, lodash_es_keys(source), object);
}

/* harmony default export */ var _baseAssign = (baseAssign);

// CONCATENATED MODULE: ./node_modules/lodash-es/_nativeKeysIn.js
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _nativeKeysIn = (nativeKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseKeysIn.js




/** Used for built-in method references. */
var _baseKeysIn_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!lodash_es_isObject(object)) {
    return _nativeKeysIn(object);
  }
  var isProto = _isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ var _baseKeysIn = (baseKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/keysIn.js




/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn_keysIn(object) {
  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);
}

/* harmony default export */ var lodash_es_keysIn = (keysIn_keysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseAssignIn.js



/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && _copyObject(source, lodash_es_keysIn(source), object);
}

/* harmony default export */ var _baseAssignIn = (baseAssignIn);

// EXTERNAL MODULE: ./node_modules/lodash-es/_cloneBuffer.js
var _cloneBuffer = __webpack_require__("dff1");

// CONCATENATED MODULE: ./node_modules/lodash-es/_copyArray.js
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/* harmony default export */ var _copyArray = (copyArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayFilter.js
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ var _arrayFilter = (arrayFilter);

// CONCATENATED MODULE: ./node_modules/lodash-es/stubArray.js
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/* harmony default export */ var lodash_es_stubArray = (stubArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getSymbols.js



/** Used for built-in method references. */
var _getSymbols_objectProto = Object.prototype;

/** Built-in value references. */
var _getSymbols_propertyIsEnumerable = _getSymbols_objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? lodash_es_stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilter(nativeGetSymbols(object), function(symbol) {
    return _getSymbols_propertyIsEnumerable.call(object, symbol);
  });
};

/* harmony default export */ var _getSymbols = (getSymbols);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copySymbols.js



/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return _copyObject(source, _getSymbols(source), object);
}

/* harmony default export */ var _copySymbols = (copySymbols);

// CONCATENATED MODULE: ./node_modules/lodash-es/_arrayPush.js
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/* harmony default export */ var _arrayPush = (arrayPush);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getPrototype.js


/** Built-in value references. */
var getPrototype = _overArg(Object.getPrototypeOf, Object);

/* harmony default export */ var _getPrototype = (getPrototype);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getSymbolsIn.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var _getSymbolsIn_nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !_getSymbolsIn_nativeGetSymbols ? lodash_es_stubArray : function(object) {
  var result = [];
  while (object) {
    _arrayPush(result, _getSymbols(object));
    object = _getPrototype(object);
  }
  return result;
};

/* harmony default export */ var _getSymbolsIn = (getSymbolsIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_copySymbolsIn.js



/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return _copyObject(source, _getSymbolsIn(source), object);
}

/* harmony default export */ var _copySymbolsIn = (copySymbolsIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGetAllKeys.js



/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return lodash_es_isArray(object) ? result : _arrayPush(result, symbolsFunc(object));
}

/* harmony default export */ var _baseGetAllKeys = (baseGetAllKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getAllKeys.js




/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return _baseGetAllKeys(object, lodash_es_keys, _getSymbols);
}

/* harmony default export */ var _getAllKeys = (getAllKeys);

// CONCATENATED MODULE: ./node_modules/lodash-es/_getAllKeysIn.js




/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return _baseGetAllKeys(object, lodash_es_keysIn, _getSymbolsIn);
}

/* harmony default export */ var _getAllKeysIn = (getAllKeysIn);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneArray.js
/** Used for built-in method references. */
var _initCloneArray_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _initCloneArray_hasOwnProperty = _initCloneArray_objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && _initCloneArray_hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/* harmony default export */ var _initCloneArray = (initCloneArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_Uint8Array.js


/** Built-in value references. */
var Uint8Array = _root["a" /* default */].Uint8Array;

/* harmony default export */ var _Uint8Array = (Uint8Array);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneArrayBuffer.js


/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}

/* harmony default export */ var _cloneArrayBuffer = (cloneArrayBuffer);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneDataView.js


/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/* harmony default export */ var _cloneDataView = (cloneDataView);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneRegExp.js
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/* harmony default export */ var _cloneRegExp = (cloneRegExp);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneSymbol.js


/** Used to convert symbols to primitives and strings. */
var _cloneSymbol_symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = _cloneSymbol_symbolProto ? _cloneSymbol_symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/* harmony default export */ var _cloneSymbol = (cloneSymbol);

// CONCATENATED MODULE: ./node_modules/lodash-es/_cloneTypedArray.js


/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/* harmony default export */ var _cloneTypedArray = (cloneTypedArray);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneByTag.js






/** `Object#toString` result references. */
var _initCloneByTag_boolTag = '[object Boolean]',
    _initCloneByTag_dateTag = '[object Date]',
    _initCloneByTag_mapTag = '[object Map]',
    _initCloneByTag_numberTag = '[object Number]',
    _initCloneByTag_regexpTag = '[object RegExp]',
    _initCloneByTag_setTag = '[object Set]',
    _initCloneByTag_stringTag = '[object String]',
    _initCloneByTag_symbolTag = '[object Symbol]';

var _initCloneByTag_arrayBufferTag = '[object ArrayBuffer]',
    _initCloneByTag_dataViewTag = '[object DataView]',
    _initCloneByTag_float32Tag = '[object Float32Array]',
    _initCloneByTag_float64Tag = '[object Float64Array]',
    _initCloneByTag_int8Tag = '[object Int8Array]',
    _initCloneByTag_int16Tag = '[object Int16Array]',
    _initCloneByTag_int32Tag = '[object Int32Array]',
    _initCloneByTag_uint8Tag = '[object Uint8Array]',
    _initCloneByTag_uint8ClampedTag = '[object Uint8ClampedArray]',
    _initCloneByTag_uint16Tag = '[object Uint16Array]',
    _initCloneByTag_uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case _initCloneByTag_arrayBufferTag:
      return _cloneArrayBuffer(object);

    case _initCloneByTag_boolTag:
    case _initCloneByTag_dateTag:
      return new Ctor(+object);

    case _initCloneByTag_dataViewTag:
      return _cloneDataView(object, isDeep);

    case _initCloneByTag_float32Tag: case _initCloneByTag_float64Tag:
    case _initCloneByTag_int8Tag: case _initCloneByTag_int16Tag: case _initCloneByTag_int32Tag:
    case _initCloneByTag_uint8Tag: case _initCloneByTag_uint8ClampedTag: case _initCloneByTag_uint16Tag: case _initCloneByTag_uint32Tag:
      return _cloneTypedArray(object, isDeep);

    case _initCloneByTag_mapTag:
      return new Ctor;

    case _initCloneByTag_numberTag:
    case _initCloneByTag_stringTag:
      return new Ctor(object);

    case _initCloneByTag_regexpTag:
      return _cloneRegExp(object);

    case _initCloneByTag_setTag:
      return new Ctor;

    case _initCloneByTag_symbolTag:
      return _cloneSymbol(object);
  }
}

/* harmony default export */ var _initCloneByTag = (initCloneByTag);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseCreate.js


/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!lodash_es_isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/* harmony default export */ var _baseCreate = (baseCreate);

// CONCATENATED MODULE: ./node_modules/lodash-es/_initCloneObject.js




/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !_isPrototype(object))
    ? _baseCreate(_getPrototype(object))
    : {};
}

/* harmony default export */ var _initCloneObject = (initCloneObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsMap.js



/** `Object#toString` result references. */
var _baseIsMap_mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsMap_mapTag;
}

/* harmony default export */ var _baseIsMap = (baseIsMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/isMap.js




/* Node.js helper references. */
var nodeIsMap = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;

/* harmony default export */ var lodash_es_isMap = (isMap);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseIsSet.js



/** `Object#toString` result references. */
var _baseIsSet_setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsSet_setTag;
}

/* harmony default export */ var _baseIsSet = (baseIsSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/isSet.js




/* Node.js helper references. */
var nodeIsSet = _nodeUtil["a" /* default */] && _nodeUtil["a" /* default */].isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;

/* harmony default export */ var lodash_es_isSet = (isSet);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseClone.js






















/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var _baseClone_argsTag = '[object Arguments]',
    _baseClone_arrayTag = '[object Array]',
    _baseClone_boolTag = '[object Boolean]',
    _baseClone_dateTag = '[object Date]',
    _baseClone_errorTag = '[object Error]',
    _baseClone_funcTag = '[object Function]',
    _baseClone_genTag = '[object GeneratorFunction]',
    _baseClone_mapTag = '[object Map]',
    _baseClone_numberTag = '[object Number]',
    _baseClone_objectTag = '[object Object]',
    _baseClone_regexpTag = '[object RegExp]',
    _baseClone_setTag = '[object Set]',
    _baseClone_stringTag = '[object String]',
    _baseClone_symbolTag = '[object Symbol]',
    _baseClone_weakMapTag = '[object WeakMap]';

var _baseClone_arrayBufferTag = '[object ArrayBuffer]',
    _baseClone_dataViewTag = '[object DataView]',
    _baseClone_float32Tag = '[object Float32Array]',
    _baseClone_float64Tag = '[object Float64Array]',
    _baseClone_int8Tag = '[object Int8Array]',
    _baseClone_int16Tag = '[object Int16Array]',
    _baseClone_int32Tag = '[object Int32Array]',
    _baseClone_uint8Tag = '[object Uint8Array]',
    _baseClone_uint8ClampedTag = '[object Uint8ClampedArray]',
    _baseClone_uint16Tag = '[object Uint16Array]',
    _baseClone_uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[_baseClone_argsTag] = cloneableTags[_baseClone_arrayTag] =
cloneableTags[_baseClone_arrayBufferTag] = cloneableTags[_baseClone_dataViewTag] =
cloneableTags[_baseClone_boolTag] = cloneableTags[_baseClone_dateTag] =
cloneableTags[_baseClone_float32Tag] = cloneableTags[_baseClone_float64Tag] =
cloneableTags[_baseClone_int8Tag] = cloneableTags[_baseClone_int16Tag] =
cloneableTags[_baseClone_int32Tag] = cloneableTags[_baseClone_mapTag] =
cloneableTags[_baseClone_numberTag] = cloneableTags[_baseClone_objectTag] =
cloneableTags[_baseClone_regexpTag] = cloneableTags[_baseClone_setTag] =
cloneableTags[_baseClone_stringTag] = cloneableTags[_baseClone_symbolTag] =
cloneableTags[_baseClone_uint8Tag] = cloneableTags[_baseClone_uint8ClampedTag] =
cloneableTags[_baseClone_uint16Tag] = cloneableTags[_baseClone_uint32Tag] = true;
cloneableTags[_baseClone_errorTag] = cloneableTags[_baseClone_funcTag] =
cloneableTags[_baseClone_weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!lodash_es_isObject(value)) {
    return value;
  }
  var isArr = lodash_es_isArray(value);
  if (isArr) {
    result = _initCloneArray(value);
    if (!isDeep) {
      return _copyArray(value, result);
    }
  } else {
    var tag = _getTag(value),
        isFunc = tag == _baseClone_funcTag || tag == _baseClone_genTag;

    if (Object(isBuffer["a" /* default */])(value)) {
      return Object(_cloneBuffer["a" /* default */])(value, isDeep);
    }
    if (tag == _baseClone_objectTag || tag == _baseClone_argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : _initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? _copySymbolsIn(value, _baseAssignIn(result, value))
          : _copySymbols(value, _baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = _initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new _Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (lodash_es_isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (lodash_es_isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? _getAllKeysIn : _getAllKeys)
    : (isFlat ? keysIn : lodash_es_keys);

  var props = isArr ? undefined : keysFunc(value);
  _arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

/* harmony default export */ var _baseClone = (baseClone);

// CONCATENATED MODULE: ./node_modules/lodash-es/cloneDeep.js


/** Used to compose bitmasks for cloning. */
var cloneDeep_CLONE_DEEP_FLAG = 1,
    cloneDeep_CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return _baseClone(value, cloneDeep_CLONE_DEEP_FLAG | cloneDeep_CLONE_SYMBOLS_FLAG);
}

/* harmony default export */ var lodash_es_cloneDeep = (cloneDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/_assignMergeValue.js



/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !lodash_es_eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

/* harmony default export */ var _assignMergeValue = (assignMergeValue);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createBaseFor.js
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/* harmony default export */ var _createBaseFor = (createBaseFor);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseFor.js


/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = _createBaseFor();

/* harmony default export */ var _baseFor = (baseFor);

// CONCATENATED MODULE: ./node_modules/lodash-es/isArrayLikeObject.js



/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return lodash_es_isObjectLike(value) && lodash_es_isArrayLike(value);
}

/* harmony default export */ var lodash_es_isArrayLikeObject = (isArrayLikeObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/isPlainObject.js




/** `Object#toString` result references. */
var isPlainObject_objectTag = '[object Object]';

/** Used for built-in method references. */
var isPlainObject_funcProto = Function.prototype,
    isPlainObject_objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var isPlainObject_funcToString = isPlainObject_funcProto.toString;

/** Used to check objects for own properties. */
var isPlainObject_hasOwnProperty = isPlainObject_objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = isPlainObject_funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!lodash_es_isObjectLike(value) || _baseGetTag(value) != isPlainObject_objectTag) {
    return false;
  }
  var proto = _getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = isPlainObject_hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    isPlainObject_funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ var lodash_es_isPlainObject = (isPlainObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_safeGet.js
/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/* harmony default export */ var _safeGet = (safeGet);

// CONCATENATED MODULE: ./node_modules/lodash-es/toPlainObject.js



/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return _copyObject(value, lodash_es_keysIn(value));
}

/* harmony default export */ var lodash_es_toPlainObject = (toPlainObject);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMergeDeep.js
















/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = _safeGet(object, key),
      srcValue = _safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    _assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = lodash_es_isArray(srcValue),
        isBuff = !isArr && Object(isBuffer["a" /* default */])(srcValue),
        isTyped = !isArr && !isBuff && lodash_es_isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (lodash_es_isArray(objValue)) {
        newValue = objValue;
      }
      else if (lodash_es_isArrayLikeObject(objValue)) {
        newValue = _copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = Object(_cloneBuffer["a" /* default */])(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = _cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (lodash_es_isPlainObject(srcValue) || lodash_es_isArguments(srcValue)) {
      newValue = objValue;
      if (lodash_es_isArguments(objValue)) {
        newValue = lodash_es_toPlainObject(objValue);
      }
      else if (!lodash_es_isObject(objValue) || lodash_es_isFunction(objValue)) {
        newValue = _initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  _assignMergeValue(object, key, newValue);
}

/* harmony default export */ var _baseMergeDeep = (baseMergeDeep);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseMerge.js








/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  _baseFor(source, function(srcValue, key) {
    stack || (stack = new _Stack);
    if (lodash_es_isObject(srcValue)) {
      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(_safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      _assignMergeValue(object, key, newValue);
    }
  }, lodash_es_keysIn);
}

/* harmony default export */ var _baseMerge = (baseMerge);

// CONCATENATED MODULE: ./node_modules/lodash-es/identity.js
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/* harmony default export */ var lodash_es_identity = (identity);

// CONCATENATED MODULE: ./node_modules/lodash-es/_apply.js
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/* harmony default export */ var _apply = (apply);

// CONCATENATED MODULE: ./node_modules/lodash-es/_overRest.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return _apply(func, this, otherArgs);
  };
}

/* harmony default export */ var _overRest = (overRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/constant.js
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/* harmony default export */ var lodash_es_constant = (constant);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSetToString.js




/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty ? lodash_es_identity : function(func, string) {
  return _defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': lodash_es_constant(string),
    'writable': true
  });
};

/* harmony default export */ var _baseSetToString = (baseSetToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_shortOut.js
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/* harmony default export */ var _shortOut = (shortOut);

// CONCATENATED MODULE: ./node_modules/lodash-es/_setToString.js



/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString);

/* harmony default export */ var _setToString = (setToString);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseRest.js




/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return _setToString(_overRest(func, start, lodash_es_identity), func + '');
}

/* harmony default export */ var _baseRest = (baseRest);

// CONCATENATED MODULE: ./node_modules/lodash-es/_isIterateeCall.js





/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!lodash_es_isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (lodash_es_isArrayLike(object) && _isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return lodash_es_eq(object[index], value);
  }
  return false;
}

/* harmony default export */ var _isIterateeCall = (isIterateeCall);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createAssigner.js



/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return _baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/* harmony default export */ var _createAssigner = (createAssigner);

// CONCATENATED MODULE: ./node_modules/lodash-es/merge.js



/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = _createAssigner(function(object, source, srcIndex) {
  _baseMerge(object, source, srcIndex);
});

/* harmony default export */ var lodash_es_merge = (merge);

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__("8bbf");
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseProperty.js
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ var _baseProperty = (baseProperty);

// CONCATENATED MODULE: ./node_modules/lodash-es/unzip.js






/* Built-in method references for those with the same name as other `lodash` methods. */
var unzip_nativeMax = Math.max;

/**
 * This method is like `_.zip` except that it accepts an array of grouped
 * elements and creates an array regrouping the elements to their pre-zip
 * configuration.
 *
 * @static
 * @memberOf _
 * @since 1.2.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 *
 * _.unzip(zipped);
 * // => [['a', 'b'], [1, 2], [true, false]]
 */
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = _arrayFilter(array, function(group) {
    if (lodash_es_isArrayLikeObject(group)) {
      length = unzip_nativeMax(group.length, length);
      return true;
    }
  });
  return _baseTimes(length, function(index) {
    return _arrayMap(array, _baseProperty(index));
  });
}

/* harmony default export */ var lodash_es_unzip = (unzip);

// CONCATENATED MODULE: ./node_modules/lodash-es/zip.js



/**
 * Creates an array of grouped elements, the first of which contains the
 * first elements of the given arrays, the second of which contains the
 * second elements of the given arrays, and so on.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 */
var zip = _baseRest(lodash_es_unzip);

/* harmony default export */ var lodash_es_zip = (zip);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseSum.js
/**
 * The base implementation of `_.sum` and `_.sumBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the sum.
 */
function baseSum(array, iteratee) {
  var result,
      index = -1,
      length = array.length;

  while (++index < length) {
    var current = iteratee(array[index]);
    if (current !== undefined) {
      result = result === undefined ? current : (result + current);
    }
  }
  return result;
}

/* harmony default export */ var _baseSum = (baseSum);

// CONCATENATED MODULE: ./node_modules/lodash-es/sum.js



/**
 * Computes the sum of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the sum.
 * @example
 *
 * _.sum([4, 2, 8, 6]);
 * // => 20
 */
function sum(array) {
  return (array && array.length)
    ? _baseSum(array, lodash_es_identity)
    : 0;
}

/* harmony default export */ var lodash_es_sum = (sum);

// CONCATENATED MODULE: ./node_modules/lodash-es/toNumber.js



/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (lodash_es_isSymbol(value)) {
    return NAN;
  }
  if (lodash_es_isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = lodash_es_isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/* harmony default export */ var lodash_es_toNumber = (toNumber);

// CONCATENATED MODULE: ./node_modules/lodash-es/toFinite.js


/** Used as references for various `Number` constants. */
var toFinite_INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = lodash_es_toNumber(value);
  if (value === toFinite_INFINITY || value === -toFinite_INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

/* harmony default export */ var lodash_es_toFinite = (toFinite);

// CONCATENATED MODULE: ./node_modules/lodash-es/toInteger.js


/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = lodash_es_toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

/* harmony default export */ var lodash_es_toInteger = (toInteger);

// CONCATENATED MODULE: ./node_modules/lodash-es/_createRound.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = _root["a" /* default */].isFinite,
    nativeMin = Math.min;

/**
 * Creates a function like `_.round`.
 *
 * @private
 * @param {string} methodName The name of the `Math` method to use when rounding.
 * @returns {Function} Returns the new round function.
 */
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = lodash_es_toNumber(number);
    precision = precision == null ? 0 : nativeMin(lodash_es_toInteger(precision), 292);
    if (precision && nativeIsFinite(number)) {
      // Shift with exponential notation to avoid floating-point issues.
      // See [MDN](https://mdn.io/round#Examples) for more details.
      var pair = (lodash_es_toString(number) + 'e').split('e'),
          value = func(pair[0] + 'e' + (+pair[1] + precision));

      pair = (lodash_es_toString(value) + 'e').split('e');
      return +(pair[0] + 'e' + (+pair[1] - precision));
    }
    return func(number);
  };
}

/* harmony default export */ var _createRound = (createRound);

// CONCATENATED MODULE: ./node_modules/lodash-es/round.js


/**
 * Computes `number` rounded to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round.
 * @param {number} [precision=0] The precision to round to.
 * @returns {number} Returns the rounded number.
 * @example
 *
 * _.round(4.006);
 * // => 4
 *
 * _.round(4.006, 2);
 * // => 4.01
 *
 * _.round(4060, -2);
 * // => 4100
 */
var round = _createRound('round');

/* harmony default export */ var lodash_es_round = (round);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNumber.js



/** `Object#toString` result references. */
var isNumber_numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber_isNumber(value) {
  return typeof value == 'number' ||
    (lodash_es_isObjectLike(value) && _baseGetTag(value) == isNumber_numberTag);
}

/* harmony default export */ var lodash_es_isNumber = (isNumber_isNumber);

// CONCATENATED MODULE: ./node_modules/lodash-es/isNaN.js


/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */
function isNaN_isNaN(value) {
  // An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some
  // ActiveX objects in IE.
  return lodash_es_isNumber(value) && value != +value;
}

/* harmony default export */ var lodash_es_isNaN = (isNaN_isNaN);

// EXTERNAL MODULE: ./node_modules/numeral/numeral.js
var numeral = __webpack_require__("6612");
var numeral_default = /*#__PURE__*/__webpack_require__.n(numeral);

// CONCATENATED MODULE: ./src/utils/formatZhNumber.js


numeral_default.a.register('format', 'zh-number', {
  regexps: {
    format: /(zh)/,
    unformat: /(zh)/
  },
  format: function (value, format, roundingFunction) {
    // 判断是否有空格
    const space = numeral_default.a._.includes(format, ' zh') ? ' ' : ''
    // match 数据格式
    const precision = format.match(/\d.\d+/)
    let digits
    if (precision) {
      // 确定小数点后几位小数
      digits = precision[0].split('.')[1].length
    }
    // check for space before zh
    format = format.replace(/\s?zh/, '')

    const cnNumberFormat = (val, digits = 0) => {
      if (isNaN(+val)) return val

      let symbolMap = [
        { value: 1E8, symbol: '亿' },
        { value: 1E4, symbol: '万' },
        { value: 1E3, symbol: '千' }
      ]

      for (let i = 0; i < symbolMap.length; i++) {
        if (Math.abs(val) >= symbolMap[i].value) {
          return (val / symbolMap[i].value) + space + symbolMap[i].symbol
        }
      }

      return val.toString()
    }

    return cnNumberFormat(value, digits)
  },
  unformat: function (string) {
    return numeral_default.a._.stringToNumber(string) * 0.01
  }
})

// CONCATENATED MODULE: ./src/utils/index.js





const getStackMap = (stack) => {
  const stackMap = {}
  Object.keys(stack).forEach(item => {
    stack[item].forEach(name => {
      stackMap[name] = item
    })
  })
  return stackMap
}

const $get = (url) => {
  return new Promise((resolve, reject) => {
    const xhr = new XMLHttpRequest()
    xhr.open('GET', url)
    xhr.send(null)
    xhr.onload = () => {
      resolve(JSON.parse(xhr.responseText))
    }
    xhr.onerror = () => {
      reject(JSON.parse(xhr.responseText))
    }
  })
}

const getMapJSON = ({ mapName, mapUrlPrefix }) => {
  const url = `${mapUrlPrefix}${mapName}.json`
  return $get(url)
}

const getType = (v) => {
  return Object.prototype.toString.call(v)
}

// dataset format
const getDataset = (data, settings, extra) => {
  const cloneData = lodash_es_cloneDeep(data)
  const dimName = cloneData && cloneData.dimensions && cloneData.dimensions.name
  const dimData = cloneData && cloneData.dimensions && cloneData.dimensions.data
  const { isEmptyData, chartType } = extra

  const stack = (settings && settings.stack) || null
  const percentage = (settings && settings.percentage) || false

  // when data is not empty and data.dimensions.data is undefiend
  if (!isEmptyData && dimData === undefined) {
    external_vue_default.a.util.warn(`data.dimensions.data is required. Please check on you data`, undefined)
    return
  }

  /**
   * echarts render problem with dataset
   * problem1: when dimension name a number-like string(e.g., `"1"`), start with number and <= measures.length
   * https://github.com/apache/incubator-echarts/blob/4e4cf884fc8a96b18bd1de537b590042e49df684/src/data/List.js#L339
   * solution: append a ' ' to the dimension name
   * problem2: [piechart] when measure.data start with number
   * solution: use special String instead
   * PS. in version v0.4.6 all seems fixed
   */
  let dimKey = `${dimName}`
  let headMeasure = dimData.length > 0 && dimData[0]

  let dimValue = validateNumber(headMeasure) && chartType === 'pie'
    ? dimData.map((v, i) => i === 0 ? `${v}` : v)
    : dimData

  const dimensions = {
    [dimKey]: dimValue
  }

  let [measures, zipSumed] = [{}, []]

  if (stack && percentage && cloneData.measures.length > 0) {
    const dyadicArray = cloneData.measures.map(col => col.data)
    // 横表转竖表 用于计算百分比堆叠图
    const zipped = lodash_es_zip(...dyadicArray)
    zipSumed = zipped.map(v => {
      const arr = v.map(v => {
        return validateNumber(v) ? v : parseFloat(v, 10)
      })
      return lodash_es_sum(arr)
    })
  }

  cloneData.measures.map(row => {
    const isNumber = validateNumber(row.name)
    const rowName = isNumber ? `${row.name} ` : row.name
    Object.assign(measures, {
      [rowName]: (stack && percentage)
        ? row.data.map((v, i) => lodash_es_round((v / zipSumed[i]), 4))
        : row.data
    })
  })

  let dims = []
  const firstDim = lodash_es_isUndefined(dimName) ? 'dimension' : dimName
  dims.push(firstDim)
  dims = [...dims, ...cloneData.measures.map(v => v.name)]

  const source = Object.assign({}, dimensions, measures)

  const dataset = {
    dimensions: dims,
    source
  }

  // console.log(JSON.stringify(dataset))

  return dataset
}

// format measure
const formatMeasure = (type, value, digits = 0) => {
  const transformType = (type, value, digits) => {
    const digitReg = digits > 0 ? `0.${'0'.repeat(digits)}` : '0'
    const digitCurReg = digits > 0 ? `0,0.${'0'.repeat(digits)}` : '0,0'
    switch (type) {
      case 'currency':
        return numeral_default()(value).format(digitCurReg)
      case 'en':
        return numeral_default()(value).format(`${digitReg} a`)
      case 'zh':
        return numeral_default()(value).format(`${digitReg} zh`)
      case 'percentage':
        return numeral_default()(value).format(`${digitReg}%`)
      default:
        return value
    }
  }
  return transformType(type, value, digits)
}

// Returns true if the given value is a number, false otherwise.
const validateNumber = n => !lodash_es_isNaN(parseFloat(n)) && isFinite(n) && Number(n) === n



// CONCATENATED MODULE: ./src/base-options.js
const base_options_options = {
  grid: {
    right: 10,
    bottom: 10,
    left: 10,
    containLabel: true
  },
  series: []
}

const itemPoint = (color) => {
  return [
    '<span style="',
    `background-color:${color};`,
    'display: inline-block;',
    'width: 10px;',
    'height: 10px;',
    'border-radius: 50%;',
    'margin-right:2px;',
    '"></span>'
  ].join('')
}

const color = [
  '#5282e4', '#40b17e', '#ffd600', '#f88d48', '#2ebce2',
  '#f35352', '#ce62d6', '#8954d4', '#5257b8', '#d42d6b'
]

const treemapLevels = [
  {
    itemStyle: {
      borderColor: '#fff'
    }
  }, {
    colorSaturation: [0.3, 0.6],
    itemStyle: {
      borderColorSaturation: 0.7,
      gapWidth: 5,
      borderWidth: 2
    }
  }, {
    colorSaturation: [0.3, 0.5],
    itemStyle: {
      borderColorSaturation: 0.6
    }
  }, {
    colorSaturation: [0.3, 0.5]
  }
]

const waterfallConfig = {
  secondaryMeasure: {
    barBorderColor: 'rgba(0,0,0,0)',
    color: 'rgba(0,0,0,0)',
    emphasis: {
      barBorderColor: 'rgba(0,0,0,0)',
      color: 'rgba(0,0,0,0)'
    }
  }
}

const MAP_URL_PREFIX = 'https://unpkg.com/echarts@4.1.0/map/json/'

/* harmony default export */ var base_options = ({
  options: base_options_options,
  itemPoint,
  color,
  treemapLevels,
  waterfallConfig,
  MAP_URL_PREFIX
});

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"45371285-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/BaseEcharts.vue?vue&type=template&id=2f0af4e5&
var BaseEchartsvue_type_template_id_2f0af4e5_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"echarts",style:(_vm.echartsStyle)})}
var BaseEchartsvue_type_template_id_2f0af4e5_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/BaseEcharts.vue?vue&type=template&id=2f0af4e5&

// CONCATENATED MODULE: ./node_modules/lodash-es/now.js


/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return _root["a" /* default */].Date.now();
};

/* harmony default export */ var lodash_es_now = (now);

// CONCATENATED MODULE: ./node_modules/lodash-es/debounce.js




/** Error message constants. */
var debounce_FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var debounce_nativeMax = Math.max,
    debounce_nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(debounce_FUNC_ERROR_TEXT);
  }
  wait = lodash_es_toNumber(wait) || 0;
  if (lodash_es_isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? debounce_nativeMax(lodash_es_toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? debounce_nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = lodash_es_now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(lodash_es_now());
  }

  function debounced() {
    var time = lodash_es_now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/* harmony default export */ var lodash_es_debounce = (debounce);

// CONCATENATED MODULE: ./node_modules/resize-detector/esm/index.js
let raf = null;
function requestAnimationFrame (callback) {
  if (!raf) {
    raf = (
      window.requestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      function (callback) {
        return setTimeout(callback, 16)
      }
    ).bind(window);
  }
  return raf(callback)
}

let caf = null;
function cancelAnimationFrame (id) {
  if (!caf) {
    caf = (
      window.cancelAnimationFrame ||
      window.webkitCancelAnimationFrame ||
      window.mozCancelAnimationFrame ||
      function (id) {
        clearTimeout(id);
      }
    ).bind(window);
  }

  caf(id);
}

function createStyles (styleText) {
  var style = document.createElement('style');
  style.type = 'text/css';

  if (style.styleSheet) {
    style.styleSheet.cssText = styleText;
  } else {
    style.appendChild(document.createTextNode(styleText));
  }
  (document.querySelector('head') || document.body).appendChild(style);
  return style
}

function createElement (tagName, props = {}) {
  let elem = document.createElement(tagName);
  Object.keys(props).forEach(key => {
    elem[key] = props[key];
  });
  return elem
}

function getComputedStyle (elem, prop, pseudo) {
  // for older versions of Firefox, `getComputedStyle` required
  // the second argument and may return `null` for some elements
  // when `display: none`
  let computedStyle = window.getComputedStyle(elem, pseudo || null) || {
    display: 'none'
  };

  return computedStyle[prop]
}

function getRenderInfo (elem) {
  if (!document.documentElement.contains(elem)) {
    return {
      detached: true,
      rendered: false
    }
  }

  let current = elem;
  while (current !== document) {
    if (getComputedStyle(current, 'display') === 'none') {
      return {
        detached: false,
        rendered: false
      }
    }
    current = current.parentNode;
  }

  return {
    detached: false,
    rendered: true
  }
}

var css = ".resize-triggers{visibility:hidden;opacity:0;pointer-events:none}.resize-contract-trigger,.resize-contract-trigger:before,.resize-expand-trigger,.resize-triggers{content:\"\";position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden}.resize-contract-trigger,.resize-expand-trigger{background:#eee;overflow:auto}.resize-contract-trigger:before{width:200%;height:200%}";

let total = 0;
let style = null;

function addListener (elem, callback) {
  if (!elem.__resize_mutation_handler__) {
    elem.__resize_mutation_handler__ = handleMutation.bind(elem);
  }

  let listeners = elem.__resize_listeners__;

  if (!listeners) {
    elem.__resize_listeners__ = [];
    if (window.ResizeObserver) {
      let { offsetWidth, offsetHeight } = elem;
      let ro = new ResizeObserver(() => {
        if (!elem.__resize_observer_triggered__) {
          elem.__resize_observer_triggered__ = true;
          if (elem.offsetWidth === offsetWidth && elem.offsetHeight === offsetHeight) {
            return
          }
        }
        runCallbacks(elem);
      });

      // initially display none won't trigger ResizeObserver callback
      let { detached, rendered } = getRenderInfo(elem);
      elem.__resize_observer_triggered__ = detached === false && rendered === false;
      elem.__resize_observer__ = ro;
      ro.observe(elem);
    } else if (elem.attachEvent && elem.addEventListener) {
      // targeting IE9/10
      elem.__resize_legacy_resize_handler__ = function handleLegacyResize () {
        runCallbacks(elem);
      };
      elem.attachEvent('onresize', elem.__resize_legacy_resize_handler__);
      document.addEventListener('DOMSubtreeModified', elem.__resize_mutation_handler__);
    } else {
      if (!total) {
        style = createStyles(css);
      }
      initTriggers(elem);

      elem.__resize_rendered__ = getRenderInfo(elem).rendered;
      if (window.MutationObserver) {
        let mo = new MutationObserver(elem.__resize_mutation_handler__);
        mo.observe(document, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
        elem.__resize_mutation_observer__ = mo;
      }
    }
  }

  elem.__resize_listeners__.push(callback);
  total++;
}

function removeListener (elem, callback) {
  let listeners = elem.__resize_listeners__;
  if (!listeners) {
    return
  }

  if (callback) {
    listeners.splice(listeners.indexOf(callback), 1);
  }

  // no listeners exist, or removing all listeners
  if (!listeners.length || !callback) {
    // targeting IE9/10
    if (elem.detachEvent && elem.removeEventListener) {
      elem.detachEvent('onresize', elem.__resize_legacy_resize_handler__);
      document.removeEventListener('DOMSubtreeModified', elem.__resize_mutation_handler__);
      return
    }

    if (elem.__resize_observer__) {
      elem.__resize_observer__.unobserve(elem);
      elem.__resize_observer__.disconnect();
      elem.__resize_observer__ = null;
    } else {
      if (elem.__resize_mutation_observer__) {
        elem.__resize_mutation_observer__.disconnect();
        elem.__resize_mutation_observer__ = null;
      }
      elem.removeEventListener('scroll', handleScroll);
      elem.removeChild(elem.__resize_triggers__.triggers);
      elem.__resize_triggers__ = null;
    }
    elem.__resize_listeners__ = null;
  }

  if (!--total && style) {
    style.parentNode.removeChild(style);
  }
}

function getUpdatedSize (elem) {
  let { width, height } = elem.__resize_last__;
  let { offsetWidth, offsetHeight } = elem;
  if (offsetWidth !== width || offsetHeight !== height) {
    return {
      width: offsetWidth,
      height: offsetHeight
    }
  }
  return null
}

function handleMutation () {
  // `this` denotes the scrolling element
  let { rendered, detached } = getRenderInfo(this);
  if (rendered !== this.__resize_rendered__) {
    if (!detached && this.__resize_triggers__) {
      resetTriggers(this);
      this.addEventListener('scroll', handleScroll, true);
    }
    this.__resize_rendered__ = rendered;
    runCallbacks(this);
  }
}

function handleScroll () {
  // `this` denotes the scrolling element
  resetTriggers(this);
  if (this.__resize_raf__) {
    cancelAnimationFrame(this.__resize_raf__);
  }
  this.__resize_raf__ = requestAnimationFrame(() => {
    let updated = getUpdatedSize(this);
    if (updated) {
      this.__resize_last__ = updated;
      runCallbacks(this);
    }
  });
}

function runCallbacks (elem) {
  if (!elem || !elem.__resize_listeners__) {
    return
  }
  elem.__resize_listeners__.forEach(callback => {
    callback.call(elem, elem);
  });
}

function initTriggers (elem) {
  let position = getComputedStyle(elem, 'position');
  if (!position || position === 'static') {
    elem.style.position = 'relative';
  }

  elem.__resize_old_position__ = position;
  elem.__resize_last__ = {};

  let triggers = createElement('div', {
    className: 'resize-triggers'
  });
  let expand = createElement('div', {
    className: 'resize-expand-trigger'
  });
  let expandChild = createElement('div');
  let contract = createElement('div', {
    className: 'resize-contract-trigger'
  });
  expand.appendChild(expandChild);
  triggers.appendChild(expand);
  triggers.appendChild(contract);
  elem.appendChild(triggers);

  elem.__resize_triggers__ = {
    triggers,
    expand,
    expandChild,
    contract
  };

  resetTriggers(elem);
  elem.addEventListener('scroll', handleScroll, true);

  elem.__resize_last__ = {
    width: elem.offsetWidth,
    height: elem.offsetHeight
  };
}

function resetTriggers (elem) {
  let { expand, expandChild, contract } = elem.__resize_triggers__;

  // batch read
  let { scrollWidth: csw, scrollHeight: csh } = contract;
  let { offsetWidth: eow, offsetHeight: eoh, scrollWidth: esw, scrollHeight: esh } = expand;

  // batch write
  contract.scrollLeft = csw;
  contract.scrollTop = csh;
  expandChild.style.width = eow + 1 + 'px';
  expandChild.style.height = eoh + 1 + 'px';
  expand.scrollLeft = esw;
  expand.scrollTop = esh;
}



// EXTERNAL MODULE: external "zrender"
var external_zrender_ = __webpack_require__("1523");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/BaseEcharts.vue?vue&type=script&lang=js&
//
//
//
//





// default echarts's component in VeCharts






// enumerating ECharts events for now
const EVENTS = [
  'legendselectchanged',
  'legendselected',
  'legendunselected',
  'legendscroll',
  'datazoom',
  'datarangeselected',
  'timelinechanged',
  'timelineplaychanged',
  'restore',
  'dataviewchanged',
  'magictypechanged',
  'geoselectchanged',
  'geoselected',
  'geounselected',
  'pieselectchanged',
  'pieselected',
  'pieunselected',
  'mapselectchanged',
  'mapselected',
  'mapunselected',
  'axisareaselected',
  'focusnodeadjacency',
  'unfocusnodeadjacency',
  'brush',
  'brushselected',
  'globalcursortaken',
  'rendered',
  'finished',
  // mouse event
  'click',
  'dblclick',
  'mouseover',
  'mouseout',
  'mousedown',
  'mouseup',
  'globalout',
  'contextmenu'
]

/* harmony default export */ var BaseEchartsvue_type_script_lang_js_ = ({
  props: {
    options: Object,
    theme: [String, Object],
    initOptions: Object,
    group: String,
    autoResize: Boolean,
    watchShallow: Boolean,
    chartHeight: { type: Number, default: 400 }
  },
  data () {
    return {
      chart: null
    }
  },
  computed: {
    // Only recalculated when accessed from JavaScript.
    // Won't update DOM on value change because getters
    // don't depend on reactive values
    width: {
      cache: false,
      get () {
        return this.delegateGet('width', 'getWidth')
      }
    },
    height: {
      cache: false,
      get () {
        return this.delegateGet('height', 'getHeight')
      }
    },
    isDisposed: {
      cache: false,
      get () {
        return !!this.delegateGet('isDisposed', 'isDisposed')
      }
    },
    computedOptions: {
      cache: false,
      get () {
        return this.delegateGet('computedOptions', 'getOption')
      }
    },
    echartsStyle () {
      return {
        width: 'auto',
        height: `${this.chartHeight}px`
      }
    }
  },
  watch: {
    group (group) {
      this.chart.group = group
    }
  },
  methods: {
    // provide a explicit merge option method
    mergeOptions (options, notMerge, lazyUpdate) {
      this.delegateMethod('setOption', options, notMerge, lazyUpdate)
    },
    // just delegates ECharts methods to Vue component
    // use explicit params to reduce transpiled size for now
    appendData (params) {
      this.delegateMethod('appendData', params)
    },
    resize (options) {
      this.delegateMethod('resize', options)
    },
    dispatchAction (payload) {
      this.delegateMethod('dispatchAction', payload)
    },
    convertToPixel (finder, value) {
      return this.delegateMethod('convertToPixel', finder, value)
    },
    convertFromPixel (finder, value) {
      return this.delegateMethod('convertFromPixel', finder, value)
    },
    containPixel (finder, value) {
      return this.delegateMethod('containPixel', finder, value)
    },
    showLoading (type, options) {
      this.delegateMethod('showLoading', type, options)
    },
    hideLoading () {
      this.delegateMethod('hideLoading')
    },
    getDataURL (options) {
      return this.delegateMethod('getDataURL', options)
    },
    getConnectedDataURL (options) {
      return this.delegateMethod('getConnectedDataURL', options)
    },
    clear () {
      this.delegateMethod('clear')
    },
    dispose () {
      this.delegateMethod('dispose')
    },
    delegateMethod (name, ...args) {
      if (!this.chart) {
        external_vue_default.a.util.warn(`Cannot call [${name}] before the chart is initialized. Set prop [options] first.`, this)
        return
      }
      return this.chart[name](...args)
    },
    delegateGet (name, method) {
      if (!this.chart) {
        external_vue_default.a.util.warn(`Cannot get [${name}] before the chart is initialized. Set prop [options] first.`, this)
      }
      return this.chart[method]()
    },
    init () {
      if (this.chart) {
        return
      }

      let chart = external_echarts_default.a.init(this.$el, this.theme, this.initOptions)

      if (this.group) {
        chart.group = this.group
      }

      chart.setOption(this.options, true)

      // expose ECharts instance zrender when click blank on chart as custom event
      chart.getZr().on('click', e => !e.target && this.$emit('blankClick', e))

      // expose ECharts events as custom events
      EVENTS.forEach(event => {
        chart.on(event, params => {
          this.$emit(event, params)
        })
      })

      if (this.autoResize) {
        this.__resizeHanlder = lodash_es_debounce(() => {
          chart.resize()
        }, 100, { leading: true })
        addListener(this.$el, this.__resizeHanlder)
      }

      this.chart = chart
      this.$emit('update:ec', chart)
    },
    destroy () {
      if (this.autoResize) {
        removeListener(this.$el, this.__resizeHanlder)
      }
      this.dispose()
      this.chart = null
    },
    refresh () {
      this.destroy()
      this.init()
    }
  },
  created () {
    this.$watch('options', options => {
      if (!this.chart && options) {
        this.init()
      } else {
        this.chart.setOption(this.options, true)
      }
    }, { deep: !this.watchShallow })

    let watched = ['theme', 'initOptions', 'autoResize', 'watchShallow']
    watched.forEach(prop => {
      this.$watch(prop, () => {
        this.refresh()
      }, { deep: true })
    })
  },
  mounted () {
    // auto init if `options` is already provided
    if (this.options) {
      this.init()
    }
  },
  activated () {
    if (this.autoResize) {
      this.chart && this.chart.resize()
    }
  },
  beforeDestroy () {
    if (!this.chart) {
      return
    }
    this.destroy()
  },
  connect (group) {
    if (typeof group !== 'string') {
      group = group.map(chart => chart.chart)
    }
    external_echarts_default.a.connect(group)
  },
  disconnect (group) {
    external_echarts_default.a.disConnect(group)
  },
  registerMap (mapName, geoJSON, specialAreas) {
    external_echarts_default.a.registerMap(mapName, geoJSON, specialAreas)
  },
  registerTheme (name, theme) {
    external_echarts_default.a.registerTheme(name, theme)
  },
  graphic: external_echarts_default.a.graphic
});

// CONCATENATED MODULE: ./src/components/BaseEcharts.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_BaseEchartsvue_type_script_lang_js_ = (BaseEchartsvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/BaseEcharts.vue?vue&type=style&index=0&lang=css&
var BaseEchartsvue_type_style_index_0_lang_css_ = __webpack_require__("46e2");

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/components/BaseEcharts.vue






/* normalize component */

var component = normalizeComponent(
  components_BaseEchartsvue_type_script_lang_js_,
  BaseEchartsvue_type_template_id_2f0af4e5_render,
  BaseEchartsvue_type_template_id_2f0af4e5_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var BaseEcharts = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"45371285-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EmptyData.vue?vue&type=template&id=c31aa314&
var EmptyDatavue_type_template_id_c31aa314_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"ve-charts-empty-data"},[_c('span',{domProps:{"textContent":_vm._s(_vm.emptyText)}})])}
var EmptyDatavue_type_template_id_c31aa314_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/EmptyData.vue?vue&type=template&id=c31aa314&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/EmptyData.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var EmptyDatavue_type_script_lang_js_ = ({
  name: 'EchartsEmptyData',
  props: {
    emptyText: {
      type: String,
      default: '暂无数据'
    }
  }
});

// CONCATENATED MODULE: ./src/components/EmptyData.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_EmptyDatavue_type_script_lang_js_ = (EmptyDatavue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/EmptyData.vue?vue&type=style&index=0&lang=css&
var EmptyDatavue_type_style_index_0_lang_css_ = __webpack_require__("86eb");

// CONCATENATED MODULE: ./src/components/EmptyData.vue






/* normalize component */

var EmptyData_component = normalizeComponent(
  components_EmptyDatavue_type_script_lang_js_,
  EmptyDatavue_type_template_id_c31aa314_render,
  EmptyDatavue_type_template_id_c31aa314_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var EmptyData = (EmptyData_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"45371285-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/LoadingChart.vue?vue&type=template&id=e9ed1440&
var LoadingChartvue_type_template_id_e9ed1440_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"ve-charts-loading-mask"},[_c('div',{staticClass:"loading-spinner"},[_c('svg',{staticClass:"circular",attrs:{"viewBox":"25 25 50 50"}},[_c('circle',{staticClass:"path",attrs:{"cx":"50","cy":"50","r":"20","fill":"none"}})])])])}
var LoadingChartvue_type_template_id_e9ed1440_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/LoadingChart.vue?vue&type=template&id=e9ed1440&

// EXTERNAL MODULE: ./src/components/LoadingChart.vue?vue&type=style&index=0&lang=less&
var LoadingChartvue_type_style_index_0_lang_less_ = __webpack_require__("137f");

// CONCATENATED MODULE: ./src/components/LoadingChart.vue

var script = {}



/* normalize component */

var LoadingChart_component = normalizeComponent(
  script,
  LoadingChartvue_type_template_id_e9ed1440_render,
  LoadingChartvue_type_template_id_e9ed1440_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var LoadingChart = (LoadingChart_component.exports);
// CONCATENATED MODULE: ./src/mixins/core.js








/* harmony default export */ var core = ({
  components: {
    BaseEcharts: BaseEcharts,
    EmptyData: EmptyData,
    LoadingChart: LoadingChart
  },
  props: {
    data: { type: [Object, Array], default () { return {} } },
    settings: { type: [Object, Array], default () { return {} } },
    // echarts default options
    title: Object,
    legend: Object,
    grid: Object,
    xAxis: [Object, Array],
    yAxis: [Object, Array],
    polar: Object,
    radiusAxis: Object,
    angleAxis: Object,
    radar: [Object, Array],
    dataZoom: [Object, Array],
    visualMap: [Object, Array],
    tooltip: Object,
    axisPointer: Object,
    toolbox: Object,
    brush: Object,
    geo: Object,
    parallel: Object,
    parallelAxis: Array,
    singleAxis: Array,
    timeline: Object,
    graphic: Object,
    calendar: Object,
    dataset: Object,
    series: [Object, Array],
    color: Array,
    backgroundColor: [Object, String],
    textStyle: Object,
    animation: Object,
    animationThreshold: Number,
    animationDuration: [Number, Function],
    animationEasing: [String, Function],
    animationDelay: [Number, Function],
    animationDurationUpdate: [Number, Function],
    animationEasingUpdate: [String, Function],
    animationDelayUpdate: [String, Function],
    blendMode: String,
    hoverLayerThreshold: Number,
    useUTC: { type: Boolean, default: false },
    // ve-charts custom props
    tooltipVisible: { type: Boolean, default: true },
    legendVisible: { type: Boolean, default: true },
    tickMarkVisible: { type: Boolean, default: false }, // 雷达图是否显示刻度
    legendPosition: String,
    theme: [String, Object],
    loading: { type: Boolean, default: false },
    emptyText: String,
    renderer: { type: String, default: 'canvas' },
    height: { type: Number, default: 400 },
    seriesOption: { type: Object, default () { return {} } }
  },
  data () {
    return {
      // echarts instance
      ec: null,
      initOptions: null
    }
  },
  computed: {
    chartColor () {
      return this.theme ? this.color : (this.color || color)
    },
    isEmptyData () {
      if (lodash_es_isNull(this.data) || lodash_es_isEmpty(this.data) || lodash_es_isUndefined(this.data)) {
        return true
      } else {
        if (Array.isArray(this.data)) {
          return false
        } else {
          const measures = lodash_es_get(this.data, 'measures')
          return measures.length === 0
        }
      }
    },
    isEmptySeries () {
      return lodash_es_isNull(this.series) || lodash_es_isEmpty(this.series) || lodash_es_isUndefined(this.series)
    },
    isHasData () {
      return !this.isEmptyData || !this.isEmptySeries
    },
    isHasParentStyle () {
      return this.loading || (this.isEmptyData && this.isEmptySeries)
    },
    parentStyle () {
      const parentStyle = this.isHasParentStyle
        ? { position: 'relative', height: `${this.height}px` }
        : {}
      return parentStyle
    }
  },
  watch: {
    data: {
      deep: true,
      handler (v) {
        if (v) { this.dataHandler(v) }
      }
    },
    settings: {
      deep: true,
      handler (v) {
        this.dataHandler(this.data)
      }
    },
    ec (val) {
      this.$emit('update:ec', val)
    }
  },
  methods: {
    dataHandler (data) {
      if (!this.chartHandler || (this.isEmptyData && this.isEmptySeries)) return
      const extra = {
        tooltipVisible: this.tooltipVisible,
        legendVisible: this.legendVisible,
        isEmptyData: this.isEmptyData,
        isEmptySeries: this.isEmptySeries,
        tickMarkVisible: this.tickMarkVisible,
        _once: this._once
      }
      if (this.beforeConfig) data = this.beforeConfig(data)

      const options = this.chartHandler(data, lodash_es_cloneDeep(this.settings), extra)

      if (options) {
        if (typeof options.then === 'function') {
          options.then(this.optionsHandler)
        } else {
          this.optionsHandler(options)
        }
      }
    },
    optionsHandler (options) {
      options.color = this.chartColor
      // handle legend
      if (this.legendPosition && options.legend) {
        const position = this.legendPosition.split('-').shift()
        options.legend.left = this.legendPosition.split('-').pop()
        if (['top'].indexOf(position) !== -1) options.legend.top = 0
        if (['bottom'].indexOf(position) !== -1) options.legend.bottom = 0
      }
      const echartsSettings = [
        'title', 'legend', 'grid', 'xAxis', 'yAxis', 'polar', 'radiusAxis', 'angleAxis',
        'radar', 'dataZoom', 'visualMap', 'tooltip', 'axisPointer', 'toolbox', 'brush',
        'geo', 'parallel', 'parallelAxis', 'singleAxis', 'timeline', 'graphic', 'calendar',
        'dataset', 'series', 'color', 'backgroundColor', 'textStyle', 'animation',
        'animationThreshold', 'animationDuration', 'animationEasing', 'animationDelay',
        'animationDurationUpdate', 'animationEasingUpdate', 'animationDelayUpdate', 'blendMode',
        'hoverLayerThreshold', 'useUTC'
      ]
      echartsSettings.forEach(setting => {
        if (this[setting]) options[setting] = this[setting]
      })
      if (this.animation) {
        Object.keys(this.animation).forEach(key => {
          options[key] = this.animation[key]
        })
      }
      options.series = this.seriesHandler(options.series)
      // Merge options
      this.options = Object.assign(lodash_es_cloneDeep(this.options), options)
    },
    seriesHandler (series) {
      // 当 series 系列为空数组
      if (Array.isArray(series) && series.length === 0) return []

      // 当 series 为对象时，初始化为数组
      if (!(series instanceof Array)) return [series]

      // 当未配置 seriesOption 系列配置时
      if (Object.keys(this.seriesOption).length === 0) return series

      // 生成 series
      for (const [key, opt] of Object.entries(this.seriesOption)) {
        const _idx = series.findIndex(v => v.name === key)
        if (_idx > -1) { // 存在series时，合并配置项
          lodash_es_merge(series[_idx], opt)
        } else if (opt.type) { // 不存在series时，如果包含type，新建系列
          series[series.length] = opt
        }
      }
      return series
    },
    init () {
      if (this.data) this.dataHandler(this.data)
    },
    addWatchToProps () {
      const watchedVariable = this._watchers.map(watcher => watcher.expression)
      Object.keys(this.$props).forEach(prop => {
        if (!~watchedVariable.indexOf(prop)) {
          const opts = {}
          if (getType(prop) === '[object Object]') {
            opts.deep = true
          }
          this.$watch(prop, () => {
            this.dataHandler(this.data)
          }, opts)
        }
      })
    }
  },
  created () {
    // init options
    this.initOptions = {
      renderer: this.renderer
    }
    this._once = {}
    this.addWatchToProps()
  },
  mounted () {
    this.init()
  }
});

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/HocEcharts.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var HocEchartsvue_type_script_lang_js_ = ({
  mixins: [core],
  data () {
    return {
      options: base_options_options,
      initOptions: {
        renderer: 'canvas'
      }
    }
  }
});

// CONCATENATED MODULE: ./src/components/HocEcharts.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_HocEchartsvue_type_script_lang_js_ = (HocEchartsvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/HocEcharts.vue





/* normalize component */

var HocEcharts_component = normalizeComponent(
  components_HocEchartsvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var HocEcharts = (HocEcharts_component.exports);
// CONCATENATED MODULE: ./src/BaseChart.js
class BaseChart {
  constructor (data, settings, extra) {
    this.data = data
    this.settings = settings
    this.extra = extra
  }

  chartHandler () {}
}

/* harmony default export */ var src_BaseChart = (BaseChart);

// CONCATENATED MODULE: ./src/packages/bar/chart.js






class chart_BarChart extends src_BaseChart {
  // build tooltip
  static getBarTooltip (settings) {
    const { tooltipOptions } = settings
    return {
      trigger: 'axis',
      axisPointer: { // 坐标轴指示器，坐标轴触发有效
        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
      },
      ...tooltipOptions
    }
  }

  // build legend
  static getBarLegend (data, settings) {
    const { measures } = data
    const { legendType, legendPadding, waterfall, legendOptions } = settings
    let result = {
      type: legendType || 'plain',
      padding: legendPadding || 5,
      ...legendOptions
    }
    // 当配置项填入waterfall,瀑布图默认将图例去除secondaryMeasure--by:jeff
    if (waterfall && waterfall === true) {
      result['data'] = measures.filter(({ name }) => {
        if (name !== 'secondaryMeasure') return name
      })
    }
    return result
  }

  // build grid
  static getBarGrid (isBar) {
    const BarGrid = {
      right: 30,
      bottom: 10,
      left: 30,
      containLabel: true
    }
    return isBar ? BarGrid : base_options_options.grid
  }

  // build dimension Axis
  static getBarDimAxis (settings) {
    const {
      dimAxisType,
      dimAxisLineShow,
      dimAxisLabelShow,
      dimAxisLabelColor,
      xAxisName,
      xAxisSplitLine,
      dimAxisLabelRotate,
      dimAxisPointerType
    } = settings

    const axisItem = {
      type: dimAxisType,
      axisLine: {
        show: Array.isArray(dimAxisLineShow) ? dimAxisLineShow[0] : dimAxisLineShow
      },
      axisTick: {
        show: false
      },
      axisLabel: {
        show: Array.isArray(dimAxisLabelShow) ? dimAxisLabelShow[0] : dimAxisLabelShow,
        margin: 10,
        fontWeight: 400,
        color: Array.isArray(dimAxisLabelColor) ? dimAxisLabelColor[0] : dimAxisLabelColor,
        rotate: dimAxisLabelRotate
      },
      axisPointer: {
        show: true,
        type: dimAxisPointerType
      }
    }
    if (xAxisName) {
      axisItem.name = xAxisName
    }

    if (xAxisSplitLine) {
      axisItem.splitLine = xAxisSplitLine
    }

    const disAxis = []
    disAxis.push(axisItem)
    return disAxis
  }

  // build measure axis
  static getBarMeaAxis (data, settings) {
    const {
      meaAxisType,
      meaAxisDigits,
      meaAxisLineShow,
      meaAxisLabelShow,
      meaAxisLabelColor,
      meaAxisLabelRotate,
      yAxisScale = false,
      percentage = false,
      yAxisName,
      yAxisInterval,
      yAxisMax,
      yAxisMin
    } = settings

    const meaAxisBase = {
      type: 'value',
      scale: yAxisScale,
      axisTick: {
        show: false
      },
      min: percentage ? 0 : null,
      max: percentage ? 1 : null
    }

    const meaAxis = []
    meaAxisType.forEach((type, i) => {
      const axisLabel = {
        show: Array.isArray(meaAxisLabelShow) ? meaAxisLabelShow[i] : meaAxisLabelShow,
        margin: 10,
        fontWeight: 400,
        color: Array.isArray(meaAxisLabelColor) ? meaAxisLabelColor[i] : meaAxisLabelColor,
        rotate: meaAxisLabelRotate
      }
      if (type !== 'normal') {
        // Y轴标签格式化后保留几位小数兼容之前版本类型
        if (lodash_es_isArray(meaAxisDigits)) {
          let num = lodash_es_isUndefined(meaAxisDigits[i]) ? 0 : meaAxisDigits[i]
          axisLabel.formatter = value => formatMeasure(type, value, num)
        } else {
          axisLabel.formatter = value => formatMeasure(type, value, meaAxisDigits)
        }
      }
      const axisLine = {
        show: Array.isArray(meaAxisLineShow) ? meaAxisLineShow[i] : meaAxisLineShow
      }

      const axisItem = {
        ...meaAxisBase,
        axisLabel,
        axisLine
      }
      if (yAxisName && yAxisName.length) {
        axisItem['name'] = yAxisName[i]
      }
      if (yAxisInterval && yAxisInterval.length) {
        if (yAxisInterval[i]) { // 容错处理，当第二个值为空时，不设置interval
          axisItem['interval'] = Number(yAxisInterval[i])
        }
      }
      // 当开启百分比模式时，轴最大和最小刻度设置无效
      if (percentage === false && yAxisMax && yAxisMax.length) {
        axisItem['max'] = yAxisMax[i]
      }
      if (percentage === false && yAxisMin && yAxisMin.length) {
        axisItem['min'] = yAxisMin[i]
      }
      meaAxis.push(axisItem)
    })
    return meaAxis
  }

  // build label
  static getBarLabel (setLabel, isBar) {
    const {
      position = isBar ? 'right' : 'top',
      formatType = 'currency',
      formatDigits = 0,
      ...others
    } = setLabel
    const formatter = params => {
      const { value, seriesIndex } = params
      // dataset formatter need shift the value
      value.shift()
      return formatMeasure(formatType, value[seriesIndex], formatDigits)
    }
    return {
      position,
      formatter,
      ...others
    }
  }

  // build series
  static getBarSeries (data, settings, isBar) {
    const { measures } = data
    const {
      label = {},
      showLine = [],
      stack = null,
      secondMeaAxis = [],
      itemStyle = {},
      waterfall,
      markLine = null,
      markArea = null,
      ...others
    } = settings

    const axisIndexName = isBar ? 'xAxisIndex' : 'yAxisIndex'
    const series = []
    const stackMap = stack && getStackMap(stack)

    // deviated from markLine/markArea of the series
    if (markLine || markArea) {
      series.push({ type: 'bar', name: '', data: [], markLine, markArea })
    }

    measures.forEach(({ name }) => {
      // label数据类型调整为对象或者数组，Object类型为全部数据维度添加配置，Array类型根据每项name名字去修改配置----by:Jeff
      let setLabel = {}
      if (label instanceof Array) {
        setLabel = label.filter(item => item.name === name)[0]
        if (setLabel === undefined) setLabel = {}
      } else {
        setLabel = label
      }
      // ------------end-----------
      const type = showLine.includes(name) ? 'line' : 'bar'
      const seriesItem = {
        type,
        name,
        label: chart_BarChart.getBarLabel(setLabel, isBar),
        stack: stack && stackMap[name],
        [axisIndexName]: secondMeaAxis.includes(name) ? '1' : '0',
        itemStyle: itemStyle[name] ? itemStyle[name] : {},
        ...others
      }
      // 当配置项填入waterfall,瀑布图默认将secondaryMeasure图设置透明--by:jeff
      if (waterfall && waterfall === true) {
        if (name === 'secondaryMeasure') {
          seriesItem['itemStyle'] = waterfallConfig[name]
        }
      }
      series.push(seriesItem)
    })
    return series
  }

  bar (data, settings, extra) {
    const { tooltipVisible, legendVisible, isEmptyData } = extra
    const {
      direction = 'column',
      secondMeaAxis = null,
      yAxisLabelType,
      yAxisLabelDigits = 0,
      yAxisName,
      yAxisLabelShow = [true, true],
      yAxisLineShow = [true, true],
      yAxisLabelColor = [null, null],
      xAxisLabelType,
      xAxisLabelDigits = 0,
      xAxisName,
      xAxisLabelShow = true,
      xAxisLineShow = true,
      xAxisLabelColor = null,
      xAxisLabelRotate = 0,
      yAxisLabelRotate = 0,
      xAxisPointerType,
      yAxisPointerType
    } = settings

    // 默认柱状图
    // TODO 此处注意值与命名语义相反，true代表是条形图，false是柱图
    const isBar = direction !== 'column' && direction === 'row'

    const defaultMeaAxisType = secondMeaAxis !== null ? ['normal', 'normal'] : ['normal']

    settings.meaAxisType = (isBar ? xAxisLabelType : yAxisLabelType) || defaultMeaAxisType
    settings.meaAxisDigits = isBar ? xAxisLabelDigits : yAxisLabelDigits
    settings.meaAxisName = (isBar ? xAxisName : yAxisName) || []
    settings.meaAxisLabelShow = (isBar ? xAxisLabelShow : yAxisLabelShow)
    settings.meaAxisLineShow = (isBar ? xAxisLineShow : yAxisLineShow)
    settings.meaAxisLabelColor = (isBar ? xAxisLabelColor : yAxisLabelColor)
    settings.meaAxisLabelRotate = isBar ? xAxisLabelRotate : yAxisLabelRotate
    settings.dimAxisType = (isBar ? yAxisLabelType : xAxisLabelType) || 'category'
    settings.dimAxisDigits = isBar ? yAxisLabelDigits : xAxisLabelDigits
    settings.dimAxisName = (isBar ? yAxisName : xAxisName) || ''
    settings.dimAxisLabelShow = (isBar ? yAxisLabelShow : xAxisLabelShow)
    settings.dimAxisLineShow = (isBar ? yAxisLineShow : xAxisLineShow)
    settings.dimAxisLabelColor = (isBar ? yAxisLabelColor : xAxisLabelColor)
    settings.dimAxisLabelRotate = isBar ? yAxisLabelRotate : xAxisLabelRotate
    settings.dimAxisPointerType = isBar ? yAxisPointerType : xAxisPointerType

    // 如果设置了双Y轴，将双Y轴统一设置 meaAxisType
    if (defaultMeaAxisType.length > settings.meaAxisType.length) {
      settings.meaAxisType = defaultMeaAxisType.fill(settings.meaAxisType[0])
    }

    extra.chartType = 'bar'
    const dataset = !isEmptyData && getDataset(data, settings, extra)

    const tooltip = tooltipVisible && chart_BarChart.getBarTooltip(settings)

    const legend = legendVisible && chart_BarChart.getBarLegend(data, settings)

    const grid = chart_BarChart.getBarGrid(isBar)

    const xAxis = isBar ? chart_BarChart.getBarMeaAxis(data, settings) : chart_BarChart.getBarDimAxis(settings)

    const yAxis = isBar ? chart_BarChart.getBarDimAxis(settings) : chart_BarChart.getBarMeaAxis(data, settings)

    const series = chart_BarChart.getBarSeries(data, settings, isBar)

    // 处理X轴和Y轴翻转
    const { yAxisInverse, xAxisInverse } = settings
    if (yAxisInverse !== undefined) yAxis.forEach((i, index) => { i.inverse = Array.isArray(yAxisInverse) ? yAxisInverse[index] : yAxisInverse })
    if (xAxisInverse !== undefined) xAxis.forEach(i => { i.inverse = xAxisInverse })

    // build echarts options
    const options = {
      grid,
      dataset,
      tooltip,
      legend,
      xAxis,
      yAxis,
      series
    }

    // console.log(options)

    return options
  }
}

/* harmony default export */ var bar_chart = (chart_BarChart);

// CONCATENATED MODULE: ./src/packages/bar/index.js





/* harmony default export */ var bar = ({
  name: 'VeBarChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new bar_chart().bar
  }
});

// CONCATENATED MODULE: ./src/packages/pie/chart.js



class chart_PieChart extends src_BaseChart {
  static getPieDataset (data, settings, extra) {
    const dataset = []

    extra.chartType = 'pie'
    if (!data.length || data.length === 1) {
      dataset.push(getDataset(data, settings, extra))
    } else if (data.length > 1) {
      for (let element of data) {
        dataset.push(getDataset(element, settings, extra))
      }
    }
    return dataset
  }

  static getPieTooltip (args) {
    return {
      trigger: 'item'
    }
  }

  static getPieLegend (args) {
    const { data, settings } = args
    let dimensions
    if (Array.isArray(data) && data.length > 0) {
      dimensions = data[0].dimensions
    } else {
      dimensions = data.dimensions
    }
    const {
      legendType = 'plain',
      legendPadding = 5,
      legendSelected = dimensions.data.length
    } = settings

    const getSelected = n => {
      let obj = {}
      // console.log(dimensions.data)
      const legendNames = dimensions.data.slice(n)

      for (let legend of legendNames) {
        obj[legend] = false
      }

      return obj
    }

    return {
      type: legendType,
      padding: legendPadding,
      selected: getSelected(legendSelected)
    }
  }

  static getPieSeries (args) {
    const { data, settings, isDonut } = args

    let series = []

    if (data.length === undefined) {
      series = this.handleData(data, settings, isDonut)
    } else if (data.length === 1) {
      series = this.handleData(data[0], settings, isDonut)
    } else if (data.length === 2) {
      for (let index in data) {
        series.push(this.handleData(data[index], settings[index], isDonut, index)[0])
      }
    }
    return series
  }

  static handleData (data, settings, isDonut, datasetIndex = 0) {
    const series = []
    const { measures } = data
    const {
      offsetY,
      radius = isDonut
        ? ['50%', '70%']
        : [0, '75%'],
      selectedMode = false,
      ...others
    } = settings

    measures.forEach(({ name, data }, idx) => {
      series.push({
        type: 'pie',
        name,
        selectedMode,
        center: offsetY ? ['50%', offsetY] : ['50%', '50%'],
        radius,
        datasetIndex,
        ...others
      })
    })
    // console.log(series)

    return series
  }

  static chartHandler (data, settings, extra, isDonut = false) {
    const { tooltipVisible, legendVisible } = extra

    const dataset = chart_PieChart.getPieDataset(data, settings, extra)

    const tooltip = tooltipVisible && chart_PieChart.getPieTooltip()

    const legend = legendVisible && chart_PieChart.getPieLegend({ data, settings })

    const series = chart_PieChart.getPieSeries({
      data,
      settings,
      isDonut
    })

    // build echarts options
    const options = {
      dataset,
      tooltip,
      legend,
      series
    }

    // console.log(options)
    // console.log(JSON.stringify(options))
    return options
  }

  pie (data, settings, extra) {
    return chart_PieChart.chartHandler(data, settings, extra, false)
  }

  donut (data, settings, extra) {
    return chart_PieChart.chartHandler(data, settings, extra, true)
  }
}

/* harmony default export */ var pie_chart = (chart_PieChart);

// CONCATENATED MODULE: ./src/packages/donut/index.js





/* harmony default export */ var donut = ({
  name: 'VeDonutChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new pie_chart().donut
  }
});

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseExtremum.js


/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !lodash_es_isSymbol(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

/* harmony default export */ var _baseExtremum = (baseExtremum);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseLt.js
/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */
function baseLt(value, other) {
  return value < other;
}

/* harmony default export */ var _baseLt = (baseLt);

// CONCATENATED MODULE: ./node_modules/lodash-es/min.js




/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */
function min_min(array) {
  return (array && array.length)
    ? _baseExtremum(array, lodash_es_identity, _baseLt)
    : undefined;
}

/* harmony default export */ var lodash_es_min = (min_min);

// CONCATENATED MODULE: ./node_modules/lodash-es/_baseGt.js
/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

/* harmony default export */ var _baseGt = (baseGt);

// CONCATENATED MODULE: ./node_modules/lodash-es/max.js




/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max_max(array) {
  return (array && array.length)
    ? _baseExtremum(array, lodash_es_identity, _baseGt)
    : undefined;
}

/* harmony default export */ var lodash_es_max = (max_max);

// CONCATENATED MODULE: ./src/packages/funnel/chart.js






class chart_FunnelChart extends src_BaseChart {
  static getFunnelTooltip (args) {
    return {
      trigger: 'item'
    }
  }

  static getFunnelLegend (args) {
    const { settings } = args
    const {
      legendType = 'plain',
      legendPadding = 5
    } = settings
    return {
      type: legendType,
      padding: legendPadding
    }
  }

  static getFunnelSeries (args) {
    const { data, settings } = args
    const { dimensions, measures } = data
    const dimName = dimensions && `${dimensions.name}`
    const {
      funnelSort = 'desc',
      funnelAlign = 'center',
      contrast = false,
      symmetric = false,
      labelPosition = 'outside',
      funnelLabel,
      ...others
    } = settings

    const getMaxSize = (measures) => {
      if (measures.length > 2) {
        external_vue_default.a.util.warn(`data.measures.length is more then 2 in [Contrastive funnel chart]. Please use 2 measures`, this)
        return
      }
      let maxSize = ''
      if (measures.length > 1) {
        const quotient = measures.reduce((prev, next) => {
          return lodash_es_round(lodash_es_min([lodash_es_max(prev.data), lodash_es_max(next.data)]) / lodash_es_max([lodash_es_max(prev.data), lodash_es_max(next.data)]), 2)
        })
        maxSize = `${quotient * 100}%`
      }
      return maxSize
    }

    const getX = (symmetric, idx) => {
      return symmetric ? idx === 0 ? '10%' : '50%' : '10%'
    }

    const getAlign = (symmetric, idx) => {
      return symmetric
        ? idx === 0 ? 'right' : 'left'
        : funnelAlign
    }

    const getLabel = (settings, idx) => {
      const {
        contrast,
        symmetric,
        funnelLabel
      } = settings
      if (funnelLabel) {
        // label is array
        if (Array.isArray(funnelLabel)) {
          return funnelLabel[idx]
        } else {
          return funnelLabel
        }
      }
      let label = {
        position: labelPosition
      }

      if (contrast) {
        const contrastLabel = {
          position: 'inside',
          formatter: params => {
            const maxValue = measures.reduce((prev, next) => {
              return lodash_es_max([lodash_es_max(prev.data), lodash_es_max(next.data)])
            })
            const [, , mea2] = params.value
            return `${Math.round((mea2 / maxValue * 100), 2)}%`
          },
          emphasis: {
            position: 'inside',
            formatter: params => {
              const maxValue = measures.reduce((prev, next) => {
                return lodash_es_max([lodash_es_max(prev.data), lodash_es_max(next.data)])
              })
              const [dimName, , mea2] = params.value
              return `${dimName} ${Math.round((mea2 / maxValue * 100), 2)}%`
            }
          }
        }

        label = idx === 0 ? label : contrastLabel
      }

      if (symmetric) {
        const rightLabel = {
          position: labelPosition !== 'outside' ? labelPosition : 'left'
        }

        const leftLabel = {
          position: labelPosition !== 'outside' ? labelPosition : 'right'
        }
        label = idx === 0 ? rightLabel : leftLabel
      }

      return label
    }

    const getEncode = (dimName, meaName) => {
      return {
        itemName: dimName,
        value: meaName
      }
    }

    const series = []
    measures.forEach(({ name, data }, idx) => {
      series.push({
        type: 'funnel',
        name,
        sort: funnelSort === 'desc' ? 'descending' : 'ascending',
        funnelAlign: getAlign(symmetric, idx),
        width: symmetric ? '40%' : '80%',
        x: getX(symmetric, idx),
        maxSize: !contrast || idx === 0 ? '100%' : getMaxSize(measures),
        label: getLabel({ contrast, symmetric, funnelLabel }, idx),
        encode: getEncode(dimName, name),
        ...others
      })
    })
    return series
  }

  funnel (data, settings, extra) {
    const { tooltipVisible, legendVisible } = extra

    extra.chartType = 'funnel'
    const dataset = getDataset(data, settings, extra)

    const tooltip = tooltipVisible && chart_FunnelChart.getFunnelTooltip()

    const legend = legendVisible && chart_FunnelChart.getFunnelLegend({ settings })

    const series = chart_FunnelChart.getFunnelSeries({ data, settings })

    // build echarts options
    const options = {
      dataset,
      tooltip,
      legend,
      series
    }

    // console.log(JSON.stringify(options))

    return options
  }
}

/* harmony default export */ var funnel_chart = (chart_FunnelChart);

// CONCATENATED MODULE: ./src/packages/funnel/index.js





/* harmony default export */ var funnel = ({
  name: 'VeFunnelChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new funnel_chart().funnel
  }
});

// CONCATENATED MODULE: ./src/packages/gauge/chart.js


class chart_GaugeChart extends src_BaseChart {
  static getGaugeTooltip () {
    return {
      trigger: 'item'
    }
  }

  static getGaugeSeries (args) {
    const { data, settings } = args
    const { name, data: gaugeData } = data && data.measures && data.measures[0]
    const {
      min = 0,
      max = 100,
      offsetY,
      radius = '75%',
      ...others
    } = settings

    return [{
      name,
      type: 'gauge',
      min,
      max,
      center: offsetY ? ['50%', offsetY] : ['50%', '50%'],
      radius,
      data: gaugeData,
      ...others
    }]
  }

  gauge (data, settings, extra) {
    const { tooltipVisible } = extra

    const tooltip = tooltipVisible && chart_GaugeChart.getGaugeTooltip()

    const series = chart_GaugeChart.getGaugeSeries({
      data,
      settings
    })

    // build echarts options
    const options = {
      tooltip,
      series
    }
    console.log(JSON.stringify(options))
    return options
  }
}

/* harmony default export */ var gauge_chart = (chart_GaugeChart);

// CONCATENATED MODULE: ./src/packages/gauge/index.js





/* harmony default export */ var gauge = ({
  name: 'VeGaugeChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new gauge_chart().gauge
  }
});

// CONCATENATED MODULE: ./node_modules/lodash-es/ceil.js


/**
 * Computes `number` rounded up to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round up.
 * @param {number} [precision=0] The precision to round up to.
 * @returns {number} Returns the rounded up number.
 * @example
 *
 * _.ceil(4.006);
 * // => 5
 *
 * _.ceil(6.004, 2);
 * // => 6.01
 *
 * _.ceil(6040, -2);
 * // => 6100
 */
var ceil = _createRound('ceil');

/* harmony default export */ var lodash_es_ceil = (ceil);

// CONCATENATED MODULE: ./node_modules/lodash-es/floor.js


/**
 * Computes `number` rounded down to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round down.
 * @param {number} [precision=0] The precision to round down to.
 * @returns {number} Returns the rounded down number.
 * @example
 *
 * _.floor(4.006);
 * // => 4
 *
 * _.floor(0.046, 2);
 * // => 0.04
 *
 * _.floor(4060, -2);
 * // => 4000
 */
var floor = _createRound('floor');

/* harmony default export */ var lodash_es_floor = (floor);

// EXTERNAL MODULE: ./src/packages/geo/map-data/cityGeo.json
var cityGeo = __webpack_require__("0e45");

// EXTERNAL MODULE: ./src/packages/geo/map-data/cityGeo2.json
var cityGeo2 = __webpack_require__("274d");

// EXTERNAL MODULE: ./src/packages/geo/map-data/mapCityId.json
var mapCityId = __webpack_require__("2814");

// CONCATENATED MODULE: ./src/packages/geo/chart.js











class chart_GeoChart extends src_BaseChart {
  static convertCityName (name) {
    return isNaN(name * 1) ? name : mapCityId[name]
  }

  static convertCoord (name) {
    return cityGeo[name] || cityGeo2[name]
  }

  static convertCityData (data, options) {
    const { index, connect } = options
    const dataIndex = connect ? connect.dataIndex : -1
    const seriesIndex = connect ? connect.seriesIndex : -1
    const symbolSize = connect ? connect.symbolSize : 10
    const normalShadowBlur = connect ? connect.normalShadowBlur : 0

    const res = []
    for (let i = 0; i < data.length; i++) {
      const name = chart_GeoChart.convertCityName(data[i].name)
      const value = data[i].value
      const geoCoord = chart_GeoChart.convertCoord(name)

      if (geoCoord) {
        res.push({
          name: name,
          value: geoCoord.concat(value),
          pattern: data[i].name
        })
      }
    }

    if (seriesIndex === index) {
      res[dataIndex] = {
        ...res[dataIndex],
        symbolSize,
        itemStyle: {
          shadowBlur: normalShadowBlur
        }
      }
    }
    return res
  }

  static convertLinesData (name, data) {
    const res = []
    name = chart_GeoChart.convertCityName(name)
    const fromCoord = chart_GeoChart.convertCoord(name)
    if (!fromCoord) return []
    for (let i = 0, len = data.length; i < len; i++) {
      const dataItem = data[i]
      const dataItemName = chart_GeoChart.convertCityName(dataItem.name)
      const toCoord = chart_GeoChart.convertCoord(dataItemName)
      if (toCoord) {
        res.push({
          fromName: name,
          toName: dataItemName,
          coords: [fromCoord, toCoord],
          value: dataItem.value
        })
      }
    }
    return res
  }

  static convertEffectScatterData (data) {
    const res = []
    for (let i = 0, len = data.length; i < len; i++) {
      const dataItem = data[i]
      const dataItemName = chart_GeoChart.convertCityName(dataItem.name)
      const geoCoord = chart_GeoChart.convertCoord(dataItemName)
      if (geoCoord) {
        res.push({
          name: dataItemName,
          value: geoCoord.concat([dataItem.value])
        })
      }
    }
    return res
  }

  static getGeoData (args) {
    const { data, settings } = args
    const { measures } = data
    const {
      mode = 'map',
      mapName = 'china',
      labelVisible,
      isMapMode,
      isLinesMode,
      itemStyle,
      visualMap,
      label,
      symbolSize = 10,
      roam = false,
      zoom = 1,
      lineEffectVisible = false,
      lineEffect = {},
      overlayEffectVisible = true,
      overlayEffect = {},
      effectScatterLabelVisible = false,
      effectScatterLabel = {},
      lineStyle = {},
      connect,
      symbolColor
    } = settings

    const [legendData, seriesData] = [[], []]
    let max = 0
    let min = 0
    let allValues = []

    // computed max value
    let minMaxArr = measures.map(({ name, data }) => {
      const dataValues = data.map(v => parseInt(v.value))
      allValues = [...allValues, ...dataValues]
      return [Math.min(...dataValues), Math.max(...dataValues)]
    })

    if (isLinesMode) {
      min = Math.min(...allValues)
      max = Math.max(...allValues)
    } else {
      min = minMaxArr.reduce((a, b) => a + b[0], 0)
      max = minMaxArr.reduce((a, b) => a + b[1], 0)
    }

    measures && measures.forEach(({ name, data }, index) => {
      const mapData = isMapMode ? data : isLinesMode ? chart_GeoChart.convertLinesData(name, data) : chart_GeoChart.convertCityData(data, { index, connect })

      const unShowLabel = { show: false, emphasis: { show: false } }
      if (isLinesMode) {
        name = chart_GeoChart.convertCityName(name)
        seriesData.push(
          // lines trailLength settings
          {
            name: name,
            type: 'lines',
            zlevel: 1,
            effect: {
              show: lineEffectVisible,
              period: 5,
              trailLength: 0,
              color: '#fff',
              symbolSize: 3,
              ...lineEffect
            },
            lineStyle: {
              width: 0,
              curveness: (lineStyle && lineStyle.curveness) || 0.2
            },
            data: mapData
          },
          // overlay and lines settings
          {
            name: name,
            type: 'lines',
            zlevel: 2,
            effect: {
              show: overlayEffectVisible,
              period: 5,
              trailLength: 0.4,
              symbol: 'arrow',
              symbolSize: 6,
              ...overlayEffect
            },
            lineStyle: {
              color: '#ED3574',
              width: 1,
              opacity: 0.6,
              curveness: 0.2,
              ...lineStyle
            },
            data: mapData
          },
          // target nodes settings
          {
            name: name,
            type: 'effectScatter',
            coordinateSystem: 'geo',
            zlevel: 2,
            showEffectOn: 'render',
            rippleEffect: {
              brushType: 'stroke'
            },
            label: effectScatterLabelVisible ? {
              show: true,
              formatter: '{b}',
              ...effectScatterLabel.normal,
              emphasis: {
                ...effectScatterLabel.emphasis
              }
            } : unShowLabel,
            symbolSize: symbolSize,
            itemStyle: symbolColor ? {
              color: symbolColor
            } : {},
            data: chart_GeoChart.convertEffectScatterData(data)
          },
          // source nodes settings
          {
            name: name,
            type: 'effectScatter',
            coordinateSystem: 'geo',
            zlevel: 3,
            showEffectOn: 'render',
            rippleEffect: {
              brushType: 'stroke'
            },
            label: effectScatterLabelVisible ? {
              show: true,
              formatter: '{b}',
              ...effectScatterLabel.normal,
              emphasis: {
                ...effectScatterLabel.emphasis
              }
            } : unShowLabel,
            symbolSize: symbolSize,
            itemStyle: symbolColor ? {
              color: symbolColor
            } : {},
            data: [{
              name: name,
              value: chart_GeoChart.convertCoord(name)
            }]
          }
        )
      } else {
        seriesData[index] = {
          name,
          type: mode,
          roam,
          visualMap,
          label: labelVisible ? label : unShowLabel,
          selectedMode: 'single',
          mapType: mapName,
          data: mapData,
          zoom
        }

        if (itemStyle) {
          seriesData[index].itemStyle = itemStyle
        }

        if (!isMapMode) {
          seriesData[index] = {
            ...seriesData[index],
            ...{
              coordinateSystem: 'geo',
              label: unShowLabel,
              symbolSize,
              showEffectOn: 'render',
              rippleEffect: {
                brushType: 'stroke'
              },
              itemStyle: symbolColor ? {
                color: symbolColor
              } : {}
            }
          }
        }
      }

      legendData.push(name)
    })

    return {
      legendData,
      seriesData,
      max: lodash_es_ceil(max, -2),
      min: lodash_es_floor(min, -2)
    }
  }

  static getGeoTooltip (isMapMode, isLinesMode) {
    const formatter = function (params) {
      const { seriesName, name, value, marker, seriesType, data } = params
      const seriesValue = Array.isArray(value) ? value[2] : value

      if (isLinesMode) {
        const { fromName, toName, name } = data
        if (seriesType === 'effectScatter') {
          return `${name}`
        } else if (seriesType === 'lines') {
          return `${fromName} -> ${toName}<br>${seriesValue}`
        } else {
          return `${toName}`
        }
      }
      return `${seriesName}<br>${marker}${name}: ${seriesValue}`
    }

    return isMapMode
      ? { trigger: 'item' }
      : { trigger: 'item', formatter }
  }

  static getGeoLegend (args) {
    const { legendData, settings } = args
    const { legendType = 'plain', legendPadding = 5 } = settings

    return {
      type: legendType,
      padding: legendPadding,
      data: legendData
    }
  }

  static getGeo (args) {
    const {
      labelVisible = false,
      label,
      itemStyle,
      silent = false,
      zoom = 1,
      roam = false,
      mapName = 'china'
    } = args.settings
    const unShowLabel = { show: false, emphasis: { show: false } }
    const geo = {
      map: mapName,
      silent,
      roam,
      selectedMode: 'single',
      label: labelVisible ? label : unShowLabel,
      zoom
    }
    if (itemStyle) {
      geo.itemStyle = itemStyle
    }
    return geo
  }

  static getVisualMap (args) {
    const { min = 0, max = 200, settings } = args
    const { visualMap } = settings

    return {
      min: min,
      max,
      left: 'left',
      top: 'bottom',
      show: true,
      calculable: true,
      ...visualMap
    }
  }

  static async registerMap (args) {
    const {
      mapName = 'china',
      specialAreas,
      mapUrlPrefix = MAP_URL_PREFIX,
      _once
    } = args

    let mapJson = {}
    // load geojson once
    if (!_once[mapName]) {
      mapJson = await getMapJSON({ mapName, mapUrlPrefix })
      Object.assign(_once, { [mapName]: true })
      external_echarts_default.a.registerMap(mapName, mapJson, specialAreas)
    }

    return mapJson
  }

  async geo (data, settings, extra) {
    const { tooltipVisible, legendVisible, _once } = extra

    const {
      mode = 'map',
      visualMapVisible = false
    } = settings

    const isMapMode = mode === 'map'
    const isLinesMode = mode === 'lines'
    settings.isMapMode = isMapMode
    settings.isLinesMode = isLinesMode

    const { legendData, seriesData, min, max } = chart_GeoChart.getGeoData({ data, settings })

    const tooltip = tooltipVisible && chart_GeoChart.getGeoTooltip(isMapMode, isLinesMode)

    const legend = legendVisible && chart_GeoChart.getGeoLegend({ legendData, settings })

    const geo = !isMapMode && chart_GeoChart.getGeo({ data, settings })

    const geoVisualMap = visualMapVisible && chart_GeoChart.getVisualMap({ min, max, settings })

    // build echarts options
    const options = {
      tooltip,
      legend,
      visualMap: geoVisualMap,
      geo,
      series: seriesData
    }

    const mapOptions = {
      mapName: settings.mapName,
      specialAreas: settings.specialAreas,
      mapUrlPrefix: settings.mapUrlPrefix,
      _once
    }

    // console.log(JSON.stringify(options))
    await chart_GeoChart.registerMap(mapOptions)

    return options
  }
}

/* harmony default export */ var geo_chart = (chart_GeoChart);

// CONCATENATED MODULE: ./src/packages/geo/index.js










/* harmony default export */ var geo = ({
  name: 'VeGeoChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new geo_chart().geo
  }
});

// CONCATENATED MODULE: ./src/packages/line/chart.js



class chart_LineChart extends src_BaseChart {
  static getLineTooltip (settings) {
    const { tooltipOptions } = settings
    return {
      trigger: 'axis',
      ...tooltipOptions
    }
  }

  static getLineLegend (settings) {
    const {
      legendType = 'plain',
      legendPadding = 5,
      legendOptions
    } = settings

    return {
      type: legendType,
      padding: legendPadding,
      ...legendOptions
    }
  }

  static getLineDimAxis ({ settings }) {
    const { yAxisType, xAxisLabelShow = true, xAxisLineShow = true, xAxisLabelColor, xAxisInverse = false, xAxisName, xAxisSplitLine } = settings
    const type = yAxisType || 'category'
    return {
      type,
      boundaryGap: false,
      axisLine: {
        show: xAxisLineShow
      },
      axisTick: {
        show: false
      },
      axisLabel: {
        show: xAxisLabelShow,
        margin: 10,
        fontWeight: 400,
        color: xAxisLabelColor || null
      },
      inverse: xAxisInverse,
      name: xAxisName !== undefined ? xAxisName : null,
      splitLine: xAxisSplitLine !== undefined ? xAxisSplitLine : null
    }
  }

  static getLineMeaAxis (args) {
    const { settings } = args
    const {
      yAxisScale,
      yAxisLabelType,
      yAxisLabelDigits,
      yAxisName,
      yAxisInterval,
      yAxisMax,
      yAxisMin,
      yAxisInverse,
      percentage = false,
      yAxisLabelShow = true,
      yAxisLineShow = true,
      yAxisLabelColor
    } = settings

    let axisValue = {
      type: 'value',
      scale: yAxisScale,
      axisLine: {
        show: yAxisLineShow
      },
      axisTick: {
        show: false
      },
      axisLabel: {
        show: yAxisLabelShow,
        margin: 10,
        fontWeight: 400,
        color: yAxisLabelColor || null,
        formatter: value => formatMeasure(yAxisLabelType, value, yAxisLabelDigits)
      },
      min: percentage ? 0 : null,
      max: percentage ? 1 : null
    }
    if (yAxisName) axisValue['name'] = yAxisName
    if (yAxisInterval) axisValue['interval'] = Number(yAxisInterval)
    if (yAxisMax) axisValue['max'] = yAxisMax
    if (yAxisMin) axisValue['min'] = yAxisMin
    if (yAxisInverse !== undefined) axisValue['inverse'] = yAxisInverse

    return axisValue
  }

  static getLineLabel (args) {
    const {
      position = 'top',
      formatType = 'currency',
      formatDigits = 0,
      ...others
    } = args
    const formatter = params => {
      const { value, seriesIndex } = params
      // dataset formatter need shift the value
      value.shift()
      return formatMeasure(formatType, value[seriesIndex], formatDigits)
    }
    return {
      position,
      formatter,
      ...others
    }
  }

  static getLineSeries (args) {
    const { data, settings } = args
    const { measures } = data
    const {
      label = {},
      showSymbol = true,
      smooth = false,
      stack = null,
      step = null,
      symbol = 'emptyCircle',
      symbolSize = 4,
      itemStyle = {},
      markLine = null,
      markArea = null,
      ...others
    } = settings
    const series = []
    const stackMap = stack && getStackMap(stack)

    // deviated from markLine/markArea of the series
    if (markLine || markArea) {
      series.push({ type: 'line', markLine, markArea })
    }

    measures.forEach(({ name, data }, i) => {
      series.push({
        type: 'line',
        name,
        label: this.getLineLabel(label),
        showSymbol,
        smooth,
        stack: stack && stackMap[name],
        step,
        symbol,
        symbolSize,
        itemStyle: itemStyle[name] ? itemStyle[name] : {},
        ...others
      })
    })

    return series
  }

  line (data, settings, extra) {
    const { tooltipVisible, legendVisible, isEmptyData } = extra

    extra.chartType = 'line'
    const dataset = !isEmptyData && getDataset(data, settings, extra)

    const tooltip = tooltipVisible && chart_LineChart.getLineTooltip(settings)

    const legend = legendVisible && chart_LineChart.getLineLegend(settings)

    const xAxis = chart_LineChart.getLineDimAxis({ settings })

    const yAxis = chart_LineChart.getLineMeaAxis({ settings })

    const series = !isEmptyData && chart_LineChart.getLineSeries({ data, settings })

    // build echarts options
    const options = {
      dataset,
      tooltip,
      legend,
      xAxis,
      yAxis,
      series
    }

    // console.log(JSON.stringify(options))

    return options
  }
}

/* harmony default export */ var line_chart = (chart_LineChart);

// CONCATENATED MODULE: ./src/packages/line/index.js





/* harmony default export */ var line = ({
  name: 'VeLineChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new line_chart().line
  }
});

// CONCATENATED MODULE: ./src/packages/pie/index.js





/* harmony default export */ var pie = ({
  name: 'VePieChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new pie_chart().pie
  }
});

// CONCATENATED MODULE: ./src/packages/radar/chart.js



class chart_RadarChart extends src_BaseChart {
  static getRadarTooltip () {
    return {
      trigger: 'item'
    }
  }

  static getRadarLegend (args) {
    const { data, settings } = args
    const { legendType = 'plain', legendPadding = 5 } = settings
    const { measures } = data
    return {
      type: legendType,
      padding: legendPadding,
      data: measures.map(v => v.name)
    }
  }

  static getRadarRadar (args) {
    const { data, settings } = args
    const { offsetY = '50%', radius = '75%', splitNumber = 5, shape = 'polygon', splitArea = {}, name = {} } = settings

    return {
      name: {
        padding: [3, 5],
        ...name
      },
      center: ['50%', offsetY],
      radius,
      splitNumber,
      shape,
      splitArea,
      indicator: data.dimensions
    }
  }

  static getRadarLabel (args) {
    const {
      formatType = 'currency',
      formatDigits = 0,
      ...others
    } = args
    const formatter = params => {
      const { value } = params
      // dataset formatter need shift the value
      return formatMeasure(formatType, value, formatDigits)
    }
    return {
      formatter,
      ...others
    }
  }

  static getRadarSeries ({ data, settings }) {
    const { measures } = data
    const { label, itemStyle } = settings
    const series = []

    measures.forEach((data, idx) => {
      series.push({
        type: 'radar',
        data: [{
          name: data.name,
          value: data.data
        }],
        label: label && chart_RadarChart.getRadarLabel(label),
        itemStyle: Object.assign({}, itemStyle)
      })
    })
    return series
  }

  static getRadiusPolar ({ data, settings, tickMarkVisible }) {
    if (!tickMarkVisible) {
      return {
        polar: null,
        radiusAxis: null,
        angleAxis: null
      }
    }

    const { splitNumber = 5, offsetY = '50%', radius = '75%', axisLabel = {}, axisLine = {} } = settings
    const max = data.dimensions[0].max
    const min = 0
    const interval = (max - min) / splitNumber

    return {
      polar: {
        radius,
        center: ['50%', offsetY]
      },
      radiusAxis: {
        min,
        max,
        interval: Math.round(interval * 100) / 100,
        splitLine: {
          show: false
        },
        axisLabel,
        axisLine
      },
      angleAxis: {
        axisTick: {
          show: false
        },
        axisLabel: {
          show: false
        },
        axisLine: {
          show: false
        },
        splitLine: {
          show: false
        }
      }
    }
  }

  radar (data, settings, extra) {
    const { tooltipVisible, legendVisible, isEmptyData, tickMarkVisible } = extra

    if (isEmptyData) return {}

    const tooltip = tooltipVisible && chart_RadarChart.getRadarTooltip()

    const legend = legendVisible && chart_RadarChart.getRadarLegend({ data, settings })

    const radar = chart_RadarChart.getRadarRadar({ data, settings })

    const series = chart_RadarChart.getRadarSeries({ data, settings })

    const polarOptions = chart_RadarChart.getRadiusPolar({ data, settings, tickMarkVisible })

    // build echarts options
    const options = {
      tooltip,
      legend,
      radar,
      series,
      ...polarOptions
    }

    return options
  }
}

/* harmony default export */ var radar_chart = (chart_RadarChart);

// CONCATENATED MODULE: ./src/packages/radar/index.js





/* harmony default export */ var radar = ({
  name: 'VeRadarChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new radar_chart().radar
  }
});

// CONCATENATED MODULE: ./src/packages/scatter/chart.js




class chart_ScatterChart extends src_BaseChart {
  static getScatterDataset (data, settings, extra) {
    const dataset = []
    const { measures } = data

    if (lodash_es_isArray(measures)) {
      measures.forEach(v => {
        dataset.push({
          'source': v.data
        })
      })
    } else {
      return
    }

    return dataset
  }

  static getScatterTooltip (args) {
    return {}
  }

  static getScatterLegend (args) {
    const { settings } = args
    const {
      legendType = 'plain',
      legendPadding = 5
    } = settings

    return {
      type: legendType,
      padding: legendPadding
    }
  }

  static getScatterSeries (args) {
    const { data, settings } = args
    const { connect, ...others } = settings
    // const dataIndex = connect ? connect.dataIndex : -1
    const series = []

    data.measures.forEach(({ name }, i) => {
      series[i] = {
        type: 'scatter',
        name,
        datasetIndex: i,
        ...others
      }
    })

    return series
  }

  static getScatterXAxis (args) {
    const { settings } = args
    const { xAxisScale = false, xAxisName, xAxisNameGap, xAxisNameLocation } = settings
    let axisValue = {
      scale: xAxisScale,
      nameGap: 5,
      splitLine: {
        lineStyle: {
          type: 'dashed'
        }
      }
    }
    // x轴名称
    if (xAxisName) axisValue['name'] = xAxisName
    // 坐标轴名称与轴线之间的距离
    if (xAxisNameGap) axisValue['nameGap'] = xAxisNameGap
    // 坐标轴名称显示位置
    if (xAxisNameLocation) axisValue['nameLocation'] = xAxisNameLocation
    return axisValue
  }

  static getScatterYAxis (args) {
    const { settings } = args
    const { yAxisScale = false, yAxisName } = settings
    let axisValue = {
      scale: yAxisScale,
      splitLine: {
        lineStyle: {
          type: 'dashed'
        }
      }
    }
    if (yAxisName) axisValue['name'] = yAxisName
    return axisValue
  }

  scatter (data, settings, extra) {
    const { tooltipVisible, legendVisible } = extra

    const dataset = chart_ScatterChart.getScatterDataset(data, settings, extra)

    const tooltip = tooltipVisible && chart_ScatterChart.getScatterTooltip({ data })

    const legend = legendVisible && chart_ScatterChart.getScatterLegend({ settings })

    const series = chart_ScatterChart.getScatterSeries({ data, settings })

    const xAxis = chart_ScatterChart.getScatterXAxis({ settings })

    const yAxis = chart_ScatterChart.getScatterYAxis({ settings })

    // build echarts options
    const options = {
      dataset,
      tooltip,
      legend,
      series,
      xAxis,
      yAxis
    }

    console.log(options)

    return options
  }
}

/* harmony default export */ var scatter_chart = (chart_ScatterChart);

// CONCATENATED MODULE: ./src/packages/scatter/index.js





/* harmony default export */ var scatter = ({
  name: 'VeScatterChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new scatter_chart().scatter
  }
});

// CONCATENATED MODULE: ./src/packages/treemap/chart.js



class chart_TreemapChart extends src_BaseChart {
  static getTreemapTooltip (args) {
    return {
      formatter: '{b}:<br />{c}'
    }
  }

  static getTreemapSeries (args) {
    const { data, settings } = args
    const { measures } = data
    const {
      name = '根级',
      levels = treemapLevels,
      ...others
    } = settings
    const series = []

    series.push({
      type: 'treemap',
      name,
      levels,
      data: measures,
      ...others
    })

    return series
  }

  treemap (data, settings, extra) {
    const { tooltipVisible } = extra

    const tooltip = tooltipVisible && chart_TreemapChart.getTreemapTooltip()

    const series = chart_TreemapChart.getTreemapSeries({ data, settings })

    // build echarts options
    const options = {
      tooltip,
      series
    }
    return options
  }
}

/* harmony default export */ var treemap_chart = (chart_TreemapChart);

// CONCATENATED MODULE: ./src/packages/treemap/index.js





/* harmony default export */ var treemap = ({
  name: 'VeTreemapChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new treemap_chart().treemap
  }
});

// CONCATENATED MODULE: ./src/packages/sunburst/chart.js


class chart_SunburstChart extends src_BaseChart {
  // build tooltip
  static getBarTooltip (args) {
    const { settings } = args
    const { tooltip } = settings
    return {
      ...tooltip
    }
  }

  // build series
  static getSunburstSeries (args) {
    const { data, settings } = args
    const { measures } = data
    const {
      label = {},
      itemStyle = {},
      ...others
    } = settings

    const series = []

    measures.forEach(({ name, data }, i) => {
      const type = 'sunburst'
      const seriesItem = {
        type,
        name,
        data,
        label,
        itemStyle,
        ...others
      }
      series.push(seriesItem)
    })
    return series
  }

  sunburst (data, settings, extra) {
    const tooltip = chart_SunburstChart.getBarTooltip({
      settings
    })

    const series = chart_SunburstChart.getSunburstSeries({
      data,
      settings
    })

    const options = {
      series
    }
    if (Object.keys(tooltip).length !== 0) options['tooltip'] = tooltip

    console.log(options)

    return options
  }
}

/* harmony default export */ var sunburst_chart = (chart_SunburstChart);

// CONCATENATED MODULE: ./src/packages/sunburst/index.js





/* harmony default export */ var sunburst = ({
  name: 'VeSunburstChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new sunburst_chart().sunburst
  }
});

// CONCATENATED MODULE: ./src/packages/tree/chart.js


class chart_TreeChart extends src_BaseChart {
  static getTreeTooltip () {
    return {
      trigger: 'item',
      triggerOn: 'mousemove'
    }
  }

  static getTreeLegend (data, settings) {
    const { legendType = 'plain', legendPadding = 5 } = settings
    const { measures } = data
    return {
      type: legendType,
      padding: legendPadding,
      data: measures.map(v => v.name)
    }
  }

  static formatTreeLabels (orient = 'LR', rotate = 0) {
    let [labelPosition, labelAlign, leavesPosition, leavesAlign] = ['', '', '', '']
    switch (orient) {
      case 'LR':
        labelPosition = 'left'
        labelAlign = 'right'
        leavesPosition = 'right'
        leavesAlign = 'left'
        break
      case 'RL':
        labelPosition = 'right'
        labelAlign = 'left'
        leavesPosition = 'left'
        leavesAlign = 'right'
        break
      case 'TB':
        labelPosition = 'top'
        labelAlign = rotate > 0 ? 'right' : 'middle'
        leavesPosition = 'bottom'
        leavesAlign = rotate > 0 ? 'left' : 'middle'
        break
      case 'BT':
        labelPosition = 'bottom'
        labelAlign = rotate > 0 ? 'right' : 'middle'
        leavesPosition = 'top'
        leavesAlign = rotate > 0 ? 'left' : 'middle'
        break
      default:
    }
    return {
      label: {
        position: labelPosition,
        verticalAlign: 'middle',
        align: labelAlign,
        rotate
      },
      leaves: {
        label: {
          position: leavesPosition,
          verticalAlign: 'middle',
          align: leavesAlign,
          rotate
        }
      }
    }
  }

  static getTreeSeries (data, settings) {
    const {
      seriesMap = [],
      labelRotate
    } = settings

    const series = data.measures.map((item, idx) => {
      const layout = seriesMap && seriesMap[idx] && seriesMap[idx].layout
      const orient = seriesMap && seriesMap[idx] && seriesMap[idx].orient
      const labelVSLeaves = layout === 'radial' ? {} : chart_TreeChart.formatTreeLabels(orient, labelRotate)
      const treeItem = {
        type: 'tree',
        name: item.name,
        data: [item.value],
        ...labelVSLeaves,
        ...seriesMap[idx]
      }
      return treeItem
    })
    return series
  }

  tree (data, settings, extra) {
    const { tooltipVisible, legendVisible } = extra

    const tooltip = tooltipVisible && chart_TreeChart.getTreeTooltip()

    const legend = legendVisible && chart_TreeChart.getTreeLegend(data, settings)

    const series = chart_TreeChart.getTreeSeries(data, settings)

    // build echarts options
    const options = {
      tooltip,
      legend,
      series
    }

    // console.log(JSON.stringify(options))
    return options
  }
}

/* harmony default export */ var tree_chart = (chart_TreeChart);

// CONCATENATED MODULE: ./src/packages/tree/index.js





/* harmony default export */ var tree = ({
  name: 'VeTreeChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new tree_chart().tree
  }
});

// CONCATENATED MODULE: ./src/packages/wordcloud/chart.js


class chart_WordcloudChart extends src_BaseChart {
  // build series
  static getWordcloudSeries (args) {
    const { data, settings } = args
    const { measures } = data
    const type = 'wordCloud'
    const series = []
    const seriesItem = {
      type,
      data: measures,
      ...settings
    }
    series.push(seriesItem)
    return series
  }

  wordcloud (data, settings, extra) {
    const { tooltip } = settings
    const series = chart_WordcloudChart.getWordcloudSeries({
      data,
      settings
    })
    const options = {
      tooltip,
      series
    }
    return options
  }
}

/* harmony default export */ var wordcloud_chart = (chart_WordcloudChart);

// CONCATENATED MODULE: ./src/packages/wordcloud/index.js





/* harmony default export */ var wordcloud = ({
  name: 'VeWordcloudChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new wordcloud_chart().wordcloud
  }
});

// CONCATENATED MODULE: ./src/packages/liquidfill/chart.js


class chart_LiquidfillChart extends src_BaseChart {
  // build series
  static getSeries (args) {
    const { measures } = args.data
    const settings = args.settings
    const series = []
    series.push({
      type: 'liquidFill',
      data: [...measures],
      ...settings
    })
    return series
  }

  liquidfill (data, settings, extra) {
    const { isEmptyData } = extra
    const { tooltip } = settings

    if (isEmptyData) return {}

    const series = chart_LiquidfillChart.getSeries({ data, settings })

    const options = {
      tooltip,
      series
    }

    return options
  }
}

/* harmony default export */ var liquidfill_chart = (chart_LiquidfillChart);

// CONCATENATED MODULE: ./src/packages/liquidfill/index.js





/* harmony default export */ var liquidfill = ({
  name: 'VeLiquidfillChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new liquidfill_chart().liquidfill
  }
});

// CONCATENATED MODULE: ./src/packages/polar/chart.js



class chart_PolarChart extends src_BaseChart {
  static getTooltip (settings) {
    return {}
  }

  static getLegend (data) {
    const { measures } = data
    return {
      show: true,
      data: measures.map(v => v.name)
    }
  }

  static getPolar (settings) {
    return {}
  }

  static getAngleAxis (settings) {
    const {
      radial = false,
      startAngle = 90,
      clockwise = true,
      showAngleAxisLine = true,
      showAngleSplitLine = true,
      showAngleAxisLabel = true,
      angleAxisLabelType,
      angleAxisLabelDigits,
      angleAxisMax,
      angleAxisMin
    } = settings

    return {
      type: radial ? 'category' : 'value',
      clockwise,
      startAngle,
      min: angleAxisMin || null,
      max: angleAxisMax || null,
      axisLine: { show: showAngleAxisLine },
      axisTick: { show: showAngleAxisLine },
      splitLine: { show: showAngleSplitLine },
      axisLabel: {
        show: showAngleAxisLabel,
        margin: 10,
        fontWeight: 400,
        formatter: value => formatMeasure(angleAxisLabelType, value, angleAxisLabelDigits)
      }
    }
  }

  static getRadiusAxis (settings) {
    const {
      radial = false
    } = settings

    return {
      type: radial ? 'value' : 'category',
      z: 10
    }
  }

  // build series
  static getSeries ({ data, settings }) {
    const { measures } = data
    const {
      polarType = 'line',
      stack = null,
      itemStyle = {},
      roundCap = false,
      ...others
    } = settings

    const series = measures.map(({ name }, idx) => {
      return {
        type: polarType,
        stack,
        roundCap,
        coordinateSystem: 'polar',
        itemStyle: itemStyle[name] || {},
        ...others
      }
    })
    return series
  }

  polar (data, settings, extra) {
    const {
      legendVisible,
      tooltipVisible,
      isEmptyData
    } = extra

    if (isEmptyData) return {}

    const tooltip = tooltipVisible && chart_PolarChart.getTooltip(settings)

    const legend = legendVisible && chart_PolarChart.getLegend(data)

    const polar = chart_PolarChart.getPolar(settings)

    const angleAxis = chart_PolarChart.getAngleAxis(settings)
    const radiusAxis = chart_PolarChart.getRadiusAxis(settings)

    const dataset = !isEmptyData && getDataset(data, settings, extra)

    // console.log(dataset)

    const series = chart_PolarChart.getSeries({ data, settings })

    const options = {
      tooltip,
      legend,
      polar,
      // xAxis
      angleAxis,
      // yAxis
      radiusAxis,
      dataset,
      series
    }

    console.log(JSON.stringify(options))

    return options
  }
}

/* harmony default export */ var polar_chart = (chart_PolarChart);

// CONCATENATED MODULE: ./src/packages/polar/index.js







/* harmony default export */ var packages_polar = ({
  name: 'VePolarChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new polar_chart().polar
  }
});

// CONCATENATED MODULE: ./src/packages/sankey/chart.js


class chart_SankeyChart extends src_BaseChart {
  static getTooltip (settings) {
    return {}
  }

  // build series
  static getSeries ({ data, settings }) {
    const { dimensions, measures } = data
    const {
      orient = 'horizontal',
      draggable = true,
      focusNodeAdjacency = false,
      ...others
    } = settings

    return {
      type: 'sankey',
      data: dimensions, // same as nodes
      edges: measures, // same as links
      orient,
      draggable,
      focusNodeAdjacency,
      ...others
    }
  }

  sankey (data, settings, extra) {
    const {
      tooltipVisible,
      isEmptyData
    } = extra

    if (isEmptyData) return {}

    const tooltip = tooltipVisible && chart_SankeyChart.getTooltip(settings)

    const series = chart_SankeyChart.getSeries({ data, settings })

    const options = {
      tooltip,
      series
    }

    // console.log(JSON.stringify(options))

    return options
  }
}

/* harmony default export */ var sankey_chart = (chart_SankeyChart);

// CONCATENATED MODULE: ./src/packages/sankey/index.js





/* harmony default export */ var sankey = ({
  name: 'VeSankeyChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new sankey_chart().sankey
  }
});

// CONCATENATED MODULE: ./src/packages/barpie/chart.js







class chart_BarpieChart extends src_BaseChart {
  // build tooltip
  static getBarTooltip (data, settings) {
    const { tooltipOptions, childSetting = { series: {}, legend: {}, legendShow: {}, contentSize: {} } } = settings
    const { series, legend, ...others } = childSetting
    function returnPieData (data, dimensionName) {
      return {
        series: {
          type: 'pie',
          data: data,
          center: ['20%', '50%'],
          label: {
            show: false
          },
          ...series
        },
        tooltip: {
          trigger: 'item',
          formatter: (params) => {
            return params.name + ' : ' + params.value + ' (' + params.percent + '%)'
          }
        },
        color: ['#426fff', '#40adff', '#3fdace', '#18bdb0', '#ffda3e', '#ffa900', '#83dd89', '#bedf65', '#956bfd', '#f67bb2'],
        animation: false,
        legend: {
          type: 'scroll',
          orient: 'vertical',
          top: '5%',
          left: '40%',
          data: data, // 可配置name,icon,textStyle
          itemWidth: 10,
          itemHeight: 6,
          textStyle: {
            color: 'black',
            fontSize: 12,
            fontFamily: 'sans-serif',
            rich: {
              name: {
                width: 100,
                align: 'left'
              },
              value: {
                width: 100,
                align: 'left'
              },
              percent: {
                width: 50,
                height: '14',
                align: 'left'
              }
            }
          },
          tooltip: {
            show: true,
            formatter: (params) => {
              let index = dimensionName.indexOf(params.name)
              let value = data[index].value.toLocaleString('en-US', { maximumFractionDigits: 2 })
              return `${params.name} : ${value}`
            }
          },
          pageIconColor: '#426FFF', // 翻页下一页的三角按钮颜色
          pageIconInactiveColor: '#aaa', // 翻页（即翻页到头时）
          pageIconSize: 10, // 翻页按钮大小
          pageButtonItemGap: 5, // 翻页按钮的两个之间的间距
          formatter: (name) => {
            let index = dimensionName.indexOf(name)
            let legendShow = {
              name: true,
              value: true,
              percent: true,
              ...childSetting['legendShow']
            }
            const sum = data.reduce((accumulator, currentValue) => {
              return accumulator + currentValue.value
            }, 0)
            let p = (data[index].value / sum * 100).toFixed(childSetting['toFix'] || 2)
            let value = data[index].value.toLocaleString('en-US', { maximumFractionDigits: 2 })
            let thisName = name.length > 10 ? name.substr(0, 10) + '...' : name
            if (!legendShow.value && !legendShow.percent) {
              return '{name|' + thisName + '}'
            } else if (!legendShow.value) {
              return '{name|' + thisName + '}{percent|' + p + '%}'
            } else if (!legendShow.percent) {
              return '{name|' + thisName + '}{value|' + value + '}'
            } else {
              return '{name|' + thisName + '}{value|' + value + '}{percent|' + p + '%}'
            }
          },
          ...legend
        },
        ...others
      }
    }

    function initPieTooltip (data, dimensionName) {
      setTimeout(() => { // 使用延迟机制，先执行formatter的div创建
        if (document.getElementById('pieTooltip') !== null) {
          let tooltipChart = external_echarts_default.a.init(document.getElementById('pieTooltip'))
          tooltipChart.setOption(returnPieData(data, dimensionName))
        }
      }, 0)
    }

    return {
      trigger: 'axis',
      axisPointer: { // 坐标轴指示器，坐标轴触发有效
        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
      },
      position: function (pos, params, dom, rect, size) {
        // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。
        let obj = { top: pos[1] - 200 }
        obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5
        return obj
      },
      show: true,
      enterable: true,
      hideDelay: 500,
      backgroundColor: 'rgb(255,255,255,0.94)',
      textStyle: {
        color: 'black'
      },
      ...tooltipOptions,
      formatter: (params) => {
        let dax = params[0].dataIndex
        let childData = data.childData[dax]
        let dimensionName = childData.map(item => {
          item.icon = item.icon ? item.icon : 'circle'
          return item.name
        })
        let contentSize = {
          width: '500px',
          height: '200px',
          ...childSetting['contentSize']
        }
        initPieTooltip(childData, dimensionName)
        return `<div id="tooltip" style="width: ${contentSize['width']};height: ${contentSize['height']}+30px;border-radius: 2px;box-shadow: 0 0 20px 0 rgba(110, 117, 145, 0.1);padding: 10px;">${params[0].name}<br/>
                 <div id="pieTooltip" style="width: ${contentSize['width']};height: ${contentSize['height']};"></div></div>`
      }
    }
  }

  // build legend
  static getBarLegend (data, settings) {
    const { measures } = data
    const { legendType, legendPadding, waterfall, legendOptions } = settings
    let result = {
      type: legendType || 'plain',
      padding: legendPadding || 5,
      ...legendOptions
    }
    // 当配置项填入waterfall,瀑布图默认将图例去除secondaryMeasure--by:jeff
    if (waterfall && waterfall === true) {
      result['data'] = measures.filter(({ name }) => {
        if (name !== 'secondaryMeasure') return name
      })
    }
    return result
  }

  // build grid
  static getBarGrid (isBar) {
    const BarGrid = {
      right: 30,
      bottom: 10,
      left: 30,
      containLabel: true
    }
    return isBar ? BarGrid : base_options_options.grid
  }

  // build dimension Axis
  static getBarDimAxis (settings) {
    const {
      dimAxisType,
      dimAxisLineShow,
      dimAxisLabelShow,
      dimAxisLabelColor,
      xAxisName,
      xAxisSplitLine,
      dimAxisLabelRotate,
      dimAxisPointerType
    } = settings

    const axisItem = {
      type: dimAxisType,
      axisLine: {
        show: Array.isArray(dimAxisLineShow) ? dimAxisLineShow[0] : dimAxisLineShow
      },
      axisTick: {
        show: false
      },
      axisLabel: {
        show: Array.isArray(dimAxisLabelShow) ? dimAxisLabelShow[0] : dimAxisLabelShow,
        margin: 10,
        fontWeight: 400,
        color: Array.isArray(dimAxisLabelColor) ? dimAxisLabelColor[0] : dimAxisLabelColor,
        rotate: dimAxisLabelRotate
      },
      axisPointer: {
        show: true,
        type: dimAxisPointerType
      }
    }
    if (xAxisName) {
      axisItem.name = xAxisName
    }

    if (xAxisSplitLine) {
      axisItem.splitLine = xAxisSplitLine
    }

    const disAxis = []
    disAxis.push(axisItem)
    return disAxis
  }

  // build measure axis
  static getBarMeaAxis (data, settings) {
    const {
      meaAxisType,
      meaAxisDigits,
      meaAxisLineShow,
      meaAxisLabelShow,
      meaAxisLabelColor,
      meaAxisLabelRotate,
      yAxisScale = false,
      percentage = false,
      yAxisName,
      yAxisInterval,
      yAxisMax,
      yAxisMin
    } = settings

    const meaAxisBase = {
      type: 'value',
      scale: yAxisScale,
      axisTick: {
        show: false
      },
      min: percentage ? 0 : null,
      max: percentage ? 1 : null
    }

    const meaAxis = []
    meaAxisType.forEach((type, i) => {
      const axisLabel = {
        show: Array.isArray(meaAxisLabelShow) ? meaAxisLabelShow[i] : meaAxisLabelShow,
        margin: 10,
        fontWeight: 400,
        color: Array.isArray(meaAxisLabelColor) ? meaAxisLabelColor[i] : meaAxisLabelColor,
        rotate: meaAxisLabelRotate
      }
      if (type !== 'normal') {
        // Y轴标签格式化后保留几位小数兼容之前版本类型
        if (lodash_es_isArray(meaAxisDigits)) {
          let num = lodash_es_isUndefined(meaAxisDigits[i]) ? 0 : meaAxisDigits[i]
          axisLabel.formatter = value => formatMeasure(type, value, num)
        } else {
          axisLabel.formatter = value => formatMeasure(type, value, meaAxisDigits)
        }
      }
      const axisLine = {
        show: Array.isArray(meaAxisLineShow) ? meaAxisLineShow[i] : meaAxisLineShow
      }

      const axisItem = {
        ...meaAxisBase,
        axisLabel,
        axisLine
      }
      if (yAxisName && yAxisName.length) {
        axisItem['name'] = yAxisName[i]
      }
      if (yAxisInterval && yAxisInterval.length) {
        if (yAxisInterval[i]) { // 容错处理，当第二个值为空时，不设置interval
          axisItem['interval'] = Number(yAxisInterval[i])
        }
      }
      // 当开启百分比模式时，轴最大和最小刻度设置无效
      if (percentage === false && yAxisMax && yAxisMax.length) {
        axisItem['max'] = yAxisMax[i]
      }
      if (percentage === false && yAxisMin && yAxisMin.length) {
        axisItem['min'] = yAxisMin[i]
      }
      meaAxis.push(axisItem)
    })
    return meaAxis
  }

  // build label
  static getBarLabel (setLabel, isBar) {
    const {
      position = isBar ? 'right' : 'top',
      formatType = 'currency',
      formatDigits = 0,
      ...others
    } = setLabel
    const formatter = params => {
      const { value, seriesIndex } = params
      // dataset formatter need shift the value
      value.shift()
      return formatMeasure(formatType, value[seriesIndex], formatDigits)
    }
    return {
      position,
      formatter,
      ...others
    }
  }

  // build series
  static getBarSeries (data, settings, isBar) {
    const { measures } = data
    const {
      label = {},
      showLine = [],
      stack = null,
      secondMeaAxis = [],
      itemStyle = {},
      waterfall,
      markLine = null,
      markArea = null,
      ...others
    } = settings

    const axisIndexName = isBar ? 'xAxisIndex' : 'yAxisIndex'
    const series = []
    const stackMap = stack && getStackMap(stack)

    // deviated from markLine/markArea of the series
    if (markLine || markArea) {
      series.push({ type: 'bar', name: '', data: [], markLine, markArea })
    }

    measures.forEach(({ name }) => {
      // label数据类型调整为对象或者数组，Object类型为全部数据维度添加配置，Array类型根据每项name名字去修改配置----by:Jeff
      let setLabel = {}
      if (label instanceof Array) {
        setLabel = label.filter(item => item.name === name)[0]
        if (setLabel === undefined) setLabel = {}
      } else {
        setLabel = label
      }
      // ------------end-----------
      const type = showLine.includes(name) ? 'line' : 'bar'
      const seriesItem = {
        type,
        name,
        label: chart_BarpieChart.getBarLabel(setLabel, isBar),
        stack: stack && stackMap[name],
        [axisIndexName]: secondMeaAxis.includes(name) ? '1' : '0',
        itemStyle: itemStyle[name] ? itemStyle[name] : {},
        ...others
      }
      // 当配置项填入waterfall,瀑布图默认将secondaryMeasure图设置透明--by:jeff
      if (waterfall && waterfall === true) {
        if (name === 'secondaryMeasure') {
          seriesItem['itemStyle'] = waterfallConfig[name]
        }
      }
      series.push(seriesItem)
    })
    return series
  }

  bar (data, settings, extra) {
    const { tooltipVisible, legendVisible, isEmptyData } = extra
    const {
      direction = 'column',
      secondMeaAxis = null,
      yAxisLabelType,
      yAxisLabelDigits = 0,
      yAxisName,
      yAxisLabelShow = [true, true],
      yAxisLineShow = [true, true],
      yAxisLabelColor = [null, null],
      xAxisLabelType,
      xAxisLabelDigits = 0,
      xAxisName,
      xAxisLabelShow = true,
      xAxisLineShow = true,
      xAxisLabelColor = null,
      xAxisLabelRotate = 0,
      yAxisLabelRotate = 0,
      xAxisPointerType,
      yAxisPointerType
    } = settings

    // 默认柱状图
    // TODO 此处注意值与命名语义相反，true代表是条形图，false是柱图
    const isBar = direction !== 'column' && direction === 'row'

    const defaultMeaAxisType = secondMeaAxis !== null ? ['normal', 'normal'] : ['normal']

    settings.meaAxisType = (isBar ? xAxisLabelType : yAxisLabelType) || defaultMeaAxisType
    settings.meaAxisDigits = isBar ? xAxisLabelDigits : yAxisLabelDigits
    settings.meaAxisName = (isBar ? xAxisName : yAxisName) || []
    settings.meaAxisLabelShow = (isBar ? xAxisLabelShow : yAxisLabelShow)
    settings.meaAxisLineShow = (isBar ? xAxisLineShow : yAxisLineShow)
    settings.meaAxisLabelColor = (isBar ? xAxisLabelColor : yAxisLabelColor)
    settings.meaAxisLabelRotate = isBar ? xAxisLabelRotate : yAxisLabelRotate
    settings.dimAxisType = (isBar ? yAxisLabelType : xAxisLabelType) || 'category'
    settings.dimAxisDigits = isBar ? yAxisLabelDigits : xAxisLabelDigits
    settings.dimAxisName = (isBar ? yAxisName : xAxisName) || ''
    settings.dimAxisLabelShow = (isBar ? yAxisLabelShow : xAxisLabelShow)
    settings.dimAxisLineShow = (isBar ? yAxisLineShow : xAxisLineShow)
    settings.dimAxisLabelColor = (isBar ? yAxisLabelColor : xAxisLabelColor)
    settings.dimAxisLabelRotate = isBar ? yAxisLabelRotate : xAxisLabelRotate
    settings.dimAxisPointerType = isBar ? yAxisPointerType : xAxisPointerType

    // 如果设置了双Y轴，将双Y轴统一设置 meaAxisType
    if (defaultMeaAxisType.length > settings.meaAxisType.length) {
      settings.meaAxisType = defaultMeaAxisType.fill(settings.meaAxisType[0])
    }

    extra.chartType = 'bar'
    const dataset = !isEmptyData && getDataset(data, settings, extra)

    const tooltip = tooltipVisible && chart_BarpieChart.getBarTooltip(data, settings)

    const legend = legendVisible && chart_BarpieChart.getBarLegend(data, settings)

    const grid = chart_BarpieChart.getBarGrid(isBar)

    const xAxis = isBar ? chart_BarpieChart.getBarMeaAxis(data, settings) : chart_BarpieChart.getBarDimAxis(settings)

    const yAxis = isBar ? chart_BarpieChart.getBarDimAxis(settings) : chart_BarpieChart.getBarMeaAxis(data, settings)

    const series = chart_BarpieChart.getBarSeries(data, settings, isBar)

    // 处理X轴和Y轴翻转
    const { yAxisInverse, xAxisInverse } = settings
    if (yAxisInverse !== undefined) yAxis.forEach((i, index) => { i.inverse = Array.isArray(yAxisInverse) ? yAxisInverse[index] : yAxisInverse })
    if (xAxisInverse !== undefined) xAxis.forEach(i => { i.inverse = xAxisInverse })

    // build echarts options
    const options = {
      grid,
      dataset,
      tooltip,
      legend,
      xAxis,
      yAxis,
      series
    }

    // console.log(options)

    return options
  }
}

/* harmony default export */ var barpie_chart = (chart_BarpieChart);

// CONCATENATED MODULE: ./src/packages/barpie/index.js





/* harmony default export */ var barpie = ({
  name: 'VeBarpieChart',
  mixins: [HocEcharts],
  created () {
    this.chartHandler = new barpie_chart().bar
  }
});

// CONCATENATED MODULE: ./src/index.js

















const components = [
  bar,
  donut,
  funnel,
  gauge,
  geo,
  line,
  pie,
  radar,
  scatter,
  treemap,
  sunburst,
  tree,
  wordcloud,
  liquidfill,
  packages_polar,
  sankey,
  barpie
]

const install = Vue => {
  if (install.installed) return
  components.forEach(component => {
    Vue.component(component.name, component)
  })
}

if (typeof window !== 'undefined' && window.Vue) {
  window.Vue.use(install)
  if (install.installed) {
    install.installed = false
  }
}

/* harmony default export */ var src = ({
  install,
  VeBarChart: bar,
  VeDonutChart: donut,
  VeFunnelChart: funnel,
  VeGaugeChart: gauge,
  VeGeoChart: geo,
  VeLineChart: line,
  VePieChart: pie,
  VeRadarChart: radar,
  VeScatterChart: scatter,
  VeTreemapChart: treemap,
  VeSunburstChart: sunburst,
  VeTreeChart: tree,
  VeWordcloudChart: wordcloud,
  VeLiquidfillChart: liquidfill,
  VePolarChart: packages_polar,
  VeSankeyChart: sankey,
  VeBarpieChart: barpie
});

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src);



/***/ }),

/***/ "ff6f":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("068a");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("3a96cc98", content, true, {"sourceMap":false,"shadowMode":false});

/***/ })

/******/ })["default"];