!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("vue-demi"),require("echarts/core"),require("echarts/charts"),require("lodash.clonedeep"),require("echarts/components"),require("echarts/renderers"),require("@vueblocks/vue-use-core")):"function"==typeof define&&define.amd?define(["vue-demi","echarts/core","echarts/charts","lodash.clonedeep","echarts/components","echarts/renderers","@vueblocks/vue-use-core"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).VeBarChart=t(e.VueDemi,e.EchartsCore,e.EchartsCharts,e.CloneDeep,e.EchartsComponents,e.EchartsRenderers,e.VueUseCore)}(this,(function(e,t,n,r,o,a,i){"use strict";function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=s(r);t.use([o.GridComponent,o.TitleComponent,o.TooltipComponent,a.CanvasRenderer]);const p=e=>/^on[^a-z]/.test(e);const d=t=>{const n=e.computed((()=>function(e){const t={};for(const n in e)p(n)||(t[n]=e[n]);return t}(t))),r={};return Object.keys(t).filter((e=>p(e)&&"function"==typeof t[e])).forEach((e=>{const[,...n]=(o=e,o.replace(/([A-Z])([A-Z])/g,"$1-$2").replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[\s_]+/g,"-").toLowerCase()).split("-");var o;const a=1===n.length?n.join(""):n.map(((e,t)=>t>0?e.charAt(0).toLocaleUpperCase()+e.slice(1):e)).join("");r[a]=t[e]})),{echartsAttrs:n,echartsEvents:r}};var u=e.defineComponent({name:"VeChart",inheritAttrs:!1,props:{option:Object,initOptions:Object,theme:[String,Object],setOptionOpts:Object,height:{type:Number,default:400},needUpdate:{type:Boolean,default:!1}},setup(n,{attrs:r}){const o=e.toRef(n,"option"),a=e.toRef(n,"theme"),s=e.toRef(n,"initOptions"),c=e.toRef(n,"setOptionOpts"),p=e.toRef(n,"needUpdate"),u=e.ref(),l=e.shallowRef(),h=e.ref({}),{echartsEvents:O}=d(r),m=()=>{l.value&&l.value.resize()},b=()=>{l.value&&(l.value.dispose(),l.value=void 0)},f=r=>{var o;u.value&&(l.value=t.init(u.value,n.theme,{renderer:"canvas"}),r&&l.value.setOption(r),o=l.value,Object.keys(O).forEach((e=>{const t=O[e];t&&(0===e.indexOf("zr:")?o.getZr().on(e.slice(3).toLowerCase(),t):o.on(e,t))})),e.nextTick(m))},j=(e,t)=>{l.value?l.value.setOption(e,t):f(e)};return i.useResizeObserver(u,(([e])=>{h.value=e.contentRect,m()})),e.watch(p,(e=>{e&&o.value&&(c.value?j(o.value,c.value):j(o.value))}),{deep:!0}),e.watch([a,s],(()=>{b(),f()}),{deep:!0}),e.onMounted((()=>{o.value&&f(o.value)})),e.onUnmounted(b),{echartsRef:u,echartsInstance:l,setOption:j}},render(t){const n={width:"auto",height:`${t.height}px`};return e.h("div",{ref:"echartsRef",style:n})}}),l=e.defineComponent({props:{title:Object,legend:Object,grid:Object,xAxis:[Object,Array],yAxis:[Object,Array],polar:Object,radiusAxis:Object,angleAxis:Object,radar:[Object,Array],dataZoom:[Object,Array],visualMap:[Object,Array],tooltip:Object,axisPointer:Object,toolbox:Object,brush:Object,geo:Object,parallel:Object,parallelAxis:Array,singleAxis:Array,timeline:Object,graphic:Object,calendar:Object,dataset:Object,aria:Object,series:[Object,Array],darkMode:{type:[Boolean,String],default:"auto"},color:Array,backgroundColor:[Object,String],textStyle:Object,animation:{type:Boolean,default:!0},animationThreshold:Number,animationDuration:[Number,Function],animationEasing:[String,Function],animationDelay:[Number,Function],animationDurationUpdate:[Number,Function],animationEasingUpdate:[String,Function],animationDelayUpdate:[String,Function],stateAnimation:Object,blendMode:String,hoverLayerThreshold:Number,useUTC:{type:Boolean,default:!1},options:Object,media:Array,data:[Object,Array],settings:[Object,Array],loading:{type:Boolean,default:!1},emptyText:String,option:{type:[Object,Array],default:{}}},data:()=>({initOptions:{renderer:"canvas"},needUpdate:!1,setOptionOpts:{},mergedOption:{}}),computed:{chartOpts(){return{option:this.mergedOption,initOptions:this.initOptions,needUpdate:this.needUpdate,setOptionOpts:this.setOptionOpts}}},created(){this.mergedOption=this.option,Object.keys(this.$props).filter((e=>!/data|setting|height|loading|emptyText/.test(e))).forEach((e=>{this.$watch(e,(t=>{const n="option"===e?this.option:{[e]:t};this.mergePropsToOption(n),this.manualUpdate()}),{deep:!0,immediate:!0})}))},beforeUnmount(){this.mergedOption={}},methods:{mergePropsToOption(e){const t=c.default(this.mergedOption);this.mergedOption={...t,...e}},manualUpdate(){this.needUpdate=!0,this.$nextTick((()=>{this.needUpdate=!1}))}},render(){return e.h(u,this.chartOpts)}});return t.use([n.BarChart]),e.defineComponent({name:"VeBarChart",extends:l,setup(e){}})}));
